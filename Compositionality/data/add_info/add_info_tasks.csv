problem,problem_id,dsl,full_dsl,step,correct,output,id,task_id_mc_larc,description_output,ChatGPT Response1,ChatGPT Response2,ChatGPT Response3,ChatGPT Response4
1,025d127b.json,"['move_right', 'pixel_color', 'pixel_color', 'complete']","['move_right(self.temp_state, object1)', 'pixel_color([(5, 4)], 4)', 'pixel_color([(4, 9)], 4)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 4, 4, 4, 4, 4, 0, 0], [0, 0, 4, 0, 0, 0, 0, 0, 4, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 4, 0, 0, 0, 0, 4], [0, 0, 0, 0, 4, 4, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",025d127b,3,"To make the output, you have to...copy input grid over. find the bottom of the shape. Go up to the next row with the multicolored blocks and move everything over one row. Everything except the bottom row and the block that connect to the bottom row on the right side will have shifted one block over to the left.","To make the output, you have to...copy input grid over. find the top of the shape. Go down to the next row with the multicolored blocks and move everything over one row. Everything except the top row and the block that connect to the top row on the left side will have shifted one block over to the right.","To make the output, you have to...mirror the input grid. find the bottom of the shape. Go up to the next row with the multicolored blocks and move everything over one row. Everything but the lowest row and the rectangle linking the lowest row on the left will have been moved one block to the right.","To make the output, you have to...copy input grid over. find the bottom of the shape. Go up to the next row with the multicolored blocks and move everything over one row. Everything except the bottom row and the block that connect to the bottom row on the left side will have shifted one block over to the left.","To make the output, you have to...rotate the input grid 90 degrees. find the bottom of the shape. Go up to the next row with the multicolored blocks and move everything over one row. Everything except the bottom row and the block that connect to the bottom row on the right side will have shifted one block over to the left."
4,05f2a901.json,"['move_left', 'move_left', 'complete']","['move_left(self.temp_state, object1)', 'move_left(self.temp_state, object1)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0, 0, 0], [0, 8, 8, 2, 2, 0, 0, 0, 0, 0], [0, 8, 8, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",05f2a901,7,"To make the output, you have to...keep the blue 2x2 square in the same spot. the red shape needs to move until it is touching the blue 2x2 square. You should move the red shape towards the blue 2x2 square either vertically or horizontally.","To make the output, you have to...keep the blue 2x2 square in the same spot. Move the red shape away from the blue 2x2 square either vertically or horizontally.","To make the output, you have to...keep the green 2x2 square in the same spot. Move the red shape away from the green 2x2 square either vertically or horizontally.","To make the output, you have to...keep the blue 3x3 rectangle in the same spot. Move the red shape until it is touching the blue 3x3 rectangle either vertically or horizontally.","To make the output, you have to...keep the red 2x2 square in the same spot. Force the blue shape to touch the red 2x2 square either vertically or horizontally."
6,08ed6ac7.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 1)', 'obj_color(self.temp_state, object2, 2)', 'obj_color(self.temp_state, object3, 3)', 'obj_color(self.temp_state, object4, 4)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 2, 0, 0, 0], [0, 1, 0, 0, 0, 2, 0, 0, 0], [0, 1, 0, 0, 0, 2, 0, 3, 0], [0, 1, 0, 0, 0, 2, 0, 3, 0], [0, 1, 0, 4, 0, 2, 0, 3, 0], [0, 1, 0, 4, 0, 2, 0, 3, 0], [0, 1, 0, 4, 0, 2, 0, 3, 0]]",08ed6ac7,9,"To make the output, you have to...change the color of the tallest to blue, then second talest to red,third tallest to green,then finally shortest to yellow for both pairs.","To make the output, you have to...change the color of the shortest to blue, then second shortest to red, third shortest to green, then finally the tallest to yellow for both pairs.","To make the output, you have to...change the color of the tallest to blue, then second tallest to green, third tallest to red, then finally shortest to yellow for both pairs.","To make the output, you have to...change the color of the shortest to green, then second shortest to red, third shortest to yellow, then finally the tallest to blue for both pairs.","To make the output, you have to...change the color of the shortest to red, then second shortest to blue, third shortest to green, then finally the tallest to yellow for both pairs."
10,0ca9ddb6.json,"['diagonal_line', 'diagonal_line', 'pixel_color', 'horizontal_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color']","['diagonal_line(self.temp_state, [(5, 0), (1, 4)], 4)', 'diagonal_line(self.temp_state, [(1, 0), (5, 4)], 4)', 'pixel_color([(3, 2)], 2)', 'horizontal_line(self.temp_state, [(2, 4), (2, 8)], 7)', 'vertical_line(self.temp_state, [(4, 6), (0, 6)], 7)', 'pixel_color([(2, 6)], 1)', 'pixel_color([(6, 6)], 4)', 'pixel_color([(6, 8)], 4)', 'pixel_color([(8, 6)], 4)', 'pixel_color([(8, 8)], 4)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 7, 0, 0], [0, 4, 0, 4, 0, 7, 1, 7, 0], [0, 0, 2, 0, 0, 0, 7, 0, 0], [0, 4, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 4], [0, 6, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 4, 0, 4]]",0ca9ddb6,14,"To make the output, you have to...copy image exactly. Where there's a red square, put yellow squares at it's corners (4 total). Where there's a blue square, put orange squares directly above and below it (4 total). Do nothing with light blue or pink squares.","To make the output, you have to...copy the image exactly. Where there's a yellow square, put red squares at its corners (4 total). Where there's an orange square, put blue squares directly above and below it (4 total). Do nothing with gray or green squares.","To make the output, you have to...mirror the image exactly. Where there's a red square, put yellow squares at its corners (4 total). Where there's a blue square, put orange squares directly above and below it (4 total). Do nothing with light blue or pink squares.","To make the output, you have to...copy the image exactly. Where there's a green square, put black squares at its corners (4 total). Where there's a gray square, put brown squares directly above and below it (4 total). Do nothing with red or blue squares.","To make the output, you have to...rotate the image exactly. Where there's a red square, put yellow squares at its corners (4 total). Where there's a blue square, put orange squares directly above and below it (4 total). Do nothing with light blue or pink squares."
11,0d3d703e.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(0, 0)], 9)', 'pixel_color([(1, 0)], 9)', 'pixel_color([(2, 0)], 9)', 'pixel_color([(0, 1)], 5)', 'pixel_color([(1, 1)], 5)', 'pixel_color([(2, 1)], 5)', 'pixel_color([(0, 2)], 4)', 'pixel_color([(1, 2)], 4)', 'pixel_color([(2, 2)], 4)', 'complete(self.temp_state)']",10,TRUE,"[[9, 5, 4], [9, 5, 4], [9, 5, 4]]",0d3d703e,15,"To make the output, you have to...change the color of the grid column into specific color. grey to blue, light blue to brown, pink to red, green to yellow and vice versa.","To make the output, you have to...change the color of the grid column into specific color. Pink to blue, yellow to brown, green to red, light blue to grey and vice versa.","To make the output, you have to...maintain the color of the grid column. Grey stays grey, light blue stays light blue, pink stays pink, green stays green and vice versa.","To make the output, you have to...change the color of the grid row into specific color. Grey to blue, pink to brown, green to red, yellow to light blue and vice versa.","To make the output, you have to...change the color of the pixel into specific color. Grey to blue, green to brown, red to pink, yellow to grey and vice versa."
13,0e206a2e.json,"['diagonal_line', 'pixel_color', 'diagonal_line', 'vertical_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'obj_color', 'obj_color', 'obj_color']","['diagonal_line(self.temp_state, [(11, 1), (15, 5)], 5)', 'pixel_color([(15, 3)], 5)', 'diagonal_line(self.temp_state, [(17, 9), (21, 13)], 5)', 'vertical_line(self.temp_state, [(20, 12), (17, 12)], 5)', 'diagonal_line(self.temp_state, [(18, 8), (21, 11)], 5)', 'pixel_color([(16, 11)], 5)', 'pixel_color([(17, 10)], 5)', 'obj_color(self.temp_state, object1, 0)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object3, 0)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",0e206a2e,17,"To make the output, you have to...try to fill up the empty space between the three color boxes as the original object given.","To make the output, you have to...try to leave the empty space between the three color boxes as the original object given.","To make the output, you have to...try to fill up the empty space with brown color between the three color boxes as the original object given.","To make the output, you have to...try to fill up the filled space between the three color boxes as the original object given.","To make the output, you have to...try to fill up the empty space between the four color boxes as the original object given."
14,11852cab.json,"['pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(4, 1)], 4)', 'pixel_color([(4, 5)], 4)', 'pixel_color([(6, 3)], 4)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 4, 0, 1, 0, 0, 0, 0], [0, 0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 4, 0, 1, 0, 4, 0, 0, 0, 0], [0, 0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 1, 0, 4, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",11852cab,19,"To make the output, you have to...complete the pattern that is not there by color each side with the color that is not there to complete the pattern.","To make the output, you have to...complete the pattern that is there by color each side with the color that is already there to complete the pattern.","To make the output, you have to...finish the pattern that is not there by coloring each corner with the color that is not there to finish the pattern.","To make the output, you have to...complete the pattern that is absent by coloring each side with the color that is there to complete the pattern.","To make the output, you have to...complete the pattern that is not there by color each side with opposite color that is there to complete the pattern."
15,150deff5.json,"['horizontal_line', 'vertical_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line']","['horizontal_line(self.temp_state, [(0, 4), (0, 8)], 2)', 'vertical_line(self.temp_state, [(4, 6), (0, 6)], 2)', 'horizontal_line(self.temp_state, [(4, 2), (4, 6)], 2)', 'horizontal_line(self.temp_state, [(2, 0), (2, 4)], 2)', 'horizontal_line(self.temp_state, [(0, 1), (0, 4)], 8)', 'horizontal_line(self.temp_state, [(1, 1), (1, 4)], 8)', 'horizontal_line(self.temp_state, [(2, 3), (2, 6)], 8)', 'horizontal_line(self.temp_state, [(3, 3), (3, 6)], 8)', 'horizontal_line(self.temp_state, [(5, 4), (5, 7)], 8)', 'horizontal_line(self.temp_state, [(6, 4), (6, 7)], 8)']",10,TRUE,"[[0, 0, 8, 8, 0, 2, 2, 2, 0, 0, 0], [0, 0, 8, 8, 0, 0, 2, 0, 0, 0, 0], [0, 2, 2, 2, 8, 8, 2, 0, 0, 0, 0], [0, 0, 0, 0, 8, 8, 2, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",150deff5,22,"To make the output, you have to...fill in pattern completely with blue and red, to form 2x2 blue pattern and 1x3 red patterns.","To make the output, you have to...fill in pattern completely with green and yellow, to form 2x2 green pattern and 1x3 yellow patterns.","To make the output, you have to...fill in pattern completely with pink and gray, to form 2x2 pink pattern and 1x3 gray patterns.","To make the output, you have to...fill in pattern completely with light blue and brown, to form 2x2 light blue pattern and 1x3 brown patterns.","To make the output, you have to...fill in pattern completely with green and red, to form 3x3 green pattern and 2x2 red patterns."
18,1b60fb0c.json,"['horizontal_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(5, 4), (5, 0)], 2)', 'vertical_line(self.temp_state, [(8, 1), (2, 1)], 2)', 'pixel_color([(4, 2)], 2)', 'pixel_color([(5, 0)], 2)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 2, 0, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 1, 1, 0, 1, 1, 0], [0, 2, 0, 0, 0, 1, 0, 0, 1, 0], [0, 2, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]]",1b60fb0c,26,"To make the output, you have to...draw with red color to follow the pattern of the blue section and make one figure with 4 sections that look the same.","To make the output, you have to...draw with blue color to follow the pattern of the red section and make one figure with 4 sections that look the same.","To make the output, you have to...draw with red color to follow the pattern of the yellow section and make one figure with 3 sections that look the same.","To make the output, you have to...draw with green color to follow the pattern of the blue section and make two figures with 4 sections that look the same.","To make the output, you have to...draw with red color but not follow the pattern of the blue section and make one figure with 4 sections that look the same."
20,1caeab9d.json,"['move_down', 'move_down', 'move_down', 'move_down', 'move_up', 'move_up', 'move_up', 'move_up', 'move_up', 'move_up']","['move_down(self.temp_state, object1)', 'move_down(self.temp_state, object1)', 'move_down(self.temp_state, object3)', 'move_down(self.temp_state, object3)', 'move_up(self.temp_state, object5)', 'move_up(self.temp_state, object5)', 'move_up(self.temp_state, object5)', 'move_up(self.temp_state, object6)', 'move_up(self.temp_state, object6)', 'move_up(self.temp_state, object6)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [1, 0, 0, 4, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",1caeab9d,29,"To make the output, you have to...keep the blue shape where it is, and move the red and yellow shapes up or down so that they are at the same level as the blue-colored shape.","To make the output, you have to...keep the yellow shape where it is, and move the blue and red shapes up or down so that they are at the same level as the yellow-colored shape.","To make the output, you have to...keep the red shape where it is, and move the blue and yellow shapes left or right so that they are at the same level as the red-colored shape.","To make the output, you have to...keep the blue shape where it is, and move the red and green shapes up or down so that they are at the same level as the blue-colored shape.","To make the output, you have to...shift the red shape to the left, and elevate the blue and yellow shapes so that they reside on the same level as the blue-colored shape."
21,1e0a9b12.json,"['move_down', 'pixel_color', 'move_down', 'move_down', 'pixel_color', 'pixel_color', 'horizontal_line', 'pixel_color', 'complete']","['move_down(self.temp_state, object2)', 'pixel_color([(4, 1)], 2)', 'move_down(self.temp_state, object3)', 'move_down(self.temp_state, object3)', 'pixel_color([(4, 3)], 4)', 'pixel_color([(4, 4)], 3)', 'horizontal_line(self.temp_state, [(0, 0), (0, 4)], 0)', 'pixel_color([(0, 4)], 0)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [5, 0, 0, 0, 0], [5, 2, 0, 4, 0], [5, 2, 6, 4, 3]]",1e0a9b12,31,"To make the output, you have to...think of the grid as a black field and as the colored squares as being objects floating in space. Gravity is suddenly turned on and all of the block fall vertically to the bottom. That produces the correct output grid.","To make the output, you have to...think of the grid as a blue field and as the colored squares as being objects floating in space. Gravity is suddenly turned on and all of the block fall vertically to the bottom. That produces the correct output grid.","To make the output, you have to...think of the grid as a black field and as the colored circles as being objects floating in space. Gravity is suddenly turned on and all of the block fall vertically to the bottom. That produces the correct output grid.","To make the output, you have to...think of the grid as a black field and as the colored squares as being objects floating in space. Gravity is suddenly turned off and all of the block stay stationary. That produces the correct output grid.","To make the output, you have to...think of the grid as a black field and as the colored squares as being objects floating in space. Gravity is suddenly turned on and all of the block move horizontally to the side That produces the correct output grid."
24,1f642eb9.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(3, 2)], 9)', 'pixel_color([(5, 2)], 3)', 'pixel_color([(6, 2)], 4)', 'pixel_color([(3, 3)], 6)', 'pixel_color([(3, 5)], 2)', 'pixel_color([(4, 5)], 7)', 'pixel_color([(6, 4)], 6)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 6, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [9, 0, 9, 6, 8, 2, 0, 0, 0, 0], [0, 0, 8, 8, 8, 7, 0, 0, 0, 7], [3, 0, 3, 8, 8, 8, 0, 0, 0, 0], [4, 0, 4, 8, 6, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 0, 0, 0, 0]]",1f642eb9,34,"To make the output, you have to...make one similiarly colored squar inside the light blue figure for each colored square around the exterior. Place the colored squares along the most outer edge of the blue figure, closest to their corresponding block.","To make the output, you have to...make one similarly colored rectangle inside the brown figure for each colored square around the exterior. Place the colored squares along the least outer edge of the brown figure, farthest from their corresponding block.","To make the output, you have to...make one differing colored circle inside the pink figure for each colored square around the exterior. Place the colored squares along the least outer edge of the pink figure, farthest from their corresponding block.","To make the output, you have to...make one similarly colored triangle inside the gray figure for each colored square around the exterior. Place the colored squares along the least outer edge of the gray figure, farthest from their corresponding block.","To make the output, you have to...make one similarly colored square inside the green figure for each colored square around the exterior. Place the colored squares along the least outer edge of the green figure, farthest from their corresponding block."
25,1f876c06.json,"['diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'complete']","['diagonal_line(self.temp_state, [(3, 6), (0, 9)], 9)', 'diagonal_line(self.temp_state, [(4, 0), (7, 3)], 6)', 'diagonal_line(self.temp_state, [(1, 0), (7, 6)], 7)', 'diagonal_line(self.temp_state, [(3, 3), (0, 6)], 3)', 'diagonal_line(self.temp_state, [(5, 9), (9, 5)], 4)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 3, 0, 0, 9], [7, 0, 0, 0, 0, 3, 0, 0, 9, 0], [0, 7, 0, 0, 3, 0, 0, 9, 0, 0], [0, 0, 7, 3, 0, 0, 9, 0, 0, 0], [6, 0, 0, 7, 0, 0, 0, 0, 0, 0], [0, 6, 0, 0, 7, 0, 0, 0, 0, 4], [0, 0, 6, 0, 0, 7, 0, 0, 4, 0], [0, 0, 0, 6, 0, 0, 7, 4, 0, 0], [0, 0, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0]]",1f876c06,36,"To make the output, you have to...connect the two same colored blocks in a diagonal to create a same colored line.","To make the output, you have to...connect the two different colored blocks in a diagonal to create a multi colored line.","To make the output, you have to...connect the two same colored blocks in vertical to create a same colored line.","To make the output, you have to...connect the two same colored blocks in a horizontal to create a same colored line.","To make the output, you have to...disconnect the two same colored blocks in a diagonal to create a same colored space."
26,2204b7a8.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object2, 5)', 'obj_color(self.temp_state, object4, 4)', 'obj_color(self.temp_state, object5, 4)', 'obj_color(self.temp_state, object6, 5)', 'obj_color(self.temp_state, object7, 4)', 'obj_color(self.temp_state, object8, 5)', 'obj_color(self.temp_state, object9, 5)', 'obj_color(self.temp_state, object10, 5)', 'obj_color(self.temp_state, object11, 4)', 'complete(self.temp_state)']",10,TRUE,"[[5, 5, 0, 0, 0, 0, 0, 0, 0, 4], [5, 0, 0, 0, 0, 4, 0, 0, 4, 4], [5, 0, 0, 0, 0, 0, 0, 0, 0, 4], [5, 0, 0, 5, 0, 0, 0, 0, 0, 4], [5, 0, 0, 0, 0, 0, 4, 0, 0, 4], [5, 0, 0, 5, 0, 0, 0, 0, 0, 4], [5, 0, 0, 0, 0, 0, 0, 0, 0, 4], [5, 0, 0, 0, 5, 0, 0, 0, 0, 4], [5, 0, 5, 0, 0, 0, 4, 0, 0, 4], [5, 0, 0, 0, 0, 0, 0, 0, 0, 4]]",2204b7a8,39,"To make the output, you have to...copy the input grid. change the color of each pixel in the black field to the color of the border line that each pixel is closest to.","To make the output, you have to...change the color of each pixel in the white field to the color of the border line that each pixel is closest to.","To make the output, you have to...change the color of each pixel in the black field to the color of the border line that each pixel is farthest from.","To make the output, you have to...copy the input grid. Change the color of each pixel in the black field to the color of the border line that each pixel is touching.","To make the output, you have to...copy the input grid. Leave the color of each pixel in the black field to the color of the border line that each pixel is closest to."
27,22168020.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(1, 0), (1, 3)], 4)', 'horizontal_line(self.temp_state, [(2, 4), (2, 9)], 7)', 'horizontal_line(self.temp_state, [(3, 5), (3, 8)], 7)', 'horizontal_line(self.temp_state, [(6, 1), (6, 6)], 3)', 'horizontal_line(self.temp_state, [(7, 2), (7, 5)], 3)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 4, 4, 0, 7, 7, 7, 7, 7, 7], [0, 4, 4, 0, 0, 7, 7, 7, 7, 0], [0, 0, 0, 0, 0, 0, 7, 7, 0, 0], [0, 0, 0, 0, 0, 0, 7, 7, 0, 0], [0, 3, 3, 3, 3, 3, 3, 0, 0, 0], [0, 0, 3, 3, 3, 3, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 0, 0, 0]]",22168020,40,"To make the output, you have to...fill in the area above the four square base until you get to the top of the colored area.","To make the output, you have to...remove the area above the three square base until you get to the side of the colored area.","To make the output, you have to...draw on the area beside the four square base until you get to the bottom of the colored area.","To make the output, you have to...highlight the area below the five square base until you get to the top of the colored area.","To make the output, you have to...empty the area above the four square base until you get to the top of the white area."
28,22233c11.json,"['horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(1, 3), (1, 0)], 8)', 'horizontal_line(self.temp_state, [(0, 3), (0, 0)], 8)', 'pixel_color([(8, 9)], 8)', 'pixel_color([(9, 9)], 8)', 'pixel_color([(0, 0)], 8)', 'pixel_color([(1, 0)], 8)', 'complete(self.temp_state)']",7,TRUE,"[[8, 8, 8, 0, 0, 0, 0, 0, 0, 0], [8, 8, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 3, 0], [0, 0, 0, 0, 0, 0, 3, 3, 3, 0], [0, 0, 0, 0, 0, 0, 3, 3, 3, 0], [0, 0, 0, 3, 3, 3, 0, 0, 0, 0], [0, 0, 0, 3, 3, 3, 0, 0, 0, 0], [0, 0, 0, 3, 3, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 8]]",22233c11,41,"To make the output, you have to...place a light blue tile diagonally on each side of the green tiles, skipping one black tile. Imagine an X shape is being created, except the light blue tiles skip the first diagonal tile (leaving it black) to create one light blue tile on each side.","To make the output, you have to...place a light blue tile diagonally on each side of the green tiles. Imagine an X shape is being created, except the light blue tiles don't skip the first diagonal tile (leaving it light blue) to create one light blue tile on each side.","To make the output, you have to...put a pink tile diagonally on each side of the green tiles, skipping one black tile. Imagine a Z shape is being created, except the pink tiles skip the first diagonal tile (leaving it black) to create one pink tile on each side.","To make the output, you have to...arrange a light blue tile linearly beside every green tile, skipping one black tile. Imagine a continuous line is being created, except the light blue tiles skip the first black tile to create single light blue tile next to each green tile.","To make the output, you have to...lay a brown tile diagonally at each end of the green tiles, leaving one black tile gap. Imagining a V shape being created but the brown tiles skip the first diagonal tile (keep it black) to create one brown tile on each side."
30,228f6490.json,"['obj_color', 'obj_color', 'horizontal_line', 'horizontal_line', 'pixel_color', 'complete']","['obj_color(self.temp_state, object6, 0)', 'obj_color(self.temp_state, object4, 0)', 'horizontal_line(self.temp_state, [(8, 3), (8, 7)], 4)', 'horizontal_line(self.temp_state, [(1, 2), (1, 6)], 7)', 'pixel_color([(2, 4)], 7)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 5, 5, 5, 5, 5, 0, 0, 2], [2, 0, 5, 7, 7, 7, 5, 0, 0, 0], [0, 0, 5, 5, 7, 5, 5, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 0, 0, 2], [0, 0, 0, 0, 0, 2, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 5, 5], [0, 2, 0, 5, 4, 4, 4, 5, 5, 5], [2, 0, 0, 5, 5, 5, 5, 5, 5, 5]]",228f6490,43,"To make the output, you have to...take a colored shape to fill in the hole for each grey square. It will only take one shape per square.","To make the output, you have to...take a colored shape to fill in the hole for each green square. It will only take one shape per square.","To make the output, you have to...take one shape to rub out the strokes for each grey square. It will only take one shape per square.","To make the output, you have to...remove a colored shape to fill in the hole for each grey square. It will only take one shape per square.","To make the output, you have to...take a colored shape to fill in the hole for each grey square. It will take multiple shapes per square."
31,22eb0ac0.json,"['horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(3, 0), (3, 9)], 3)', 'horizontal_line(self.temp_state, [(7, 0), (7, 9)], 6)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 9], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [9, 0, 0, 0, 0, 0, 0, 0, 0, 4]]",22eb0ac0,44,"To make the output, you have to...copy the input. If two blocks across from each other are the same color, fill in the rest of that horizontal row with that color. Don't do anything with the blocks across from each other that are different colors.","To make the output, you have to...copy the input. If two blocks down from each other are the same color, fill in the rest of that vertical column with that color. Don't do anything with the blocks down from each other that are different colors.","To make the output, you have to...copy the input. If two blocks across from each other are the same color, fill in the rest of that horizontal row with a different color. Don't do anything with the blocks across from each other that are different colors.","To make the output, you have to...copy the input. If two blocks across from each other are different colors, fill in the rest of that horizontal row with that color. Don't do anything with the blocks across from each other that are the same colors.","To make the output, you have to...change the input. If two blocks across from each other are the same color, fill in the rest of that horizontal row with that color. Don't do anything with the blocks across from each other that are different colors."
33,253bf280.json,"['horizontal_line', 'horizontal_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(1, 2), (1, 10)], 3)', 'horizontal_line(self.temp_state, [(5, 6), (5, 12)], 3)', 'vertical_line(self.temp_state, [(7, 1), (10, 1)], 3)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 3, 3, 3, 3, 3, 3, 3, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 8, 3, 3, 3, 3, 3, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",253bf280,49,"To make the output, you have to...use green lines to connect light blue dots that are in the same line.","To make the output, you have to...use red lines to connect brown dots that are in the same column.","To make the output, you have to...use yellow lines to connect pink dots that are diagonally aligned.","To make the output, you have to...use gray lines to connect green squares that are at the same height.","To make the output, you have to...use brown lines to separate light blue dots that are in the same row."
34,25d487eb.json,"['vertical_line', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(11, 4), (0, 4)], 8)', 'pixel_color([(0, 4)], 8)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0], [0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0], [0, 4, 4, 4, 8, 4, 4, 4, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",25d487eb,50,"To make the output, you have to...take the smaller color and shoot it out the top.","To make the output, you have to...take the larger color and launch it out the bottom.","To make the output, you have to...take the medium color and eject it out the side.","To make the output, you have to...use the smallest color and push it out the bottom.","To make the output, you have to...grab the bigger color and launch it out the top."
35,25d8a9c8.json,"['obj_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object1, 5)', 'pixel_color([(1, 0)], 0)', 'pixel_color([(1, 1)], 0)', 'pixel_color([(1, 2)], 0)', 'complete(self.temp_state)']",5,TRUE,"[[5, 5, 5], [0, 0, 0], [5, 5, 5]]",25d8a9c8,51,"To make the output, you have to...fill the row with grey if the row has the same colors in the input. Color the row with black if the row contain different colors.","To make the output, you have to...fill the row with grey if the row has different colors in the input. Color the row with black if the row contain the same colors.","To make the output, you have to...fill the row with red if the row has different colors in the input. Color the row with brown if the row contain the same colors.","To make the output, you have to...fill the column with grey if the column has the same colors in the input. Color the column with black if the column contain different colors.","To make the output, you have to...fill the row with light blue if the row has the same colors in the input. Color the row with pink if the row contain different colors."
36,25ff71a9.json,"['move_down', 'complete']","['move_down(self.temp_state, object1)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 0], [2, 0, 0], [2, 0, 0]]",25ff71a9,52,"To make the output, you have to...move all the color move down by one grid.","To make the output, you have to...move all the color up by one grid.","To make the output, you have to...move all the color right by one grid.","To make the output, you have to...move all the color left by one grid.","To make the output, you have to...move all the color diagonally by one grid."
40,29c11459.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(1, 5), (1, 0)], 4)', 'horizontal_line(self.temp_state, [(1, 10), (1, 5)], 8)', 'horizontal_line(self.temp_state, [(4, 5), (4, 0)], 6)', 'horizontal_line(self.temp_state, [(4, 10), (4, 5)], 9)', 'pixel_color([(1, 5)], 5)', 'pixel_color([(4, 5)], 5)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 5, 8, 8, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [6, 6, 6, 6, 6, 5, 9, 9, 9, 9, 9]]",29c11459,59,"To make the output, you have to...move blue to the right to make 5 blue. move red to left to make 5 red. present with color square.","To make the output, you have to...move blue to the left to make 5 blue. move red to right to make 5 red. present with color square.","To make the output, you have to...move blue to the left to make 4 blue. move red to right to make 6 red. present with color square.","To make the output, you have to...move gray to the right to make 5 gray. move green to left to make 5 green. present with color square.","To make the output, you have to...move yellow to the right to make 5 yellow. move pink to left to make 5 pink. present with color square."
43,2bee17df.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(3, 0), (3, 13)], 3)', 'horizontal_line(self.temp_state, [(6, 0), (6, 13)], 3)', 'horizontal_line(self.temp_state, [(10, 0), (10, 13)], 3)', 'vertical_line(self.temp_state, [(0, 4), (13, 4)], 3)', 'vertical_line(self.temp_state, [(13, 10), (0, 10)], 3)', 'vertical_line(self.temp_state, [(0, 9), (13, 9)], 3)', 'complete(self.temp_state)']",7,TRUE,"[[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 3, 0, 8, 8, 8, 3, 3, 8, 2, 2], [8, 8, 8, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 8, 0, 3, 0, 0, 0, 0, 3, 3, 0, 2, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 2, 2, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 0, 2], [8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2], [8, 8, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 2, 2], [8, 8, 0, 2, 3, 2, 2, 0, 0, 3, 3, 2, 2, 2], [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]",2bee17df,62,"To make the output, you have to...copy the input grid into the output. Around the outside of the grid, you will notice some squares are only one square deep around. Take note of these squares. Using green, draw straight lines horizontally and vertically from these squares that are only one deep around the outside, connecting them only to squares on the other side of the grid that also are only one square deep.","To make the output, you have to...eradicate the input grid from the output. Around the interior of the grid, you will observe some squares are only two squares deep inside. Ignore these squares. Using pink, draw zigzag lines horizontally and vertically from these squares that are only two deep on the inside, connecting them only to squares on the other side of the grid that also are only one square shallow.","To make the output, you have to...transfer the output grid into the input. Around the exterior of the rectangle, you will catch sight of some circles are only one circle wide around. Pay attention to these circles. Using grey, sketch straight lines diagonally and zigzag from these circles that are only one wide around the exterior, connecting them only to circles on this side of the rectangle that also is only one circle shallow.","To make the output, you have to...clone the output grid into the input. Around the inside of the grid, you will perceive some hexagons are only one hexagon thick inside. Take note of these hexagons. Using brown, draw curved lines upward and downward from these hexagons that are only one thick around the inside, connecting them only to hexagons on the same side of the grid that are also only one hexagon deep.","To make the output, you have to...move the output grid to the input. Around the interior of the grid, you will see some triangles are only one triangle wide around. Forget about these triangles. Using light blue, draw circular lines horizontally and vertically from these triangles that are only one wide on the outside, connecting them only to triangles on the opposite side of the rectangle that are also only one triangle deep."
44,2c608aff.json,"['horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(9, 2), (9, 7)], 1)', 'horizontal_line(self.temp_state, [(7, 14), (7, 19)], 1)', 'vertical_line(self.temp_state, [(1, 9), (5, 9)], 1)', 'vertical_line(self.temp_state, [(3, 13), (5, 13)], 1)', 'vertical_line(self.temp_state, [(17, 11), (10, 11)], 1)', 'complete(self.temp_state)']",6,TRUE,"[[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 1, 1, 2], [2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2], [2, 2, 1, 1, 1, 1, 1, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]",2c608aff,63,"To make the output, you have to...connect it with the same color as the dot if the dots could connect to the central square with a straight line.","To make the output, you have to...connect it with a different color as the dot if the dots could connect to the central square with a straight line.","To make the output, you have to...connect it with the same color as the rectangle if the rectangles could connect to the central square with a straight line.","To make the output, you have to...connect it with the same color as the dot if the dots could not connect to the central square with a straight line.","To make the output, you have to...disconnect it with the same color as the dot if the dots could connect to the central square with a straight line."
45,2dd70a9a.json,"['horizontal_line', 'vertical_line', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(7, 4), (7, 10)], 3)', 'vertical_line(self.temp_state, [(7, 9), (0, 9)], 3)', 'pixel_color([(1, 8)], 3)', 'complete(self.temp_state)']",4,TRUE,"[[8, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 0, 0], [8, 0, 0, 0, 0, 8, 2, 2, 3, 3, 0, 0, 0], [0, 8, 0, 0, 8, 8, 0, 0, 0, 3, 0, 0, 0], [0, 0, 8, 0, 0, 0, 0, 0, 8, 3, 0, 0, 8], [0, 0, 8, 0, 0, 0, 8, 0, 0, 3, 0, 0, 8], [0, 0, 0, 8, 0, 0, 0, 0, 8, 3, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 8, 0, 0], [8, 0, 8, 3, 3, 3, 3, 3, 3, 3, 8, 0, 0], [0, 8, 8, 0, 0, 8, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0], [0, 8, 8, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0]]",2dd70a9a,65,"To make the output, you have to...start at the green colored area, draw a line to red area. When the green line meet skyblue area, turn left or right toward red area.","To make the output, you have to...start at the blue colored area, draw a line to pink area. When the green line meet brown area, turn left or right toward red area.","To make the output, you have to...start at the yellow colored area, draw a line to gray area. When the green line meet gray area, turn left or right toward red area.","To make the output, you have to...start at the brown colored area, draw a line to pink area. When the green line meet light blue area, turn left or right toward red area.","To make the output, you have to...start at the gray colored area, draw a line to green area. When the green line meet yellow area, turn left or right toward red area."
48,32597951.json,"['diagonal_line', 'diagonal_line', 'diagonal_line', 'complete']","['diagonal_line(self.temp_state, [(10, 7), (15, 12)], 3)', 'diagonal_line(self.temp_state, [(10, 10), (13, 13)], 3)', 'diagonal_line(self.temp_state, [(12, 6), (15, 9)], 3)', 'complete(self.temp_state)']",4,TRUE,"[[1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 8, 3, 8, 8, 3, 8, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 8, 8, 3, 8, 8, 3, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 3, 8, 8, 3, 8, 8, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 8, 3, 8, 8, 3, 8, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]]",32597951,69,"To make the output, you have to...replace the blue squares with green squares to complete a square of a rectangle with the light blue blocks.","To make the output, you have to...replace the green squares with blue squares to complete a circle of a rectangle with the light blue blocks.","To make the output, you have to...replace the blue squares with green squares to complete a hexagon with the light blue blocks.","To make the output, you have to...replace the yellow squares with brown squares to complete a square of a rectangle with the light blue blocks.","To make the output, you have to...replace the blue squares with red squares to complete a square of a triangle with the light blue blocks."
49,3345333e.json,"['obj_color', 'horizontal_line', 'horizontal_line', 'pixel_color', 'vertical_line', 'complete']","['obj_color(self.temp_state, object2, 0)', 'horizontal_line(self.temp_state, [(10, 8), (10, 4)], 5)', 'horizontal_line(self.temp_state, [(8, 8), (8, 4)], 5)', 'pixel_color([(7, 5)], 5)', 'vertical_line(self.temp_state, [(5, 6), (8, 6)], 5)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 5, 5, 5, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 5, 5, 0, 0], [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 0, 5, 0, 5, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",3345333e,70,"To make the output, you have to...remove the unnecessary pattern box in the single color pattern.","To make the output, you have to...add the unnecessary pattern box in the single color pattern.","To make the output, you have to...remove the important pattern box in the two color pattern.","To make the output, you have to...add the unnecessary pattern circle in the single color pattern.","To make the output, you have to...remove the unnecessary pattern box in the multi color pattern."
50,3618c87e.json,"['obj_color', 'obj_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)', 'pixel_color([(4, 2)], 1)', 'pixel_color([(4, 4)], 1)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 5, 0, 5], [5, 5, 1, 5, 1]]",3618c87e,72,"To make the output, you have to...take the blue dots and place them two squares down, with the background still fully black.","To make the output, you have to...take the red dots and place them two squares up, with the background still fully black.","To make the output, you have to...take the blue squares and place them three squares down, with the background still fully brown.","To make the output, you have to...move the yellow dots and place them two squares to the left, with the background still fully black.","To make the output, you have to...take the blue dots and place them two squares down, with the background turning fully gray."
54,36fdfd69.json,"['diagonal_line', 'pixel_color', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(9, 5), (12, 8)], 4)', 'pixel_color([(5, 7)], 4)', 'diagonal_line(self.temp_state, [(0, 1), (3, 4)], 4)', 'diagonal_line(self.temp_state, [(3, 3), (0, 6)], 4)', 'diagonal_line(self.temp_state, [(16, 14), (13, 11)], 4)', 'diagonal_line(self.temp_state, [(12, 12), (15, 15)], 4)', 'diagonal_line(self.temp_state, [(13, 14), (16, 17)], 4)', 'pixel_color([(13, 16)], 4)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 9, 9, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 9, 0], [9, 2, 4, 2, 2, 4, 0, 0, 0, 9, 0, 0, 9, 0, 0, 0, 0, 0], [0, 2, 2, 4, 4, 2, 0, 0, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 0, 9, 0], [0, 9, 9, 0, 0, 0, 9, 0, 9, 9, 0, 9, 0, 0, 9, 9, 9, 9], [9, 9, 9, 9, 0, 9, 2, 4, 2, 2, 9, 0, 0, 9, 0, 0, 0, 0], [0, 0, 0, 0, 0, 9, 2, 2, 2, 2, 9, 0, 9, 9, 0, 0, 0, 0], [9, 0, 9, 9, 0, 9, 0, 0, 9, 0, 9, 9, 0, 9, 9, 9, 0, 9], [0, 0, 0, 9, 0, 0, 0, 9, 9, 9, 9, 9, 0, 9, 0, 0, 0, 0], [9, 9, 0, 9, 0, 9, 0, 9, 9, 0, 0, 9, 9, 0, 0, 0, 0, 9], [0, 9, 9, 0, 9, 0, 4, 2, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9], [0, 9, 9, 0, 0, 9, 2, 4, 9, 9, 0, 0, 0, 9, 9, 9, 0, 9], [9, 0, 9, 9, 0, 9, 9, 9, 0, 0, 9, 0, 0, 0, 9, 9, 9, 0], [9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 9, 2, 2, 4, 2, 2, 4, 0], [0, 9, 9, 9, 9, 9, 9, 0, 9, 0, 0, 2, 4, 2, 4, 4, 2, 9], [0, 9, 0, 9, 0, 0, 9, 9, 0, 9, 0, 2, 2, 4, 2, 2, 4, 0], [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 9, 9, 9, 0]]",36fdfd69,76,"To make the output, you have to...assume the red grid as a rectangle or square , now complete the structure by change the overlap color into yellow, leave all others grid same as input.","To make the output, you have to...assume the red grid as a circle, now complete the structure by changing the overlap color into blue, leave all other grids the same as input.","To make the output, you have to...assume the green grid as a rectangle or square, now complete the structure by changing the overlap color into yellow, leave all others grid same as input.","To make the output, you have to...assume the red grid as a rectangle or square, now complete the structure by changing the overlap color into green, leave all others grid same as input. ","To make the output, you have to...assume the red grid as a rectangle or square, now complete the structure by changing the overlap color into yellow, change all other grids different from input."
55,3906de3d.json,"['vertical_line', 'vertical_line', 'pixel_color', 'obj_color', 'obj_color', 'obj_color', 'vertical_line', 'vertical_line', 'complete']","['vertical_line(self.temp_state, [(0, 2), (4, 2)], 2)', 'vertical_line(self.temp_state, [(1, 4), (4, 4)], 2)', 'pixel_color([(2, 6)], 2)', 'obj_color(self.temp_state, object3, 0)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object4, 0)', 'vertical_line(self.temp_state, [(2, 5), (7, 5)], 2)', 'vertical_line(self.temp_state, [(0, 8), (7, 8)], 2)', 'complete(self.temp_state)']",9,TRUE,"[[0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 2, 1, 1, 1, 1, 1, 2, 1], [0, 1, 2, 1, 2, 1, 2, 1, 2, 1], [0, 1, 2, 1, 2, 2, 0, 1, 2, 1], [0, 0, 0, 1, 0, 2, 0, 0, 2, 1], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",3906de3d,77,"To make the output, you have to...imagine the blue is a vacuum and sucks the red up into the open spaces. Move all red straight up.","To make the output, you have to...imagine the blue is a vacuum and pushes the red down into the open spaces. Move all red straight down.","To make the output, you have to...imagine the green is a vacuum and sucks the yellow up into the open spaces. Move all yellow straight up.","To make the output, you have to...imagine the red is a vacuum and sucks the blue up into the open spaces. Move all blue straight up.","To make the output, you have to...imagine the blue is a magnet and pulls the red up into the open spaces. Move all red straight up."
57,3aa6fb7a.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(5, 0)], 1)', 'pixel_color([(3, 4)], 1)', 'pixel_color([(2, 1)], 1)', 'pixel_color([(1, 5)], 1)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 8, 8], [8, 8, 0, 0, 0, 1, 8], [8, 1, 0, 0, 0, 0, 0], [0, 0, 0, 8, 1, 0, 0], [0, 0, 0, 8, 8, 0, 0], [1, 8, 0, 0, 0, 0, 0], [8, 8, 0, 0, 0, 0, 0]]",3aa6fb7a,80,"To make the output, you have to...fill in the missing corners with a blue square.","To make the output, you have to...fill in the missing corners with a red square.","To make the output, you have to...fill in the missing edges with a blue square.","To make the output, you have to...fill in the missing sides with a blue square.","To make the output, you have to...fill in the missing corners with a green square."
59,3bd67248.json,"['diagonal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(9, 0), (0, 9)], 2)', 'horizontal_line(self.temp_state, [(9, 9), (9, 0)], 4)', 'pixel_color([(9, 9)], 4)', 'pixel_color([(0, 9)], 2)', 'complete(self.temp_state)']",5,TRUE,"[[3, 0, 0, 0, 0, 0, 0, 0, 0, 2], [3, 0, 0, 0, 0, 0, 0, 0, 2, 0], [3, 0, 0, 0, 0, 0, 0, 2, 0, 0], [3, 0, 0, 0, 0, 0, 2, 0, 0, 0], [3, 0, 0, 0, 0, 2, 0, 0, 0, 0], [3, 0, 0, 0, 2, 0, 0, 0, 0, 0], [3, 0, 0, 2, 0, 0, 0, 0, 0, 0], [3, 0, 2, 0, 0, 0, 0, 0, 0, 0], [3, 2, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 4, 4, 4, 4, 4, 4, 4, 4]]",3bd67248,83,"To make the output, you have to...make a yellow line perpendicular to the line located at the left half and then you draw a diagonal red line starting at the intersecting between both lines.","To make the output, you have to...draw a diagonal yellow line intersecting with the line on the right half, then draw a perpendicular red line starting at their intersection.","To make the output, you have to...make a red line parallel to the line located at the lower half and then you draw a vertical green line starting at the intersecting between both lines.","To make the output, you have to...make a horizontal blue line intersecting at the top half of the grid, then you draw a diagonal brown line starting from the intersection.","To make the output, you have to...draw a horizontal pink line on the right half, then start a diagonal green line at the point where both lines intersect."
62,3c9b0459.json,"['rotate_right', 'rotate_right', 'complete']","['rotate_right_state(temp_state)', 'rotate_right_state(temp_state)', 'complete(self.temp_state)']",3,TRUE,"[[7, 6, 4], [4, 6, 6], [4, 4, 6]]",3c9b0459,86,"To make the output, you have to...rotate the grid 180 degrees clockwise. That's it. Just fill in the grid with the original colors as if the grid rotated twice to the right (180 degrees).","To make the output, you have to...rotate the grid 90 degrees clockwise. That's it. Just fill in the grid with the original colors as if the grid rotated once to the right (90 degrees).","To make the output, you have to...rotate the grid 180 degrees counter-clockwise. That's it. Just fill in the grid with the original colors as if the grid rotated twice to the left (180 degrees).","To make the output, you have to...rotate the grid 270 degrees clockwise. That's it. Just fill in the grid with the original colors as if the grid rotated thrice to the right (270 degrees).","To make the output, you have to...rotate the grid 360 degrees clockwise. That's it. Just fill in the grid with the original colors as if the grid rotated four times to the right (360 degrees)."
63,3e980e27.json,"['horizontal_line', 'diagonal_line', 'horizontal_line', 'diagonal_line', 'horizontal_line', 'horizontal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(9, 5), (9, 9)], 8)', 'diagonal_line(self.temp_state, [(9, 9), (12, 6)], 8)', 'horizontal_line(self.temp_state, [(0, 3), (0, 7)], 8)', 'diagonal_line(self.temp_state, [(0, 7), (3, 4)], 8)', 'horizontal_line(self.temp_state, [(2, 8), (2, 11)], 1)', 'horizontal_line(self.temp_state, [(10, 2), (10, 5)], 1)', 'diagonal_line(self.temp_state, [(10, 5), (7, 2)], 1)', 'pixel_color([(1, 10)], 1)', 'pixel_color([(0, 9)], 1)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 0, 8, 8, 8, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 3, 8, 0, 0, 2, 1, 0, 0], [0, 1, 2, 0, 0, 8, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 1, 0, 8, 8, 8, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 3, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",3e980e27,88,"To make the output, you have to...copy the placement and color of the pixels surrounding the red or green pixels that are not alone to the pixels that are alone. If the pixel is green the placement and color of the surrounding pixels should be the same as the surrounded green pixel. This should be applied to all solo green pixels. The same should be done with the red pixels, but the placement of the surrounding pixels should be mirrored horizontally.","To make the output, you have to...keep the placement and color of the pixels surrounding the yellow or blue pixels that are not alone to the pixels that are alone. If the pixel is yellow the placement and color of the surrounding pixels should be the same as the surrounded yellow pixel. This should be applied to all solo yellow pixels. The same should be done with the blue pixels, but the placement of the surrounding pixels should be flipped vertically.","To make the output, you have to...copy the relocation and color of the pixels around the pink or black pixels that are not alone to the pixels that are alone. If the pixel is pink the relocation and color of the around pixels should be the same as the around pink pixel. This should be applied to all solo pink pixels. The same should be done with the black pixels, but the relocation of the around pixels should be mirrored diagonally.","To make the output, you have to...maintain the position and color of the pixels surrounding the gray or brown pixels that are not alone to the pixels that are alone. If the pixel is gray the position and color of the surrounding pixels should be the same as the surrounded gray pixel. This should be applied to all solo brown pixels. The same should be done with the brown pixels, but the position of the surrounding pixels should be switched horizontally.","To make the output, you have to...mirror the placement and color of the pixels surrounding the light blue or black pixels that are not alone to the pixels that are alone. If the pixel is light blue the placement and color of the surrounding pixels should be the same as the surrounded light blue pixel. This should be applied to all solo black pixels. The same should be done with the black pixels, but the placement of the surrounding pixels should be rotated vertically."
64,3eda0437.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(0, 0), (0, 4)], 6)', 'horizontal_line(self.temp_state, [(1, 0), (1, 4)], 6)', 'horizontal_line(self.temp_state, [(2, 0), (2, 4)], 6)', 'complete(self.temp_state)']",4,TRUE,"[[0, 6, 6, 6, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 6, 6, 6, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 6, 6, 6, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1]]",3eda0437,89,"To make the output, you have to...examine the grid, find the black squares that will allow for a symmetrical shape of either a square or rectangle, and color those squares pink.","To make the output, you have to...examine the grid, find the black squares that will allow for an asymmetric shape of either a square or rectangle, and color those squares pink.","To make the output, you have to...examine the grid, find the black squares that will allow for a symmetrical shape of either a circle or ellipse, and color those squares pink.","To make the output, you have to...examine the grid, find the black squares that will allow for a symmetrical shape of either a square or rectangle, and color those squares light blue.","To make the output, you have to...examine the grid, find the green squares that will allow for a symmetrical shape of either a square or rectangle, and color those squares pink."
65,40853293.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(3, 1), (3, 16)], 2)', 'horizontal_line(self.temp_state, [(7, 7), (7, 13)], 7)', 'horizontal_line(self.temp_state, [(14, 8), (14, 14)], 8)', 'vertical_line(self.temp_state, [(9, 9), (2, 9)], 5)', 'vertical_line(self.temp_state, [(1, 3), (18, 3)], 3)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 3, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 7, 7, 5, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",40853293,91,"To make the output, you have to...connect similar colors with that color. where they overlap you should use the vertical color.","To make the output, you have to...divide dissimilar colors with that color. where they overlap you should use the horizontal color.","To make the output, you have to...connect similar colors with the opposite color. where they touch you should use the horizontal color.","To make the output, you have to...separate similar colors with a different color. where they overlap you should use the horizontal color.","To make the output, you have to...join similar colors with that color. where they don't overlap you should use the vertical color."
69,42a50994.json,"['vertical_line', 'diagonal_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(3, 0), (7, 0)], 0)', 'diagonal_line(self.temp_state, [(10, 0), (4, 6)], 0)', 'vertical_line(self.temp_state, [(3, 13), (10, 13)], 0)', 'pixel_color([(0, 4)], 0)', 'pixel_color([(3, 4)], 0)', 'pixel_color([(6, 11)], 0)', 'pixel_color([(7, 8)], 0)', 'pixel_color([(10, 10)], 0)', 'pixel_color([(14, 8)], 0)', 'complete(self.temp_state)']",10,TRUE,"[[0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3], [3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3], [3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0], [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0], [3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0], [3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0], [3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 3, 3]]",42a50994,96,"To make the output, you have to...copy the input grid, identify which pixels are connected or touching any other and change background colors of single pixels to the background color or black.","To make the output, you have to...copy the input grid, identify which pixels are not connected or touching any other and change background colors of single pixels to the background color or black.","To make the output, you have to...identify the input grid, identify which pixels are connected or touching any other and change background colors of single pixels to the background color or black.","To make the output, you have to...copy the input grid, identify which pixels are separated or not touching any other and change background colors of single pixels to the background color or black.","To make the output, you have to...ignore the input grid, identify which pixels are connected or touching any other and change background colors of single pixels to grey or yellow."
71,444801d8.json,"['horizontal_line', 'diagonal_line', 'diagonal_line', 'horizontal_line', 'pixel_color', 'horizontal_line', 'diagonal_line', 'diagonal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(3, 0), (3, 4)], 4)', 'diagonal_line(self.temp_state, [(3, 4), (0, 1)], 4)', 'diagonal_line(self.temp_state, [(3, 0), (0, 3)], 4)', 'horizontal_line(self.temp_state, [(0, 0), (0, 5)], 4)', 'pixel_color([(0, 0)], 4)', 'horizontal_line(self.temp_state, [(8, 4), (8, 8)], 7)', 'diagonal_line(self.temp_state, [(8, 8), (4, 4)], 7)', 'diagonal_line(self.temp_state, [(8, 4), (4, 8)], 7)', 'horizontal_line(self.temp_state, [(5, 3), (5, 9)], 7)', 'complete(self.temp_state)']",10,TRUE,"[[4, 4, 4, 4, 4, 0, 0, 0, 0, 0], [1, 1, 4, 1, 1, 0, 0, 0, 0, 0], [1, 4, 4, 4, 1, 0, 0, 0, 0, 0], [1, 4, 4, 4, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 7, 7, 7, 7, 0], [0, 0, 0, 0, 1, 1, 7, 1, 1, 0], [0, 0, 0, 0, 1, 7, 7, 7, 1, 0], [0, 0, 0, 0, 1, 7, 7, 7, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0]]",444801d8,98,"To make the output, you have to...fill the inside of the blue square border with a single colored pixel. Then, you also fill the pixels where the blue square border is open, and draw a single line on top of the border's upper edge.","To make the output, you have to...leave the inside of the blue square border empty. Then, you also fill the pixels where the blue square border is closed, and draw a single line under the border's lower edge.","To make the output, you have to...fill the outside of the blue rectangle border with a multi-colored pixel. Then, you also empty the pixels where the blue rectangle border is open, and draw a double line on top of the border's upper edge.","To make the output, you have to...fill the inside of the red round border with a single colored pixel. Then, you also fill the pixels where the red round border is open, and draw a single line on top of the border's upper edge.","To make the output, you have to...fill the inside of the yellow hexagon border with a single colored pixel. Then, draw a single line on bottom of the border's lower edge."
73,44d8ac46.json,"['vertical_line', 'vertical_line', 'vertical_line', 'complete']","['vertical_line(self.temp_state, [(1, 1), (5, 1)], 2)', 'vertical_line(self.temp_state, [(1, 2), (5, 2)], 2)', 'vertical_line(self.temp_state, [(1, 3), (5, 3)], 2)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0], [5, 2, 2, 2, 5, 0, 0, 5, 5, 0, 5, 0], [5, 2, 2, 2, 5, 0, 0, 5, 0, 0, 5, 0], [5, 2, 2, 2, 5, 0, 0, 5, 0, 0, 5, 0], [5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0]]",44d8ac46,101,"To make the output, you have to...fill the black area within the gray with red if it is a square; otherwise, leave it alone.","To make the output, you have to...fill the red area within the black with Gray if it is a square; otherwise, leave it alone.","To make the output, you have to...fill the gray area within the green with Yellow if it is a square; otherwise, leave it alone.","To make the output, you have to...fill the pink area within the brown with Black if it is a square; otherwise, leave it alone.","To make the output, you have to...fill the blue area within the light blue with Green if it is a square; otherwise, leave it alone."
76,4938f0c2.json,"['diagonal_line', 'horizontal_line', 'pixel_color', 'diagonal_line', 'horizontal_line', 'pixel_color', 'diagonal_line', 'pixel_color', 'pixel_color', 'horizontal_line']","['diagonal_line(self.temp_state, [(6, 7), (1, 12)], 2)', 'horizontal_line(self.temp_state, [(2, 7), (2, 11)], 2)', 'pixel_color([(5, 9)], 2)', 'diagonal_line(self.temp_state, [(7, 7), (12, 12)], 2)', 'horizontal_line(self.temp_state, [(11, 7), (11, 11)], 2)', 'pixel_color([(8, 9)], 2)', 'diagonal_line(self.temp_state, [(7, 6), (11, 2)], 2)', 'pixel_color([(8, 4)], 2)', 'pixel_color([(11, 2)], 2)', 'horizontal_line(self.temp_state, [(11, 6), (11, 2)], 2)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",4938f0c2,111,"To make the output, you have to...use the same red pattern to create a symmetrical pattern surrounding the green cube.","To make the output, you have to...use the different black pattern to create a unsymmetrical pattern surrounding the green cube.","To make the output, you have to...use the same red pattern to create a symmetrical pattern surrounding the purple cube.","To make the output, you have to...use the same red pattern to create an asymmetrical pattern surrounding the green cube.","To make the output, you have to...use the different red pattern to create a symmetrical pattern surrounding the green pyramid."
77,496994bd.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(7, 0), (7, 5)], 5)', 'horizontal_line(self.temp_state, [(8, 0), (8, 5)], 5)', 'horizontal_line(self.temp_state, [(9, 0), (9, 5)], 3)', 'vertical_line(self.temp_state, [(9, 5), (6, 5)], 5)', 'vertical_line(self.temp_state, [(9, 0), (6, 0)], 5)', 'pixel_color([(9, 5)], 3)', 'pixel_color([(9, 0)], 3)', 'complete(self.temp_state)']",8,TRUE,"[[3, 3, 3, 3, 3, 3], [5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3]]",496994bd,112,"To make the output, you have to...copy the input grid and then mirror the colored lines on the other end of the grid.","To make the output, you have to...mirror the blank grid, then draw the colored lines on the other end.","To make the output, you have to...copy the green colored squares then rotate them at the other end.","To make the output, you have to...invert the input grid, then replicate the colored lines at the other end.","To make the output, you have to...copy the input grid, but place the colored lines at random places."
79,50846271.json,"['vertical_line', 'pixel_color', 'pixel_color', 'vertical_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color']","['vertical_line(self.temp_state, [(5, 6), (1, 6)], 8)', 'pixel_color([(9, 13)], 8)', 'pixel_color([(8, 12)], 8)', 'vertical_line(self.temp_state, [(8, 13), (5, 13)], 8)', 'horizontal_line(self.temp_state, [(8, 13), (8, 16)], 8)', 'horizontal_line(self.temp_state, [(14, 2), (14, 5)], 8)', 'vertical_line(self.temp_state, [(14, 5), (11, 5)], 8)', 'vertical_line(self.temp_state, [(16, 13), (13, 13)], 8)', 'pixel_color([(17, 13)], 8)', 'pixel_color([(18, 13)], 8)']",10,TRUE,"[[0, 5, 0, 5, 0, 0, 5, 5, 0, 5, 0, 0, 0, 5, 0, 5, 0, 0, 0, 5, 5, 0], [0, 5, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 5, 5, 0, 0, 0, 0, 0, 5, 5, 5], [0, 0, 0, 0, 5, 5, 8, 0, 0, 0, 0, 5, 5, 0, 0, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 0, 5, 8, 5, 0, 5, 0, 5, 0, 5, 0, 5, 5, 0, 5, 5, 5, 0], [0, 5, 0, 5, 2, 2, 8, 2, 2, 5, 0, 0, 5, 0, 5, 5, 5, 0, 0, 5, 5, 0], [0, 0, 0, 5, 0, 5, 2, 5, 5, 5, 0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0], [5, 5, 0, 0, 5, 5, 2, 0, 5, 5, 0, 0, 0, 8, 0, 0, 0, 5, 5, 5, 5, 5], [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 8, 0, 5, 0, 0, 5, 0, 5, 0], [5, 5, 5, 5, 5, 0, 0, 5, 5, 0, 5, 2, 8, 2, 8, 8, 0, 0, 5, 5, 5, 0], [0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 5, 8, 0, 5, 5, 5, 0, 0, 0, 0], [0, 0, 0, 5, 5, 5, 0, 5, 0, 5, 0, 5, 5, 2, 5, 0, 5, 0, 0, 5, 5, 0], [0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 5, 5, 0, 0, 0, 5, 5], [5, 5, 0, 0, 5, 8, 5, 0, 0, 5, 5, 0, 5, 0, 5, 5, 0, 0, 5, 5, 0, 5], [0, 0, 5, 5, 5, 8, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 5], [5, 5, 0, 8, 8, 2, 2, 2, 5, 5, 5, 0, 5, 8, 5, 0, 5, 0, 0, 5, 5, 0], [5, 0, 0, 0, 5, 2, 5, 0, 5, 0, 5, 0, 5, 8, 5, 5, 0, 0, 0, 0, 5, 5], [5, 5, 5, 0, 0, 2, 0, 5, 5, 0, 0, 2, 2, 2, 2, 2, 5, 0, 5, 0, 5, 5], [5, 0, 5, 0, 0, 5, 0, 5, 0, 0, 0, 0, 0, 8, 0, 5, 5, 5, 0, 5, 5, 0], [5, 5, 5, 5, 5, 0, 5, 0, 5, 5, 5, 5, 0, 8, 0, 0, 5, 5, 0, 5, 0, 5]]",50846271,117,"To make the output, you have to...fill in gray units in the area that have red units with red blocks to make crosses with vertical and horizontal units that make up each of the crosses.","To make the output, you have to...fill in red units in the area that have gray units with gray blocks to make vertical and horizontal units that make up each of the circles. ","To make the output, you have to...fill in only red units in the crosses with gray blocks to make vertical and horizontal units. ","To make the output, you have to...fill the area that have green units with brown blocks to make crosses with vertical and horizontal units that make up each of them.","To make the output, you have to...fill in yellow units in the area that have blue units with blue blocks to make triangles with vertical and horizontal units that make up each of the triangles."
80,508bd3b6.json,"['diagonal_line', 'diagonal_line', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(5, 8), (1, 4)], 3)', 'diagonal_line(self.temp_state, [(4, 7), (11, 0)], 3)', 'pixel_color([(11, 0)], 3)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 8, 0, 0, 0, 0, 2, 2, 2, 2], [0, 0, 0, 0, 8, 0, 0, 0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 2, 2], [0, 0, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2], [0, 0, 0, 0, 3, 0, 0, 0, 2, 2, 2, 2], [0, 0, 0, 3, 0, 0, 0, 0, 2, 2, 2, 2], [0, 0, 3, 0, 0, 0, 0, 0, 2, 2, 2, 2], [0, 3, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2], [3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]]",508bd3b6,118,"To make the output, you have to...fill the pixels with green color diagonally progressing through the light blue pixels. When encountering the red portion, consider it as a mirror, and reflect the direction of the green pixel progression as if it were reflecting off the mirror.","To make the output, you have to...fill the pixels with green color diagonally progressing through the brown pixels. When encountering the yellow portion, consider it as a mirror, and reflect the direction of the green pixel progression as if it were reflecting off the mirror.","To make the output, you have to...fill the pixels with light blue color diagonally progressing through the green pixels. When encountering the red portion, consider it as a mirror, and reflect the direction of the light blue pixel progression as if it were reflecting off the mirror.","To make the output, you have to...fill the pixels with black color diagonally progressing through the light blue pixels. When encountering the red portion, consider it as a window, and let the black pixel progression pass through it.","To make the output, you have to...fill the pixels with green color vertically progressing through the light blue pixels. When encountering the red portion, consider it as a wall, and let the green pixel progression stop there."
81,50cb2852.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'horizontal_line', 'horizontal_line', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(7, 10), (13, 10)], 8)', 'vertical_line(self.temp_state, [(13, 11), (7, 11)], 8)', 'vertical_line(self.temp_state, [(10, 6), (5, 6)], 8)', 'vertical_line(self.temp_state, [(10, 5), (5, 5)], 8)', 'vertical_line(self.temp_state, [(10, 4), (5, 4)], 8)', 'vertical_line(self.temp_state, [(10, 3), (5, 3)], 8)', 'horizontal_line(self.temp_state, [(1, 1), (1, 5)], 8)', 'horizontal_line(self.temp_state, [(2, 1), (2, 5)], 8)', 'pixel_color([(2, 9)], 8)', 'complete(self.temp_state)']",10,TRUE,"[[0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 8, 8, 8, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 8, 8, 8, 1, 0, 0, 1, 8, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 2, 8, 8, 8, 8, 2, 0, 0, 0, 0, 0], [0, 0, 2, 8, 8, 8, 8, 2, 0, 3, 3, 3, 3], [0, 0, 2, 8, 8, 8, 8, 2, 0, 3, 8, 8, 3], [0, 0, 2, 8, 8, 8, 8, 2, 0, 3, 8, 8, 3], [0, 0, 2, 2, 2, 2, 2, 2, 0, 3, 8, 8, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 8, 8, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 8, 8, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3]]",50cb2852,119,"To make the output, you have to...fill the shapes in with light blue colors but leave the cubes on the edge the same color as the input grid.","To make the output, you have to...fill the shapes in with dark blue color but leave the cubes on the edge the same color as the input grid.","To make the output, you have to...color the shapes with light blue colors but paint the cubes on the edge the same color as the input grid.","To make the output, you have to...fill the shapes in with light blue colors and also paint the cubes on the edge the same color as the input grid.","To make the output, you have to...fill the shapes in with light blue colors but change the cubes on the edge to a different color from the input grid."
82,5168d44c.json,"['move_right', 'move_right', 'pixel_color', 'complete']","['move_right(self.temp_state, object1)', 'move_right(self.temp_state, object1)', 'pixel_color([(4, 8)], 3)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0], [3, 0, 3, 0, 3, 0, 3, 0, 3, 2, 3, 2, 3, 0, 3, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",5168d44c,121,"To make the output, you have to...move the red cube. If the green pixels are horizontally aligned, move the red cube so that it centers on the next green pixel to the right. If the green pixels are vertically aligned, move the red cube so that it centers on the next green pixel below.","To make the output, you have to...move the red square. If the blue pixels are horizontally aligned, move the red square so that it centers on the next blue pixel to the right. If the blue pixels are vertically aligned, move the red square so that it centers on the next blue pixel below.","To make the output, you have to...move the green sphere. If the red pixels are horizontally aligned, move the green sphere so that it centers on the next red pixel above. If the red pixels are vertically aligned, move the green sphere so that it centers on the next red pixel to the left.","To make the output, you have to...leave the red cube static. If the green pixels are horizontally aligned, leave the red cube so that it centers on the green pixel to the left. If the green pixels are vertically aligned, leave the red cube so that it centers on the green pixel above.","To make the output, you have to...move the blue cube. If the yellow pixels are horizontally aligned, move the blue cube so that it centers on the next yellow pixel below. If the yellow pixels are vertically aligned, move the blue cube so that it centers on the next yellow pixel to the right."
84,54d82841.json,"['pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(6, 2)], 4)', 'pixel_color([(6, 6)], 4)', 'pixel_color([(6, 9)], 4)', 'complete(self.temp_state)']",4,TRUE,"[[0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 5, 0, 5, 0, 8, 8, 8, 0, 0, 0], [0, 0, 0, 0, 0, 8, 0, 8, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4, 0, 0, 0, 4, 0, 0, 4, 0]]",54d82841,125,"To make the output, you have to...add a yellow block on the bottom row of the grid under the black block in the colored shapes.","To make the output, you have to...add a blue block on the bottom row of the grid under the black block in the colored shapes.","To make the output, you have to...add a yellow block on the top row of the grid above the black block in the colored shapes.","To make the output, you have to...add a yellow block on the bottom row of the grid under the brown block in the colored shapes.","To make the output, you have to...remove a yellow block on the bottom row of the grid under the black block in the colored shapes."
87,5582e5ca.json,"['obj_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object1, 8)', 'pixel_color([(2, 2)], 8)', 'complete(self.temp_state)']",3,TRUE,"[[8, 8, 8], [8, 8, 8], [8, 8, 8]]",5582e5ca,128,"To make the output, you have to...determine which color is used the most in the input grid and make the entire grid that color.","To make the output, you have to...determine which color is used the least in the input grid and make the entire grid that color.","To make the output, you have to...draw a line with the color that is used the most in the input grid and make the rest of the grid black.","To make the output, you have to...determine which color is used the most in the input grid and remove all pixels of that color.","To make the output, you have to...randomly color the entire grid with the color that is used the most in the input grid."
88,56dc2b01.json,"['move_left', 'move_left', 'move_left', 'move_left', 'move_left', 'move_left', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'vertical_line(self.temp_state, [(0, 8), (3, 8)], 8)', 'pixel_color([(0, 8)], 8)', 'pixel_color([(3, 8)], 8)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 0, 2, 0, 3, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 3, 0, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 3, 3, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 3, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",56dc2b01,130,"To make the output, you have to...move the green pattern until it touches the red line. Then, confine the green pattern with a light blue line parallel to the red line.","To make the output, you have to...move the blue pattern until it touches the green line. Then, wrap the green pattern with a red line parallel to the green line.","To make the output, you have to...move the green pattern until it touches the blue line. Then, confine the green pattern with a yellow line perpendicular to the blue line.","To make the output, you have to...move the red pattern until it touches the blue line. Then, confine the red pattern with a light blue line perpendicular to the green line.","To make the output, you have to...move the green pattern until it touches the yellow line. Then, surround the green pattern with a pink line perpendicular to the yellow line."
89,56ff96f3.json,"['horizontal_line', 'pixel_color', 'pixel_color', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(0, 0), (0, 3)], 8)', 'pixel_color([(1, 0)], 8)', 'pixel_color([(1, 1)], 8)', 'horizontal_line(self.temp_state, [(4, 0), (4, 6)], 6)', 'horizontal_line(self.temp_state, [(5, 0), (5, 6)], 6)', 'horizontal_line(self.temp_state, [(6, 0), (6, 6)], 6)', 'horizontal_line(self.temp_state, [(7, 0), (7, 6)], 6)', 'complete(self.temp_state)']",8,TRUE,"[[8, 8, 8, 0, 0, 0, 0, 0], [8, 8, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 6, 6, 6, 6, 0, 0], [0, 6, 6, 6, 6, 6, 0, 0], [0, 6, 6, 6, 6, 6, 0, 0], [0, 6, 6, 6, 6, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",56ff96f3,131,"To make the output, you have to...take the colored as the starting and end point of the rectangle or square assume that the grid make rectangle or square.","To make the output, you have to...take the empty as the starting and end point of the rectangle or square assume that the grid make rectangle or square.","To make the output, you have to...take the colored as the midpoint and corners of a polygon assume that the grid makes a trapezoid.","To make the output, you have to...take the colored as the start and end point of an ellipse assume that the grid makes a circle.","To make the output, you have to...take the colored as the starting and end point of the rectangle or hexagon assume that the grid make pentagon."
91,5c0a986e.json,"['diagonal_line', 'pixel_color', 'diagonal_line', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(3, 6), (0, 3)], 1)', 'pixel_color([(0, 3)], 1)', 'diagonal_line(self.temp_state, [(6, 3), (9, 6)], 2)', 'pixel_color([(9, 6)], 2)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0]]",5c0a986e,135,"To make the output, you have to...create a single line of boxes matching the color of the 2x2 box. Begin with the top left corner of the blue and the bottom right of the red and go out to the edge of the grid.","To make the output, you have to...create a double line of boxes matching the color of the 2x2 box. Begin with the top left corner of the green and the bottom right of the brown and go out to the edge of the grid.","To make the output, you have to...create a single line of triangles matching the color of the 2x2 box. Begin with the top left corner of the yellow and the bottom right of the pink and go out to the edge of the grid.","To make the output, you have to...create a single line of boxes matching the color of the 3x3 box. Begin with the bottom left corner of the red and the top right of the blue and go out to the edge of the grid.","To make the output, you have to...create a double line of spheres matching the color of the 2x2 box. Begin with the top left corner of the blue and the bottom right of the red and go out to the edge of the grid."
93,60b61512.json,"['horizontal_line', 'diagonal_line', 'pixel_color', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(1, 1), (1, 4)], 7)', 'diagonal_line(self.temp_state, [(1, 5), (4, 2)], 7)', 'pixel_color([(3, 4)], 7)', 'horizontal_line(self.temp_state, [(6, 5), (6, 8)], 7)', 'pixel_color([(8, 7)], 7)', 'pixel_color([(8, 5)], 7)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 7, 7, 4, 0, 0, 0, 0], [0, 0, 4, 4, 7, 0, 0, 0, 0], [0, 0, 4, 7, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 7, 7, 0], [0, 0, 0, 0, 0, 4, 4, 4, 0], [0, 0, 0, 0, 0, 7, 4, 7, 0]]",60b61512,138,"To make the output, you have to...fill in the incomplete 3x3 square, consisting of yellow pixels, with orange pixels.","To make the output, you have to...fill in the complete 3x3 square, consisting of green pixels, with pink pixels.","To make the output, you have to...fill in the incomplete 4x4 square, consisting of black pixels, with blue pixels.","To make the output, you have to...fill in the complete 2x2 square, consisting of brown pixels, with red pixels.","To make the output, you have to...fill in the incomplete 5x5 square, consisting of light blue pixels, with gray pixels."
94,6150a2bd.json,"['rotate_right', 'rotate_right', 'complete']","['rotate_right_state(temp_state)', 'rotate_right_state(temp_state)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 4], [0, 8, 6], [5, 3, 6]]",6150a2bd,139,"To make the output, you have to...rotate the whole grid two times. Imagine that the entire grid has been flipped both horizontally and vertically. Once you picture it, you can create the output grid.","To make the output, you have to...rotate the entire map once. Think that the entire map has been flipped both horizontally and vertically. Once you visualize it, you can create the output map.","To make the output, you have to...move the whole grid two times. Imagine that the whole grid has moved both left and right. Once you picture it, you can construct the output grid.","To make the output, you have to...shuffle the whole grid twice. Imagine that the whole grid is scrambled both horizontally and vertically. Conceive it in your mind, then you can create the output grid.","To make the output, you have to...tile the whole grid two times. Assume the entire grid has been converted both horizontally and vertically. Once you picture it, you can establish the output grid."
95,623ea044.json,"['x_line', 'complete']","['X_line(self.temp_state, [(7, 12)], 6)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",623ea044,140,"To make the output, you have to...start at the colored square and add a same colored square to make a x shape for the whole square.","To make the output, you have to...start at the colored square and add a different colored square to make a x shape for the whole square.","To make the output, you have to...start at the colored square and remove a same colored square to make a x shape for the whole square.","To make the output, you have to...start at the colorful square and add a same colored square to make a x shape for the whole square.","To make the output, you have to...begin at the colored square and subtract a same colored square to make a x shape for the entire square."
96,63613498.json,"['obj_color', 'complete']","['obj_color(self.temp_state, object7, 5)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 0, 5, 0, 0, 0, 6, 0, 0], [2, 2, 2, 5, 0, 0, 0, 6, 6, 0], [0, 0, 2, 5, 0, 0, 0, 6, 0, 0], [5, 5, 5, 5, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 3, 0, 0, 0], [8, 8, 8, 0, 0, 0, 0, 0, 4, 0], [8, 0, 0, 0, 0, 0, 0, 0, 4, 0], [0, 0, 0, 0, 5, 5, 5, 0, 4, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0]]",63613498,142,"To make the output, you have to...copy the input grid. Find any shapes outside of the border which are exactly the same shape and orientation as the shape inside of the grey border. Turn that shape grey. Do not change the colored shape inside the grey border or any shapes outside of the grey border which do not have the same orientation and shape as the one inside the border.","To make the output, you have to...duplicate the input grid. Discover any figures outside of the boundary which are exactly the same shape and position as the shape inside of the pink boundary. Make that shape pink. Do not adjust the colored shape inside the pink border or any figures outside of the pink boundary which do not have the same position and shape as the one inside the boundary.","To make the output, you have to...imitate the input grid. Identify any forms outside of the boundary which are slightly different shape and orientation as the shape within the green boundary. Color that shape green. Do not alternate the colored shape inside the green border or any forms outside of the green boundary which do not have the same orientation and figure as the one inside the border.","To make the output, you have to...replicate the input grid. Locate any designs outside of the edge which are exact same shape and direction as the shape inside of the brown edge. Modify that shape to brown. Do not interchange the colored shape inside the brown border or any designs outside of the brown edge which do not have the same direction and shape as the one inside the edge.","To make the output, you have to...clone the input grid. Pinpoint any motifs beyond the perimeter which are exactly the same pattern and alignment as the motif inside of the light blue perimeter. Change that motif to light blue. Do not transform the colored motif inside the light blue perimeter or any patterns beyond the light blue perimeter which do not have the same alignment and pattern as the one inside the perimeter."
98,67385a82.json,"['obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 8)', 'obj_color(self.temp_state, object4, 8)', 'complete(self.temp_state)']",3,TRUE,"[[8, 0, 8, 0, 3], [8, 8, 8, 0, 0], [0, 0, 0, 0, 3], [0, 8, 8, 0, 0], [0, 8, 8, 0, 0]]",67385a82,146,"To make the output, you have to...change so that the top left corner color changes to light blue instead of green. same with lower green 2 by 2 grid.","To make the output, you have to...change so that the top left corner color changes to light blue instead of red. same with lower green 2 by 2 grid.","To make the output, you have to...change so that the top left corner color remains green. same with lower green 2 by 2 grid.","To make the output, you have to...change so that the top right corner color changes to light blue instead of green. same with lower green 2 by 2 grid. ","To make the output, you have to...change so that the top left corner color changes to light blue instead of green. same with upper green 2 by 2 grid."
99,673ef223.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'obj_color', 'obj_color', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'pixel_color']","['horizontal_line(self.temp_state, [(5, 4), (5, 0)], 8)', 'horizontal_line(self.temp_state, [(3, 7), (3, 0)], 8)', 'horizontal_line(self.temp_state, [(2, 8), (2, 0)], 8)', 'obj_color(self.temp_state, object3, 4)', 'obj_color(self.temp_state, object2, 4)', 'horizontal_line(self.temp_state, [(15, 11), (15, 0)], 8)', 'horizontal_line(self.temp_state, [(16, 11), (16, 0)], 8)', 'horizontal_line(self.temp_state, [(18, 11), (18, 0)], 8)', 'vertical_line(self.temp_state, [(17, 0), (14, 0)], 8)', 'pixel_color([(18, 0)], 8)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 8, 8, 8, 8, 8, 8, 8, 4, 0, 0, 0], [2, 8, 8, 8, 8, 8, 8, 4, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 8, 8, 8, 4, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",673ef223,147,"To make the output, you have to...change the dot color from blue to yellow, and connect them to the red line using blue dots. Mirror the same pattern on the bottom but instead of stopping where the yellow dots would be, continue to the edge of the grid.","To make the output, you have to...change the dot color from yellow to blue, and connect them to the red line using yellow dots. Mirror the same pattern on the top but instead of stopping where the blue dots would be, continue to the edge of the grid.","To make the output, you have to...change the dot color from blue to red, and connect them to the blue line using red dots. Mirror the same pattern on the top but instead of stopping where the red dots would be, continue to the edge of the grid.","To make the output, you have to...change the dot color from red to green, and connect them to the red line using green dots. Mirror the same pattern on the top but instead of stopping where the green dots would be, continue to the edge of the grid.","To make the output, you have to...change the dot color from blue to green, and connect them to the red line using green dots. Mirror the same pattern on the bottom but instead of stopping where the green dots would be, continue to the edge of the grid."
100,67a3c6ac.json,"['flip_horizontal', 'complete']","['horizontal_flip(temp_state)', 'complete(self.temp_state)']",2,TRUE,"[[1, 6, 7], [6, 7, 6], [2, 2, 6]]",67a3c6ac,149,"To make the output, you have to...create a right to left mirror image.","To make the output, you have to...create a left to right mirror image. ","To make the output, you have to...create a bottom to top mirror image. ","To make the output, you have to...create a diagonal mirror image. ","To make the output, you have to...destroy a right to left mirror image."
101,67a423a3.json,"['vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(4, 7), (8, 7)], 4)', 'vertical_line(self.temp_state, [(8, 9), (4, 9)], 4)', 'pixel_color([(7, 8)], 4)', 'pixel_color([(5, 8)], 4)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0], [3, 3, 3, 3, 3, 3, 3, 4, 5, 4, 3, 3], [0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0]]",67a423a3,150,"To make the output, you have to...create a yellow square around the point where the two lines meet.","To make the output, you have to...create a black square around the point where the two lines meet.","To make the output, you have to...create a yellow circle around the point where the two lines meet.","To make the output, you have to...create a yellow square around the point where the two lines never meet.","To make the output, you have to...create a blue square around the point where the two lines meet."
102,6855a6e4.json,"['horizontal_line', 'pixel_color', 'horizontal_line', 'obj_color', 'obj_color', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(8, 3), (8, 9)], 5)', 'pixel_color([(9, 6)], 5)', 'horizontal_line(self.temp_state, [(6, 4), (6, 8)], 5)', 'obj_color(self.temp_state, object1, 0)', 'obj_color(self.temp_state, object4, 0)', 'horizontal_line(self.temp_state, [(5, 3), (5, 6)], 5)', 'horizontal_line(self.temp_state, [(5, 6), (5, 9)], 5)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 5, 0, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",6855a6e4,153,"To make the output, you have to...the grey shapes are finally in the interior of the red shapes. But not touching the red. And flipped on the vertical.","To make the output, you have to...the grey shapes are finally exterior of the red shapes. But not touching the red. And flipped on the vertical. ","To make the output, you have to...the red shapes are finally in the interior of the grey shapes. But not touching the red. And flipped on the horizontal. ","To make the output, you have to...the grey shapes are finally in the interior of the red shapes. And touching the red. And flipped on the vertical. ","To make the output, you have to...the grey shapes are finally in the interior of the blue shapes. But not touching the red. And flipped on the vertical."
103,68b16354.json,"['flip_vertical', 'complete']","['vertical_flip(temp_state)', 'complete(self.temp_state)']",2,TRUE,"[[1, 4, 7, 1, 2, 3, 4], [3, 2, 8, 4, 1, 8, 4], [4, 1, 1, 1, 7, 8, 4], [1, 1, 2, 3, 8, 1, 3], [1, 1, 1, 1, 4, 7, 3], [4, 4, 1, 1, 4, 3, 4], [2, 8, 1, 3, 2, 4, 1]]",68b16354,154,"To make the output, you have to...flip the original grid vertically.","To make the output, you have to...rotate the original grid 90 degrees clockwise.","To make the output, you have to...flip the original grid horizontally.","To make the output, you have to...move the original grid to the right side.","To make the output, you have to...resize the original grid to its half size."
104,694f12f3.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(1, 0), (1, 5)], 2)', 'horizontal_line(self.temp_state, [(2, 0), (2, 5)], 2)', 'horizontal_line(self.temp_state, [(3, 5), (3, 0)], 2)', 'horizontal_line(self.temp_state, [(4, 0), (4, 5)], 2)', 'horizontal_line(self.temp_state, [(8, 4), (8, 9)], 1)', 'complete(self.temp_state)']",6,TRUE,"[[4, 4, 4, 4, 4, 4, 0, 0, 0, 0], [4, 2, 2, 2, 2, 4, 0, 0, 0, 0], [4, 2, 2, 2, 2, 4, 0, 0, 0, 0], [4, 2, 2, 2, 2, 4, 0, 0, 0, 0], [4, 2, 2, 2, 2, 4, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 4, 4, 4, 4, 4], [0, 0, 0, 0, 4, 1, 1, 1, 1, 4], [0, 0, 0, 0, 4, 4, 4, 4, 4, 4]]",694f12f3,155,"To make the output, you have to...fill the pattern by red and blue color surrounded by same color, the one with most internal block should be filled with red color.","To make the output, you have to...fill the pattern by green and brown color surrounded by same color, the one with most internal block should be filled with green color.","To make the output, you have to...fill the pattern by blue and yellow color surrounded by different color, the one with least internal block should be filled with yellow color.","To make the output, you have to...fill the pattern by red and blue color surrounded by different color, the one with least internal block should be filled with red color.","To make the output, you have to...fill the pattern by pink and gray color surrounded by same color, the one with most internal block should be filled with gray color."
107,6c434453.json,"['obj_color', 'horizontal_line', 'vertical_line', 'obj_color', 'horizontal_line', 'vertical_line', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 0)', 'horizontal_line(self.temp_state, [(3, 0), (3, 4)], 2)', 'vertical_line(self.temp_state, [(1, 2), (5, 2)], 2)', 'obj_color(self.temp_state, object4, 0)', 'horizontal_line(self.temp_state, [(8, 0), (8, 4)], 2)', 'vertical_line(self.temp_state, [(6, 2), (9, 2)], 2)', 'pixel_color([(9, 2)], 2)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 2, 0, 0, 0, 0, 0, 1, 0], [0, 2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 2, 0, 0, 0, 0, 1, 1], [0, 0, 2, 0, 0, 0, 0, 0, 1, 1]]",6c434453,159,"To make the output, you have to...replace closed patterns with red sign with black corners.","To make the output, you have to...replace open patterns with red circles with black borders.","To make the output, you have to...replace closed patterns with blue sign with black corners.","To make the output, you have to...fill closed patterns with green sign with black corners.","To make the output, you have to...replace open patterns with red sign with white corners."
109,6cf79266.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(6, 3), (6, 7)], 1)', 'horizontal_line(self.temp_state, [(7, 3), (7, 7)], 1)', 'horizontal_line(self.temp_state, [(8, 3), (8, 7)], 1)', 'horizontal_line(self.temp_state, [(17, 1), (17, 5)], 1)', 'horizontal_line(self.temp_state, [(18, 1), (18, 5)], 1)', 'horizontal_line(self.temp_state, [(19, 1), (19, 5)], 1)', 'horizontal_line(self.temp_state, [(16, 13), (16, 17)], 1)', 'horizontal_line(self.temp_state, [(17, 13), (17, 17)], 1)', 'horizontal_line(self.temp_state, [(18, 13), (18, 17)], 1)', 'complete(self.temp_state)']",10,TRUE,"[[0, 4, 0, 4, 4, 0, 4, 4, 4, 0, 0, 0, 4, 0, 4, 4, 4, 4, 4, 0], [0, 0, 4, 4, 0, 0, 4, 0, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0], [4, 4, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 0, 4, 0], [4, 4, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 0, 0], [4, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 0, 4], [4, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 4, 0], [0, 0, 0, 4, 1, 1, 1, 0, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 0, 4], [4, 0, 4, 4, 1, 1, 1, 4, 4, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0], [0, 4, 4, 4, 1, 1, 1, 4, 4, 4, 0, 0, 4, 0, 4, 4, 4, 0, 0, 0], [4, 0, 0, 0, 4, 4, 0, 0, 4, 0, 0, 4, 0, 4, 4, 4, 0, 4, 0, 4], [0, 0, 0, 4, 0, 4, 0, 4, 4, 4, 0, 0, 4, 0, 4, 4, 4, 0, 4, 4], [0, 4, 4, 0, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 0], [0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 4, 0, 0, 0, 4, 4], [4, 0, 4, 4, 0, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 0, 0], [0, 4, 4, 4, 4, 0, 0, 4, 0, 4, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4], [4, 0, 0, 4, 4, 0, 4, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0], [4, 4, 0, 4, 0, 4, 0, 4, 4, 0, 0, 4, 4, 4, 1, 1, 1, 0, 4, 4], [4, 0, 1, 1, 1, 4, 4, 0, 4, 4, 0, 4, 0, 4, 1, 1, 1, 4, 4, 4], [0, 0, 1, 1, 1, 4, 4, 4, 4, 0, 4, 0, 0, 4, 1, 1, 1, 0, 0, 0], [4, 4, 1, 1, 1, 0, 0, 4, 4, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 4]]",6cf79266,161,"To make the output, you have to...find identifiable 3x3 black square grid within the random pattern. And fill this black square with a 3x3 blue square.","To make the output, you have to...find unidentifiable 3x3 black square grid within the random pattern. And fill this black square with a 3x3 blue square.","To make the output, you have to...find identifiable 4x3 black square grid within the random pattern. And fill this black square with a 4x3 blue square.","To make the output, you have to...find identifiable 3x3 red square grid within the random pattern. And fill this red square with a 3x3 blue square.","To make the output, you have to...find identifiable 3x3 black square grid outside of the random pattern. And fill this black square with a 3x3 green square."
111,6d58a25d.json,"['vertical_line', 'vertical_line', 'vertical_line', 'horizontal_line', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(5, 4), (19, 4)], 6)', 'vertical_line(self.temp_state, [(5, 5), (19, 5)], 6)', 'vertical_line(self.temp_state, [(5, 7), (19, 7)], 6)', 'horizontal_line(self.temp_state, [(19, 3), (19, 6)], 6)', 'pixel_color([(19, 7)], 6)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0], [0, 0, 0, 1, 6, 6, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0], [6, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 0, 0, 6, 6, 0, 6, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0], [0, 0, 0, 0, 6, 6, 0, 6, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",6d58a25d,164,"To make the output, you have to...make vertical line under the point shape only where there is a square under it, with the same color of the square and draw it down to the bottom.","To make the output, you have to...make horizontal line under the point shape only where there is a circle under it, with the same color of the circle and draw it down to the bottom.","To make the output, you have to...make vertical line above the point shape only where there is a square above it, with the same color of the square and draw it up to the top.","To make the output, you have to...make vertical line under the point shape only where there is a square under it, with a different color than the square and draw it down to the bottom.","To make the output, you have to...make a diagonal line under the point shape only where there is a square under it, with the same color of the square and draw it down to the bottom."
112,6d75e8bb.json,"['horizontal_line', 'vertical_line', 'vertical_line', 'vertical_line', 'horizontal_line', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(2, 2), (2, 9)], 2)', 'vertical_line(self.temp_state, [(6, 8), (2, 8)], 2)', 'vertical_line(self.temp_state, [(7, 6), (3, 6)], 2)', 'vertical_line(self.temp_state, [(6, 5), (2, 5)], 2)', 'horizontal_line(self.temp_state, [(3, 2), (3, 5)], 2)', 'pixel_color([(4, 3)], 2)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 2, 2, 2, 2, 2, 2, 0, 0], [0, 0, 8, 2, 2, 2, 8, 8, 2, 0, 0], [0, 0, 8, 2, 8, 2, 2, 8, 2, 0, 0], [0, 0, 8, 8, 8, 2, 2, 8, 2, 0, 0], [0, 0, 8, 8, 8, 8, 2, 8, 8, 0, 0], [0, 0, 8, 8, 8, 8, 8, 8, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",6d75e8bb,165,"To make the output, you have to...fill in the area of the large section with red to make a rectangular section. Background remain the same color.","To make the output, you have to...fill in the area of the small section with green to make a rectangular section. Background remain the same color.","To make the output, you have to...color in the area of the large section with yellow to make a circular section. Background remain the same color.","To make the output, you have to...fill in the area of the large section with brown to make a rectangular section. Background change to a different color.","To make the output, you have to...fill in the area of the large section with red to make a square section. Background remain the same color."
113,6e02f1e3.json,"['obj_color', 'obj_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)', 'pixel_color([(0, 2)], 5)', 'pixel_color([(1, 1)], 5)', 'pixel_color([(2, 0)], 5)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 5], [0, 5, 0], [5, 0, 0]]",6e02f1e3,166,"To make the output, you have to...place 3 grey boxes in various spots based on how many colors there are in the input grid. If there is one color, put 3 grey boxes on the top of the grid. If there are two colors, place a diagonal line of grey boxes form top left to bottom right. If there are 3 colors, place a diagonal line of grey boxes going from bottom left to top right.","To make the output, you have to...place 3 pink boxes in various spots based on how many colors there are in the input grid. If there is one color, put 3 pink boxes on the top of the grid. If there are two colors, place a diagonal line of pink boxes form top left to bottom right. If there are 3 colors, place a diagonal line of pink boxes going from bottom left to top right.","To make the output, you have to...place 3 grey boxes across the middle row of the grid. If there is one color, put 3 grey boxes on the bottom of the grid. If there are two colors, place a diagonal line of grey boxes from the bottom left to top right. If there are 3 colors, place a diagonal line of grey boxes going from top left to bottom right.","To make the output, you have to...put 3 grey squares on varying parts of the grid depending on how many colors are in the input grid. If there is one color, put 3 grey boxes in the middle. If there are two colors, place a diagonal line of grey boxes form bottom left to top right. If there are 3 colors, place a diagonal line of grey boxes going from top left to bottom right.","To make the output, you have to...place 3 grey boxes at random places based on how many colors there are in the input grid. If there is one color, put 3 grey boxes on the bottom. If there are two colors, place a horizontal line of grey boxes. If there are 3 colors, place a vertical line of grey boxes."
114,6e19193c.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(1, 2)], 8)', 'pixel_color([(0, 1)], 8)', 'pixel_color([(8, 1)], 8)', 'pixel_color([(9, 0)], 8)', 'pixel_color([(6, 9)], 8)', 'complete(self.temp_state)']",6,TRUE,"[[0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 8, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 8, 8, 0, 0, 0, 0, 0, 8], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",6e19193c,167,"To make the output, you have to...fill a diagonal line starting from the center of L-shaped that continues until the edge of the grid, in the same color as the input grid.","To make the output, you have to...fill a horizontal line starting from the center of L-shaped that continues until the edge of the grid, in the same color as the input grid.","To make the output, you have to...fill a vertical line starting from the center of L-shaped that continues until the edge of the grid, in a different color from the input grid.","To make the output, you have to...leave the diagonal line starting from the center of L-shaped that continues until the edge of the grid, in the same color as the input grid.","To make the output, you have to...fill a diagonal line starting from the center of T-shaped that continues until the edge of the grid, in the same color as the input grid."
115,6e82a1ae.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 1)', 'obj_color(self.temp_state, object2, 1)', 'obj_color(self.temp_state, object3, 2)', 'obj_color(self.temp_state, object4, 2)', 'obj_color(self.temp_state, object5, 3)', 'obj_color(self.temp_state, object6, 3)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 2, 2, 0, 0, 1], [0, 1, 1, 0, 0, 0, 2, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 3, 3, 0, 0, 3, 0, 0], [2, 0, 0, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",6e82a1ae,168,"To make the output, you have to...change a group of 2 blocks from gray to green, change a group of 3 blocks from gray to red, change a group of 4 blocks from gray to blue.","To make the output, you have to...change a group of 2 blocks from gray to blue, change a group of 3 blocks from gray to green, change a group of 4 blocks from gray to red.","To make the output, you have to...change a group of 2 blocks from blue to green, change a group of 3 blocks from red to gray, change a group of 4 blocks from gray to blue.","To make the output, you have to...change a group of 2 blocks from green to gray, change a group of 3 blocks from red to blue, change a group of 4 blocks from blue to gray.","To make the output, you have to...change a group of 2 blocks from green to gray, change a group of 3 blocks from gray to blue, change a group of 4 blocks from red to gray."
119,74dd1130.json,"['rotate_right', 'flip_horizontal', 'complete']","['rotate_right_state(temp_state)', 'horizontal_flip(temp_state)', 'complete(self.temp_state)']",3,TRUE,"[[9, 9, 9], [3, 4, 3], [4, 4, 4]]",74dd1130,178,"To make the output, you have to...mirror the pattern and focus the pattern around to the left.","To make the output, you have to...mirror the pattern and focus the pattern around to the right.","To make the output, you have to...distort the pattern and focus the pattern around to the right.","To make the output, you have to...mirror the pattern and direct the pattern around to the up.","To make the output, you have to...repeat the pattern and focus the pattern around to the left."
120,760b3cac.json,"['horizontal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(1, 5), (1, 8)], 8)', 'pixel_color([(0, 8)], 8)', 'pixel_color([(2, 8)], 8)', 'pixel_color([(0, 6)], 8)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 8, 0, 8, 8, 0, 8], [0, 0, 0, 0, 8, 8, 8, 8, 0], [0, 0, 0, 8, 0, 0, 0, 0, 8], [0, 0, 0, 0, 0, 4, 0, 0, 0], [0, 0, 0, 4, 4, 4, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0]]",760b3cac,180,"To make the output, you have to...create a mirror image of the top shape and place it to the side of that shape.","To make the output, you have to...create a mirror image of the top shape and place it beneath that shape.","To make the output, you have to...create an exact copy of the top shape and place it to the side of that shape.","To make the output, you have to...create a mirror image of the bottom shape and place it to the side of that shape.","To make the output, you have to...create a mirror image of the top shape and place it above that shape."
121,776ffc46.json,"['obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object6, 2)', 'obj_color(self.temp_state, object7, 2)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 2, 2, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 5, 0, 0, 2, 2, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 2, 2, 2, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0], [0, 0, 2, 2, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0, 5, 0], [0, 2, 2, 2, 2, 0, 5, 0, 0, 0, 0, 0, 5, 0, 2, 2, 2, 0, 5, 0], [0, 2, 2, 2, 2, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0, 5, 0], [0, 0, 2, 2, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0]]",776ffc46,181,"To make the output, you have to...copy all shapes over to output including the gray borders. Change the colors of the same shapes that are in the gray border to the same color as the one in the gray border.","To make the output, you have to... replicate all shapes including the black borders. Change the colors of the same shapes that are in the black border to the same color as the one in the black border.","To make the output, you have to... copy just the shapes over to output, excluding the gray borders. Change the colors of the same shapes that are outside the gray border to the same color as the one inside the gray border.","To make the output, you have to... move all shapes within the gray borders. Keep the colors of the same shapes that are in the gray border to the same color as the one in the gray border.","To make the output, you have to... copy all shapes over to output including the gray borders. Change the colors of the different shapes that are in the gray border to the same color as the one in the gray border."
122,794b24be.json,"['obj_color', 'obj_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 2)', 'pixel_color([(0, 0)], 2)', 'complete(self.temp_state)']",4,TRUE,"[[2, 2, 0], [0, 0, 0], [0, 0, 0]]",794b24be,185,"To make the output, you have to...change the color of the blocks and move them all to the top of the grid and start filling in the blocks from left to right keeping the same number of blocks from the original grid.","To make the output, you have to...change the color of the pixels and move them all to the bottom of the grid and start filling in the pixels from right to left keeping the same number of pixels from the original grid.","To make the output, you have to...keep the color of the blocks the same and move them all to the top of the grid and start filling in the blocks from left to right keeping the same number of blocks from the original grid.","To make the output, you have to...change the color of the blocks and leave them in the middle of the grid and start filling in the blocks from right to left keeping the same number of blocks from the original grid.","To make the output, you have to...change the color of the blocks and move them all to the top of the grid and start removing the blocks from left to right keeping the same number of blocks from the original grid."
124,7ddcd7ec.json,"['diagonal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(8, 0), (0, 8)], 8)', 'diagonal_line(self.temp_state, [(5, 4), (9, 8)], 8)', 'pixel_color([(8, 0)], 8)', 'pixel_color([(0, 8)], 8)', 'pixel_color([(9, 8)], 8)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 8, 0, 0, 0, 0], [0, 0, 0, 8, 8, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 0, 0, 0, 0, 0], [0, 0, 8, 0, 0, 8, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 8, 0, 0, 0], [8, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 8, 0]]",7ddcd7ec,189,"To make the output, you have to...extend pixels of the same color diagonally from the 2x2 square, continuing to the edge.","To make the output, you have to...shrink pixels of the same color horizontally from the 2x2 square, continuing to the edge.","To make the output, you have to...extend pixels of different colors diagonally from the 2x2 square, continuing to the edge.","To make the output, you have to...extend pixels of the same color vertically from the 3x3 rectangle, stopping at the center.","To make the output, you have to...extend pixels of the same color diagonally from the 2x2 square, stopping at the edge."
126,7e0986d6.json,"['obj_color', 'obj_color', 'horizontal_line', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color']","['obj_color(self.temp_state, object1, 5)', 'obj_color(self.temp_state, object2, 5)', 'horizontal_line(self.temp_state, [(1, 8), (1, 0)], 0)', 'obj_color(self.temp_state, object4, 0)', 'obj_color(self.temp_state, object5, 5)', 'obj_color(self.temp_state, object6, 0)', 'obj_color(self.temp_state, object7, 0)', 'obj_color(self.temp_state, object9, 5)', 'obj_color(self.temp_state, object10, 0)', 'obj_color(self.temp_state, object8, 5)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0]]",7e0986d6,191,"To make the output, you have to...remove scattered single pixels. Also, you should retain rectangles composed of a single color.","To make the output, you have to...remove all the rectangles. Also, you should scatter single pixels of each color.","To make the output, you have to...move scattered single pixels. Also, you should divide rectangles composed of multiple colors.","To make the output, you have to...add scattered single pixels. Also, you should make all rectangles single color.","To make the output, you have to...remove scattered multiple pixels. Also, you should detach rectangles composed of a single color."
127,7f4411dc.json,"['obj_color', 'horizontal_line', 'obj_color', 'vertical_line', 'pixel_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 0)', 'horizontal_line(self.temp_state, [(1, 0), (1, 9)], 0)', 'obj_color(self.temp_state, object4, 0)', 'vertical_line(self.temp_state, [(3, 0), (8, 0)], 0)', 'pixel_color([(5, 9)], 0)', 'obj_color(self.temp_state, object8, 0)', 'obj_color(self.temp_state, object10, 0)', 'obj_color(self.temp_state, object9, 0)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 8, 8, 0, 0, 0, 0, 0, 0], [0, 8, 8, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 8, 8, 8, 8, 0], [0, 0, 0, 0, 8, 8, 8, 8, 8, 0], [0, 0, 0, 0, 8, 8, 8, 8, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",7f4411dc,192,"To make the output, you have to...keep rectangles and remove scattered single pixels around them.","To make the output, you have to...remove rectangles and keep scattered single pixels around them.","To make the output, you have to...add scattered single pixels around the rectangles.","To make the output, you have to...remove rectangles and add scattered single pixels around them.","To make the output, you have to...remove rectangles and add scattered multiple pixels around them."
128,810b9b61.json,"['obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object2, 3)', 'obj_color(self.temp_state, object4, 3)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 1], [0, 3, 0, 0, 3, 0, 0, 1, 0, 0, 0, 1], [0, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0], [0, 1, 0, 0, 3, 0, 0, 0, 3, 0, 0, 1], [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",810b9b61,195,"To make the output, you have to...copy the input grid. Then, any shapes that are closed (like complete squares or rectangles) will be changed from blue to green. If any other shapes are open (incomplete) or are just lines, stay blue.","To make the output, you have to...copy the input grid. Then, any shapes that are open (like incomplete squares or rectangles) will be changed from blue to green. If any other shapes are closed (complete) or are just lines, stay blue.","To make the output, you have to...copy the input grid. Then, any shapes that are closed (like complete squares or rectangles) will be changed from green to blue. If any other shapes are open (incomplete) or are just lines, stay green.","To make the output, you have to...copy the input grid. Then, any shapes that are closed (like incomplete circles or ellipses) will be changed from blue to green. If any other shapes are open (complete) or are just lines, stay blue.","To make the output, you have to...copy the input grid. Then, any shapes that are open (like complete squares or rectangles) will be changed from green to blue. If any other shapes are closed (incomplete) or are just lines, stay green."
133,855e0971.json,"['vertical_line', 'vertical_line', 'pixel_color', 'vertical_line', 'vertical_line', 'vertical_line', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(0, 4), (4, 4)], 0)', 'vertical_line(self.temp_state, [(4, 12), (0, 12)], 0)', 'pixel_color([(0, 12)], 0)', 'vertical_line(self.temp_state, [(3, 6), (8, 6)], 0)', 'vertical_line(self.temp_state, [(7, 10), (13, 10)], 0)', 'vertical_line(self.temp_state, [(12, 1), (16, 1)], 0)', 'pixel_color([(16, 1)], 0)', 'complete(self.temp_state)']",8,TRUE,"[[8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8], [8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8], [8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8], [8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 8, 8, 0, 8, 8], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]",855e0971,201,"To make the output, you have to...make one single line of black tiles, using the black tile provided, to cover the color block that it is located in either horizontally or vertically. You figure this out by determining which line would be shorter and create single black line in that manner. That is you have one black line that goes from the top of the color grid that it is in, to the bottom of that color grid. Or from side to side, depending on length.","To make the output, you have to... create two double lines of black tiles, using the red tile provided, to cover the color block that it is located in either horizontally or vertically. You figure this out by determining which line would be larger and create single pink line in that way. That is have two brown lines that go from the top of the color grid that it is on, to the bottom of that orange grid. Or from side to side, depending on length.","To make the output, you have to... create one single circle of gray tiles, using the gray tile provided, to cover the color block that it is located in either horizontally or horizontally. You figure this out by determining which circle would be shorter and create single green circle in that manner. That is you have one gray circle that goes from the top of the color grid that it is in, to the top of that color grid. Or from side to side, depending on width.","To make the output, you have to... build one single line of yellow tiles, using the blue tile provided, to cover the color line that it is located in either vertically or vertically. You figure this out by determining which line would be shorter and create single red line in that appearance. That is you have one yellow pyramid that goes from the bottom of the color line that it is in, to the top of that color line. Or from side to side, depending on height.","To make the output, you have to... create one double path of light blue tiles, using the gray tile provided, to cover the color block that it is located in either horizontally or horizontally. You figure this out by determining which path would be larger and create single pink path in that style. That is have one brown path that goes from the right of the color block that it is in, to the left of that color block. Or from top to bottom, depending on width."
136,88a10436.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(8, 4), (8, 7)], 1)', 'horizontal_line(self.temp_state, [(9, 5), (9, 8)], 3)', 'horizontal_line(self.temp_state, [(7, 5), (7, 8)], 2)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0]]",88a10436,205,"To make the output, you have to...copy the input 3x3 multi-colored shape ontop of the gray square. This square comprises the middle of the 3x3 copy.","To make the output, you have to...copy the input 2x2 multi-colored shape in the middle of the pink square. This square comprises the middle of the 2x2 copy.","To make the output, you have to...copy the input 3x3 multi-colored shape underneath the gray square. This square comprises the top of the 3x3 copy.","To make the output, you have to...copy the input 4x4 multi-colored shape on the left of the gray square. This square comprises the right of the 4x4 copy.","To make the output, you have to...copy the input 3x3 multi-colored shape on the right side of the green square. This square comprises the left of the 3x3 copy."
137,890034e9.json,"['vertical_line', 'vertical_line', 'horizontal_line', 'horizontal_line', 'complete']","['vertical_line(self.temp_state, [(10, 12), (2, 12)], 3)', 'vertical_line(self.temp_state, [(10, 15), (2, 15)], 3)', 'horizontal_line(self.temp_state, [(9, 12), (9, 15)], 3)', 'horizontal_line(self.temp_state, [(3, 12), (3, 15)], 3)', 'complete(self.temp_state)']",5,TRUE,"[[0, 2, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0, 1, 2], [1, 1, 1, 0, 2, 1, 2, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 2, 1, 1], [1, 1, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 3, 3, 0, 1, 1, 1, 1], [0, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 3, 0, 0, 3, 0, 1, 1, 1, 2], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 3, 0, 0, 3, 1, 0, 0, 2, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 3, 0, 0, 3, 1, 0, 1, 1, 1], [1, 1, 1, 2, 2, 1, 0, 1, 2, 2, 1, 1, 3, 0, 0, 3, 0, 1, 1, 1, 2], [1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 3, 3, 3, 3, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 1, 1, 1, 1, 1], [1, 3, 3, 3, 3, 1, 2, 0, 2, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 0, 0, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 3, 0, 0, 3, 1, 1, 2, 0, 1, 1, 1, 0, 2, 1, 1, 1, 0, 1, 1, 1], [1, 3, 0, 0, 3, 1, 2, 0, 0, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 0, 1], [1, 3, 0, 0, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 3, 0, 0, 3, 1, 0, 2, 0, 1, 1, 1, 1, 0, 1, 1, 0, 2, 1, 1, 1], [1, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]]",8.90E+14,207,"To make the output, you have to...copy the input grid. Next, find another area in the large grid with the same number and same shape of black grid as in the rectangle. However, it will only be black grid without the shape and the black grid might also be surrounded by black squares or have additional black squares around it. After you find the black grid, replicate the first shape with the black grid you find as the center. There should be two identical rectangles in the output grid.","To make the output, you have to...copy the input grid. Next, find another area in the large grid with a different number and different shape of black grid as in the rectangle. However, it will only be black grid without the shape and the black grid might also be surrounded by black squares or have additional black squares around it. After you find the black grid, replicate the first shape with the black grid you find as the center. There should be two identical rectangles in the output grid.","To make the output, you have to...copy the input grid. Next, find another area in the large grid with the same number and same shape of black grid as in the rectangle. However, it will only be black grid without the shape and the black grid might also be surrounded by white squares or have additional white squares around it. After you find the black grid, replicate the second shape with the black grid you find as the center. There should be two identical rectangles in the output grid.","To make the output, you have to...copy the input grid. Next, find another area in the small grid with the same number and same shape of black grid as in the rectangle. However, it will only be black grid without the shape and the black grid might also be surrounded by black squares or have additional black squares around it. After you find the black grid, replicate the first shape with the black grid you find as the center. There should be one identical rectangles in the output grid.","To make the output, you have to...copy the input grid. Next, find another area in the large grid with the same number and same shape of white grid as in the rectangle. However, it will only be black grid without the shape and the black grid might also be surrounded by black squares or have additional black squares around it. After you find the black grid, replicate the first shape with the black grid you find as the center. There should be two identical rectangles in the output grid."
138,8d510a79.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(8, 0), (4, 0)], 2)', 'vertical_line(self.temp_state, [(4, 1), (1, 1)], 2)', 'vertical_line(self.temp_state, [(1, 8), (4, 8)], 2)', 'vertical_line(self.temp_state, [(7, 5), (4, 5)], 2)', 'pixel_color([(0, 3)], 1)', 'pixel_color([(0, 6)], 1)', 'pixel_color([(1, 6)], 1)', 'pixel_color([(8, 2)], 1)', 'pixel_color([(9, 2)], 1)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 2, 0, 1, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 0, 0, 2, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0]]",8d510a79,120,"To make the output, you have to...copy the shape with the light blue dot but replace the light blue dot with the shape color.","To make the output, you have to...copy the shape with the yellow dot but replace the yellow dot with the shape color.","To make the output, you have to...copy the shape with the light blue dot but avoid replacing the light blue dot with the shape color.","To make the output, you have to...avoid copying the shape with the light blue dot but replace the light blue dot with the shape color.","To make the output, you have to...copy the shape without the light blue dot but replace the light blue dot with the shape color."
138,8d510a79.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(8, 0), (4, 0)], 2)', 'vertical_line(self.temp_state, [(4, 1), (1, 1)], 2)', 'vertical_line(self.temp_state, [(1, 8), (4, 8)], 2)', 'vertical_line(self.temp_state, [(7, 5), (4, 5)], 2)', 'pixel_color([(0, 3)], 1)', 'pixel_color([(0, 6)], 1)', 'pixel_color([(1, 6)], 1)', 'pixel_color([(8, 2)], 1)', 'pixel_color([(9, 2)], 1)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 2, 0, 1, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 1, 0, 2, 0], [0, 2, 0, 0, 0, 0, 0, 0, 2, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 2, 0, 0, 0, 0], [2, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0]]",8d510a79,211,"To make the output, you have to...complete a line with the colors. If it's red, fill the line in until you hit the gray bar. If it's blue, fill in until you hit the bottom or top edge.","To make the output, you have to...skip a line with the colors. If it's red, fill the line in until you hit the gray bar. If it's blue, fill in until you hit the bottom or top edge.","To make the output, you have to...complete a line with the colors. If it's green, fill the line in until you hit the brown bar. If it's yellow, fill in until you hit the bottom or top edge.","To make the output, you have to...complete a line with the colors. If it's red, ignore the line until you hit the gray bar. If it's blue, ignore until you hit the bottom or top edge.","To make the output, you have to...keep a track of colors. If it's black, fill the line in until you hit the gray bar. If it's light blue, fill in until you hit the bottom or top edge."
142,90f3ed37.json,"['horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(8, 4), (8, 9)], 1)', 'horizontal_line(self.temp_state, [(10, 4), (10, 9)], 1)', 'pixel_color([(8, 9)], 1)', 'pixel_color([(10, 9)], 1)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 8, 8, 8, 8, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 1, 1, 1, 1, 1], [8, 8, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",90f3ed37,218,"To make the output, you have to...finish the line so that it is the same as the top line but finish the line in blue.","To make the output, you have to...finish the line so that it is the same as the top line but finish the line in green.","To make the output, you have to...begin the line so that it is the same as the bottom line but start the line in blue.","To make the output, you have to...finish the line so that it is different from the top line but finish the line in blue.","To make the output, you have to...finish the line so that it is the same as the bottom line but finish the line in red."
145,928ad970.json,"['horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(2, 2), (2, 12)], 8)', 'horizontal_line(self.temp_state, [(12, 12), (12, 2)], 8)', 'vertical_line(self.temp_state, [(12, 11), (2, 11)], 8)', 'vertical_line(self.temp_state, [(2, 3), (12, 3)], 8)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 8, 8, 8, 8, 0, 0, 8, 0, 0, 0], [0, 0, 5, 8, 0, 8, 0, 0, 8, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 8, 8, 8, 8, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 5, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",928ad970,223,"To make the output, you have to...copy the input grid. Then, using the color of the colored rectangle, make the largest rectangle possible that will fit inside the four grey dots. The outside of the new rectangle should touch the inside of all four grey dots.","To make the output, you have to...copy the input grid. Then, using the color of the colored polygon, make the largest rectangle possible that will fit inside the four light blue dots. The outside of the new rectangle should touch the inside of all four light blue dots.","To make the output, you have to...clone the input grid. Then, using the color of the colored square, make the largest possible rectangle that will fit inside the four brown dots. The outside of the new square should be outside all four brown dots.","To make the output, you have to...replicate the input grid. Then, using the color of the colored ellipse, make the smallest rectangle possible that will fit inside the four pink dots. The outside of the new ellipse should touch the inside of all four pink dots.","To make the output, you have to...immitate the input grid. Then, using the color of the colored circle, make the largest square possible that will fit inside the four black dots. The outside of the new circle should contact the inside of all four black dots."
146,93b581b8.json,"['vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(3, 1), (0, 1)], 5)', 'vertical_line(self.temp_state, [(3, 0), (0, 0)], 5)', 'pixel_color([(5, 4)], 3)', 'pixel_color([(5, 5)], 3)', 'vertical_line(self.temp_state, [(3, 4), (0, 4)], 2)', 'vertical_line(self.temp_state, [(3, 5), (0, 5)], 2)', 'pixel_color([(5, 1)], 1)', 'pixel_color([(5, 0)], 1)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0, 0], [5, 5, 0, 0, 2, 2], [5, 5, 0, 0, 2, 2], [0, 0, 3, 1, 0, 0], [0, 0, 2, 5, 0, 0], [1, 1, 0, 0, 3, 3]]",93b581b8,224,"To make the output, you have to...copy the input grid. Then, you will add 4 2x2 blocks to the grid, each touching the corner of the 2x2 colored square in the input. The color of each 2x2 block should be the same color as the opposite corner of the 2x2 colored square. If the 2x2 colored square is not in the center of the input, some of the 2x2 blocks you are adding may be off the page.","To make the output, you have to...copy the input grid. Then, you will remove 4 2x2 blocks from the grid, each touching the corner of the 2x2 colored square in the input. The color of each 2x2 block should be the same color as the adjacent corner of the 2x2 colored square. If the 2x2 colored square is not in the center of the input, some of the 2x2 blocks you are removing may be off the page.","To make the output, you have to...alter the input grid. Then, you will add 3 3x3 blocks to the grid, each touching the corner of the 3x3 colored square in the input. The color of each 3x3 block should be the same color as the adjacent corner of the 3x3 colored square. If the 3x3 colored square is not in the center of the input, some of the 3x3 blocks you are adding may be outside off the page.","To make the output, you have to...duplicate the input grid. Then, you will add 5 1x1 blocks to the grid, each touching the corner of the 1x1 colored square in the input. The color of each 1x1 block should be the same color as the neighboring corner of the 1x1 colored square. If the 1x1 colored square is not in the center of the input, some of the 1x1 blocks you are adding may be out of reach.","To make the output, you have to...change the input grid. Then, you will remove 2 4x4 blocks from the grid, each touching the corner of the 4x4 colored square in the input. The color of each 4x4 block should be the different color from the same corner of the 4x4 colored square. If the 4x4 colored square is not in the center of the input, all of the 4x4 blocks you are removing will be missing."
147,941d9a10.json,"['horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(5, 3), (5, 6)], 2)', 'pixel_color([(9, 9)], 3)', 'pixel_color([(0, 0)], 1)', 'complete(self.temp_state)']",4,TRUE,"[[1, 5, 0, 5, 0, 0, 5, 0, 5, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 5, 0, 5, 0, 0, 5, 0, 5, 0], [0, 5, 0, 5, 0, 0, 5, 0, 5, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 5, 0, 5, 2, 2, 5, 0, 5, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 5, 0, 5, 0, 0, 5, 0, 5, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 5, 0, 5, 0, 0, 5, 0, 5, 3]]",941d9a10,225,"To make the output, you have to...fill the left-upper black area with blue; the middle with red; and the green in the right-down.","To make the output, you have to...fill the right-upper black area with blue; the middle with red; and the green in the right-down.","To make the output, you have to...fill the left-upper black area with green; the middle with yellow; and the blue in the right-down.","To make the output, you have to...fill the left-upper black area with red; the middle with blue; and the pink in the right-down.","To make the output, you have to...fill the left-upper black area with yellow; the middle with green; and the red in the right-down."
148,952a094c.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'horizontal_line', 'horizontal_line', 'complete']","['pixel_color([(2, 1)], 2)', 'pixel_color([(8, 1)], 4)', 'pixel_color([(2, 8)], 8)', 'pixel_color([(8, 8)], 6)', 'horizontal_line(self.temp_state, [(4, 2), (4, 7)], 0)', 'horizontal_line(self.temp_state, [(6, 2), (6, 7)], 0)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 8, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 4, 0, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",952a094c,227,"To make the output, you have to...copy the input grid to the output workspace. Move each of the interior corner colored pixels to the exterior corner opposite of their input position. Meaning, move the upper left interior pixel such that its corner is touching the lower left corner of the lower left corner pixel of the monochromatic rectangle or square. You're moving pixel at a 45 degree angle to the exterior opposite corner, do that with each interior corner square to create the correct output grid.","To make the output, you have to...copy the input grid to the output workspace. Move each of the exterior corner colored pixels to the interior corner opposite of their input position. Meaning, move the upper left exterior pixel such that its corner is touching the lower left corner of the lower left corner pixel of the monochromatic rectangle or square. You're moving pixel at a 45 degree angle to the interior opposite corner, do that with each exterior corner square to create the correct output grid.","To make the output, you have to...copy the output grid to the input workspace. Move each of the interior corner colored pixels to the exterior corner opposite of their output position. Meaning, move the lower right interior pixel such that its corner is touching the upper right corner of the upper right corner pixel of the monochromatic rectangle or square. You're moving pixel at a 45 degree angle to the exterior opposite corner, do that with each interior corner square to create the correct input grid.","To make the output, you have to...delete the input grid for the output workspace. Reorder each of the interior corner colored pixels to the exterior corner similar to their input position. Meaning, place the lower right interior pixel such that its corner is touching the upper left corner of the upper left corner pixel of the monochromatic rectangle or square. You're placing pixel at a 45-degree angle to the exterior similar corner, do that with each interior corner square to create the incorrect output grid.","To make the output, you have to...copy the input grid to the output workspace. Move each of the exterior corner colored pixels to the interior corner identical to their input position. Meaning, move the lower left exterior pixel such that its corner is touching the lower right corner of the lower right corner pixel of the monochromatic rectangle or square. You're moving pixel at a 45 degree angle to the interior identical corner, do that with each exterior corner square to create the incorrect output grid."
149,9565186b.json,"['obj_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 5)', 'pixel_color([(2, 0)], 5)', 'pixel_color([(0, 0)], 5)', 'complete(self.temp_state)']",4,TRUE,"[[5, 3, 5], [3, 3, 5], [5, 3, 5]]",9565186b,228,"To make the output, you have to...keep the color with the most squares and everything else should be gray.","To make the output, you have to...keep the color with the least squares and everything else should be green. ","To make the output, you have to...make the color with the most squares gray and everything else should be gray. ","To make the output, you have to...keep the color with the most squares and everything else should be colored randomly. ","To make the output, you have to...color the squares randomly, keeping the most squares as grey."
152,98cf29f8.json,"['move_left', 'move_left', 'move_left', 'move_left', 'move_left', 'obj_color', 'complete']","['move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'move_left(self.temp_state, object2)', 'obj_color(self.temp_state, object1, 3)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",98cf29f8,233,"To make the output, you have to...remove the colored squares that create a floor to the other pattern. you bring the patterns together by moving the pattern that is the same color as the line you remove.","To make the output, you have to...replace the colored squares that create a floor to the other pattern. you bring the patterns together by moving the pattern that is the same color as the circle you remove.","To make the output, you have to...construct the colored squares that keep apart the other patterns. You keep apart the patterns by shifting the pattern that is a different color as the line you add.","To make the output, you have to...remove the colored squares that create a roof to the other pattern. You bring the patterns together by moving the pattern that is a different color as the line you remove.","To make the output, you have to...add the colored squares that create a floor to the other pattern. You keep apart the patterns by shifting the pattern that is the same color as the line you add."
153,99fa7670.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(2, 2), (2, 7)], 7)', 'horizontal_line(self.temp_state, [(0, 3), (0, 7)], 8)', 'horizontal_line(self.temp_state, [(4, 5), (4, 7)], 2)', 'vertical_line(self.temp_state, [(3, 7), (6, 7)], 2)', 'vertical_line(self.temp_state, [(4, 7), (1, 7)], 7)', 'pixel_color([(0, 7)], 8)', 'pixel_color([(1, 7)], 8)', 'pixel_color([(6, 7)], 2)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 8, 8, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 8], [0, 0, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 2]]",99fa7670,236,"To make the output, you have to...extend the colored block horizontally until the right edge, then extend the block downward until the block meets the bottom edge or other colored block. ","To make the output, you have to...shorten the colored block horizontally until the left edge, then shorten the block upward until the block meets the top edge or other colored block.","To make the output, you have to...extend the colorless block vertically until the top edge, then extend the block rightward until the block meets the right edge or another colorless block.","To make the output, you have to...extend the colored block vertically until the right edge, then extend the block downward until the block meets the left edge or other colored block.","To make the output, you have to...reduce the colored block horizontally until the left edge, then shrink the block upward until the block meets the bottom edge or other colored block."
155,9dfd6313.json,"['rotate_right', 'flip_horizontal', 'complete']","['rotate_right_state(temp_state)', 'horizontal_flip(temp_state)', 'complete(self.temp_state)']",3,TRUE,"[[5, 0, 3, 0, 2, 2], [0, 5, 3, 0, 0, 0], [0, 0, 5, 0, 8, 6], [0, 0, 0, 5, 8, 0], [0, 0, 0, 0, 5, 0], [0, 0, 0, 0, 0, 5]]",9dfd6313,240,"To make the output, you have to...rotate the pattern 90 degrees to the right and then flip it over to it's reverse. the output should be an 90 degrees mirror image of the input.","To make the output, you have to...rotate the pattern 45 degrees to the right and then flip it over to it's reverse. The output should be a 45 degrees mirror image of the input.","To make the output, you have to...rotate the pattern 90 degrees to the left and then make it stand still. The output should be a standing image of the input.","To make the output, you have to...flip the pattern 90 degrees to the right and then rotate it to it's reverse. The output should be a flipped image of the input.","To make the output, you have to...rotate the pattern 180 degrees to the right and then flip it over to it's reverse. The output should be a 180 degrees mirror image of the input."
157,a1570a43.json,"['move_right', 'complete']","['move_right(self.temp_state, object3)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 3, 0], [0, 2, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 0], [0, 2, 2, 2, 0, 0, 0, 0], [0, 2, 2, 2, 2, 2, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",a1570a43,244,"To make the output, you have to...think of the 4 pixels as a picture frame. Reposition the random shape to be centered in that frame.","To make the output, you have to... think of the 4 pixels as a picture book. Reposition the different shape to be located at the top in that book.","To make the output, you have to... think of the 4 pixels as a picture wall. Align the unique shape to be presented at the bottom in that wall.","To make the output, you have to... consider the 4 pixels as a picture card. Move the specific shape to be placed at the corner in that card.","To make the output, you have to... imagine the 4 pixels as a photo frame. Shift the random shape to be fixed on the side in that frame."
158,a2fd1cf0.json,"['horizontal_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(2, 1), (2, 11)], 8)', 'vertical_line(self.temp_state, [(2, 10), (10, 10)], 8)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",a2fd1cf0,245,"To make the output, you have to...create a road of light blue squares between the red and green squares. The road should travel up or down from the green square and left or right from the red square until the two meet.","To make the output, you have to...create a road of light blue rectangles between the red and green squares. The road should travel up or down from the green rectangle and left or right from the red rectangle until the two meet.","To make the output, you have to...create a road of black squares between the red and green squares. The road should travel up or down from the black square and left or right from the red square until the two meet.","To make the output, you have to...create a road of light blue squares between the red and yellow squares. The road should travel up or down from the green square and left or right from the yellow square until the two meet.","To make the output, you have to...create a road of light blue squares between the pink and green squares. The road should travel up or down from the green square and left or right from the pink square until the two meet."
159,a3df8b1e.json,"['x_line', 'x_line', 'x_line', 'complete']","['X_line(self.temp_state, [(9, 0)], 1)', 'X_line(self.temp_state, [(5, 4)], 1)', 'X_line(self.temp_state, [(1, 0)], 1)', 'complete(self.temp_state)']",4,TRUE,"[[0, 1, 0, 0, 0], [1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 1], [0, 0, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0]]",a3df8b1e,247,"To make the output, you have to...draw a blue dot one to the right and one up from the original one, follow that pattern until you reach the side, then draw a blue dot one to the left and one up until you reach the other side, repeat until you reach the top.","To make the output, you have to...draw a green dot one to the right and one up from the original one, follow that pattern until you reach the side, then draw a green dot one to the left and one up until you reach the other side, repeat until you reach the top.","To make the output, you have to...draw a blue dot one to the left and one down from the original one, follow that pattern until you reach the side, then draw a blue dot one to the right and one down until you reach the other side, repeat until you reach the bottom.","To make the output, you have to...draw a blue dot one to the right and one up from the original one, follow that pattern until you reach the top, then draw a blue dot one to the left and one down until you reach the side, repeat until you reach the side.","To make the output, you have to...draw a red dot one to the right and one up from the original one, follow that pattern until you reach the side, then draw a red dot one to the left and one up until you reach the other side, repeat until you reach the top."
160,a48eeaf7.json,"['move_up', 'vertical_line', 'pixel_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['move_up(self.temp_state, object5)', 'vertical_line(self.temp_state, [(7, 4), (4, 4)], 5)', 'pixel_color([(5, 2)], 5)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)', 'obj_color(self.temp_state, object4, 0)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 5, 0, 0, 0, 0, 0], [0, 0, 2, 2, 5, 0, 0, 0, 0, 0], [0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",a48eeaf7,249,"To make the output, you have to...move the blocks until they touch the red square on the same line.","To make the output, you have to...move the circles until they touch the brown square on the same line.","To make the output, you have to...move the blocks until they touch the green rectangle on the same line.","To make the output, you have to...move the pixels until they touch the yellow square on the opposite line.","To make the output, you have to...move the blocks until they touch the red square on a different line."
161,a5313dff.json,"['vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'horizontal_line', 'horizontal_line', 'complete']","['vertical_line(self.temp_state, [(7, 1), (3, 1)], 1)', 'vertical_line(self.temp_state, [(7, 3), (3, 3)], 1)', 'pixel_color([(4, 2)], 1)', 'pixel_color([(6, 2)], 1)', 'horizontal_line(self.temp_state, [(1, 2), (1, 6)], 1)', 'horizontal_line(self.temp_state, [(2, 2), (2, 6)], 1)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 2, 2, 2, 2, 2, 0, 0], [0, 0, 2, 1, 1, 1, 2, 0, 0], [0, 0, 2, 1, 1, 1, 2, 0, 0], [2, 2, 2, 2, 2, 2, 2, 0, 0], [2, 1, 1, 1, 2, 0, 0, 0, 0], [2, 1, 2, 1, 2, 0, 0, 0, 0], [2, 1, 1, 1, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0]]",a5313dff,250,"To make the output, you have to...color the inside blue but if the border of shape goes outside the grid leave inside black.","To make the output, you have to...color the outside blue but if the border of shape goes outside the grid leave outside black.","To make the output, you have to...color the inside green but if the border of shape stays inside the grid leave inside white.","To make the output, you have to...color the inside gray but if the border of shape goes inside the grid leave inside black.","To make the output, you have to...color the outside red but if the border of shape goes outside the grid leave inside black."
163,a61f2674.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 1)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object3, 0)', 'obj_color(self.temp_state, object4, 2)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0]]",a61f2674,253,"To make the output, you have to...change the shortest group of blocks from gray to red, change the tallest group of blocks from gray to blue. Change the remaining gray blocks to black.","To make the output, you have to...change the shortest group of blocks from gray to blue, change the tallest group of blocks from gray to red. Change the remaining gray blocks to black.","To make the output, you have to...change the shortest group of blocks from gray to black, change the tallest group of blocks from gray to green. Change the remaining gray blocks to blue.","To make the output, you have to...change the shortest group of blocks from gray to light blue, change the tallest group of blocks from gray to brown. Change the remaining gray blocks to pink.","To make the output, you have to...change the shortest group of blocks from gray to yellow, change the tallest group of blocks from gray to pink. Change the remaining gray blocks to green."
165,a65b410d.json,"['horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'horizontal_line', 'horizontal_line', 'pixel_color', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(1, 6), (1, 0)], 3)', 'horizontal_line(self.temp_state, [(0, 7), (0, 0)], 3)', 'pixel_color([(1, 0)], 3)', 'pixel_color([(0, 0)], 3)', 'horizontal_line(self.temp_state, [(3, 4), (3, 0)], 1)', 'horizontal_line(self.temp_state, [(4, 3), (4, 0)], 1)', 'pixel_color([(5, 1)], 1)', 'vertical_line(self.temp_state, [(7, 0), (2, 0)], 1)', 'complete(self.temp_state)']",9,TRUE,"[[3, 3, 3, 3, 3, 3, 3, 0, 0], [3, 3, 3, 3, 3, 3, 0, 0, 0], [2, 2, 2, 2, 2, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]",a65b410d,255,"To make the output, you have to...copy your red input boxes to the output grid. And then, you need to add green bars above the red bar and blue bars below it, all attached to the left side. Furthermore, the green bar should increase in length by one square each time it moves up from the red bar, while the blue bar should decrease in length by one square each time it moves away from the red bar. The green bar continues this process all the way up to the top of the grid, while the blue bar repeats until it becomes one square in length.","To make the output, you have to...copy your blue input boxes to the output grid. And then, you need to add green bars above the blue bar and red bars below it, all attached to the right side. Furthermore, the green bar should decrease in length by one square each time it moves up from the blue bar, while the red bar should increase in length by one square each time it moves away from the blue bar. The green bar continues this process all the way up to the top of the grid, while the red bar repeats until it becomes one square in length.","To make the output, you have to...copy your green input boxes to the output grid. And then, you need to add red bars to the right of the green bar and blue bars to the left of it, all attached to the bottom side. Furthermore, the red bar should increase in length by one square each time it moves away from the green bar, while the blue bar should decrease in length by one square each time it moves towards the green bar. The red bar continues this process all the way to the edge of the grid, while the blue bar repeats until it becomes one square in length.","To make the output, you have to...copy your yellow input boxes to the output grid. And then, you need to add green bars above the yellow bar and blue bars below it, all attached to the left side. Furthermore, the green bar should decrease in length by one square each time it moves up from the yellow bar, while the blue bar should increase in length by one square each time it moves away from the yellow bar.","To make the output, you have to...copy your pink input boxes to the output grid. And then, you need to add blue bars on the left of the pink bar and yellow bars on the right of it, all attached to the bottom side. Furthermore, the blue bar should decrease in length by one square each time it moves away from the pink bar, while the yellow bar should increase in length by one square each time it moves towards the pink bar."
166,a699fb00.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(7, 4)], 2)', 'pixel_color([(5, 6)], 2)', 'pixel_color([(4, 2)], 2)', 'pixel_color([(2, 3)], 2)', 'pixel_color([(2, 7)], 2)', 'pixel_color([(0, 2)], 2)', 'pixel_color([(2, 5)], 2)', 'complete(self.temp_state)']",8,TRUE,"[[0, 1, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 2, 1, 2, 1, 2, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 2, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 2, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",a699fb00,257,"To make the output, you have to...fill the black sections between two blue sections with red.","To make the output, you have to...fill the black sections between two blue sections with green.","To make the output, you have to...fill the blue sections between two black sections with red.","To make the output, you have to...fill the red sections between two black sections with blue.","To make the output, you have to...fill the black sections between two red sections with blue."
167,a78176bb.json,"['obj_color', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color']","['obj_color(self.temp_state, object1, 0)', 'diagonal_line(self.temp_state, [(0, 5), (4, 9)], 1)', 'diagonal_line(self.temp_state, [(0, 1), (8, 9)], 1)', 'diagonal_line(self.temp_state, [(9, 3), (6, 0)], 1)', 'pixel_color([(0, 1)], 1)', 'pixel_color([(0, 5)], 1)', 'pixel_color([(4, 9)], 1)', 'pixel_color([(8, 9)], 1)', 'pixel_color([(9, 3)], 1)', 'pixel_color([(6, 0)], 1)']",10,TRUE,"[[0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]]",a78176bb,259,"To make the output, you have to...keep the original diagonal color and fill the grey color with black. copy the same diagonal color on the grey color side by keeping space number of original square size make by grey color.","To make the output, you have to...keep the original diagonal color and fill the grey color with blue. copy the same diagonal color on the grey color side by keeping space number of original square size make by grey color.","To make the output, you have to...change the original diagonal color and fill the grey color with black. copy the same diagonal color on the grey color side by keeping space number of original square size make by grey color.","To make the output, you have to...keep the original diagonal color and fill the grey color with black. copy the same diagonal color on the grey color side by keeping space number of original rectangle size make by grey color.","To make the output, you have to...remove the original diagonal color and fill the grey color with black. copy the same diagonal color on the grey color side by keeping space number of hollow square size make by grey color."
168,a79310a0.json,"['move_down', 'obj_color', 'complete']","['move_down(self.temp_state, object1)', 'obj_color(self.temp_state, object1, 2)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0], [0, 0, 2, 0, 0], [0, 2, 2, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 0, 0]]",a79310a0,260,"To make the output, you have to...move colored square one line down and change to red.","To make the output, you have to...move colored square one line up and change to red.","To make the output, you have to...move colored square one line down and change to blue.","To make the output, you have to...move white square one line down and change to red.","To make the output, you have to...move colored square one line right and change to red."
169,a85d4709.json,"['obj_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object1, 3)', 'pixel_color([(0, 1)], 3)', 'pixel_color([(0, 0)], 3)', 'pixel_color([(1, 0)], 2)', 'pixel_color([(1, 1)], 2)', 'pixel_color([(1, 2)], 2)', 'pixel_color([(2, 0)], 4)', 'pixel_color([(2, 1)], 4)', 'pixel_color([(2, 2)], 4)', 'complete(self.temp_state)']",10,TRUE,"[[3, 3, 3], [2, 2, 2], [4, 4, 4]]",a85d4709,261,"To make the output, you have to...check the position of the grey pixels. Where the grey pixel is in the first column, the corresponding pixels in that raw in the output should have color red. If the pixel is in the middle column, the corresponding pixels in the output should be yellow. Where the grey pixel is in the the last column , the corresponding pixel in that raw in the output should be green.","To make the output, you have to... check the position of the green pixels. Where the green pixel is in the first column, the corresponding pixels in that raw in the output should have color blue. If the pixel is in the middle column, the corresponding pixels in the output should be pink. Where the green pixel is in the last column , the corresponding pixel in that raw in the output should be red.","To make the output, you have to... check the position of the pink pixels. Where the pink pixel is in the first column, the corresponding pixels in that raw in the output should have color black. If the pixel is in the middle column, the corresponding pixels in the output should be brown. Where the pink pixel is in the last column , the corresponding pixel in that raw in the output should be blue.","To make the output, you have to... check the position of the brown pixels. Where the brown pixel is in the first column, the corresponding pixels in that raw in the output should have color yellow. If the pixel is in the middle column, the corresponding pixels in the output should be light blue. Where the brown pixel is in the last column , the corresponding pixel in that raw in the output should be black.","To make the output, you have to... check the position of the grey pixels. Where the grey pixel is in the first column, the corresponding pixels in that raw in the output should have color black. If the pixel is in the middle column, the corresponding pixels in the output should be red. Where the grey pixel is in the the last column , the corresponding pixel in that raw in the output should be pink."
171,a9f96cdd.json,"['pixel_color', 'pixel_color', 'obj_color', 'complete']","['pixel_color([(0, 3)], 3)', 'pixel_color([(2, 3)], 8)', 'obj_color(self.temp_state, object1, 0)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 3, 0], [0, 0, 0, 0, 0], [0, 0, 0, 8, 0]]",a9f96cdd,265,"To make the output, you have to...make the pixels touching the colored pixel at its corners colored in green for the top left corner pixel, pink for the pixel touching its top right corner, light blue for the pixel touching its bottom left corner and orange for the pixel touching its bottom right corner. the colored pixel in the input should be colored black","To make the output, you have to...make the pixels touching the colored pixel at its corners colored in blue for the top left corner pixel, pink for the pixel touching its top right corner, light green for the pixel touching its bottom left corner and orange for the pixel touching its bottom right corner. the colored pixel in the input should be colored black.","To make the output, you have to...make the pixels touching the colored pixel at its corners colored in green for the top right corner pixel, red for the pixel touching its top left corner, light blue for the pixel touching its bottom right corner and yellow for the pixel touching its bottom left corner. the colored pixel in the input should be colored black.","To make the output, you have to...make the pixels touching the colored pixel at its corners colored in pink for the top left corner pixel, green for the pixel touching its top right corner, light blue for the pixel touching its bottom left corner and gray for the pixel touching its bottom right corner. the colored pixel in the input should be colored black.","To make the output, you have to...make the pixels touching the colored pixel at its corners colored in green for the bottom left corner pixel, pink for the pixel touching its bottom right corner, light blue for the pixel touching its top left corner and yellow for the pixel touching its top right corner. the colored pixel in the input should be colored black."
172,aabf363d.json,"['obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object1, 2)', 'obj_color(self.temp_state, object2, 0)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 2, 0, 0, 0], [0, 2, 2, 2, 2, 2, 0], [0, 0, 0, 2, 2, 0, 0], [0, 0, 2, 2, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0]]",aabf363d,266,"To make the output, you have to...make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner","To make the output, you have to...change all black boxes in the center to be the color of the bottom left corner. ","To make the output, you have to...paint the entire grid with the color of the box at the bottom left corner.","To make the output, you have to...make the bottom left corner box gray and the colored object at the center the color of the box at the top right corner.","To make the output, you have to...make the box at the top right corner black and the colored object at the center the color of the box at the top right corner."
174,ae3edfdc.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color']","['pixel_color([(3, 10)], 3)', 'pixel_color([(2, 11)], 3)', 'pixel_color([(4, 11)], 3)', 'pixel_color([(6, 6)], 7)', 'pixel_color([(6, 4)], 7)', 'obj_color(self.temp_state, object7, 0)', 'obj_color(self.temp_state, object6, 0)', 'obj_color(self.temp_state, object4, 0)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ae3edfdc,269,"To make the output, you have to...create 2 patterns using all of the colored boxes in the input grid. One pattern is focused on the red box and the other one is focused on the blue box. Both the red box and the blue box will be in their exact same positions in the new grid. First put the red box in the same place as it is in the input grid. Now, look at the green boxes in the input grid and imagine that the green boxes are being pulled toward the red box until they are touching it. So, if there is a green box in the input grid above the red box, place it directly above the red box in the new grid. If there is a green box to the right of the red box in the input side, move it until it is directly to the right of the red box. Do the same for any other green boxes. After you are done, all of the green boxes should be touching the red box which is still in its original location. That pattern is done. Now use the same exact method for the blue box and surround it with the orange boxes. Think of the blue and red boxes as the centers of flowers and the green and orange boxes as the petals.","To make the output, you have to...create a single pattern using the colored boxes in the input grid. The pattern is focused on the red box. The red box will be in the exact same position in the new grid. Surround the red box with the green boxes in the new grid. Think of the red box as the center of a flower and the green boxes as the petals.","To make the output, you have to...create 2 patterns using all of the colored boxes in the input grid. One pattern is focused on the red box and the other one is focused on the pink box. Both the red box and the pink box will be in their exact same positions in the new grid. Do the same for any other pink boxes. After you are done, all of the pink boxes should be touching the red box which is still in its original location. That pattern is done. Now use the same exact method for the blue box and surround it with the brown boxes. Think of the blue and red boxes as the centers of flowers and the brown and orange boxes as the petals.","To make the output, you have to...place the red box in the same place as it is in the input grid. Now, look at the green boxes in the input grid and imagine that the green boxes are being pushed away from the red box until they are not touching it. So, if there is a green box in the input grid above the red box, place it directly above the red box in the new grid. Now use the same exact method for the blue box and push it away with the orange boxes. Think of the blue and red boxes as the centers of explosions and the green and orange boxes as the debris.","To make the output, you have to...create 3 patterns using all of the colored boxes in the input grid. One pattern is focused on the red box, the other one on the blue box, and the last one on the yellow box. Both the red box and the blue box will be in their exact same positions in the new grid. First put the red box in the same place as it is in the input grid. That pattern is done. Now use the same exact method for the blue box and surround it with the orange boxes. Now for the yellow box, surround it with the grey boxes. Think of the yellow, blue, and red boxes as the centers of flowers and the orange, grey and green boxes as the petals."
175,aedd82e4.json,"['obj_color', 'obj_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object2, 1)', 'obj_color(self.temp_state, object3, 1)', 'pixel_color([(2, 2)], 1)', 'complete(self.temp_state)']",4,TRUE,"[[2, 2, 0, 1], [0, 2, 0, 0], [0, 0, 1, 0], [1, 0, 0, 0], [0, 0, 2, 2]]",aedd82e4,271,"To make the output, you have to...copy the input grid. Any shapes which only contain one single square should be colored blue.","To make the output, you have to... copy the input grid. Any shapes which only contain one single square should be colored red.","To make the output, you have to... rotate the input grid. Any shapes which only contain one single square should be colored blue.","To make the output, you have to... copy the input grid. Any shapes which contain two single squares should be colored blue.","To make the output, you have to... mirror the input grid. Any shapes which only contain one single square should be colored blue."
176,af902bf9.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(6, 0), (6, 3)], 2)', 'horizontal_line(self.temp_state, [(7, 0), (7, 3)], 2)', 'horizontal_line(self.temp_state, [(1, 5), (1, 9)], 2)', 'horizontal_line(self.temp_state, [(2, 5), (2, 9)], 2)', 'horizontal_line(self.temp_state, [(3, 5), (3, 9)], 2)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 4, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2, 0], [0, 0, 0, 0, 0, 4, 0, 0, 0, 4], [4, 0, 0, 4, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 0, 0, 0], [4, 0, 0, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",af902bf9,272,"To make the output, you have to...put red in the middle of the yellow square structure, but not actually next to any of the yellow squares.","To make the output, you have to...put blue in the middle of the yellow square structure, but not actually next to any of the yellow squares.","To make the output, you have to...put red in the middle of the white square structure, but not actually next to any of the white squares.","To make the output, you have to...put red in the middle of the yellow circular structure, but not actually next to any of the yellow circles.","To make the output, you have to...put red next to the middle of the yellow square structure, but not actually in the middle of any of the yellow squares."
177,b1948b0a.json,"['obj_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object1, 2)', 'pixel_color([(3, 1)], 2)', 'pixel_color([(1, 2)], 2)', 'pixel_color([(2, 3)], 2)', 'pixel_color([(3, 3)], 2)', 'pixel_color([(0, 3)], 2)', 'complete(self.temp_state)']",7,TRUE,"[[2, 7, 7, 2], [2, 7, 2, 7], [7, 7, 7, 2], [7, 2, 7, 2]]",b1948b0a,275,"To make the output, you have to...replace all the purple squares with red.","To make the output, you have to...replace all the purple squares with yellow.","To make the output, you have to...replace all the red squares with purple.","To make the output, you have to...replace all the green squares with red.","To make the output, you have to...replace all the blue squares with yellow."
178,b230c067.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object2, 1)', 'obj_color(self.temp_state, object4, 1)', 'obj_color(self.temp_state, object5, 1)', 'obj_color(self.temp_state, object6, 1)', 'obj_color(self.temp_state, object1, 2)', 'obj_color(self.temp_state, object3, 2)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 1, 1, 1, 0], [0, 0, 2, 0, 0, 0, 0, 0, 1, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 2, 2, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0]]",b230c067,276,"To make the output, you have to...color the two similar shapes the same blue color and then change the third shape to the red color.","To make the output, you have to...color the two different shapes the same red color and then change the third shape to the blue color.","To make the output, you have to...color the two similar shapes the same green color and then change the third shape to the yellow color.","To make the output, you have to...color the three similar shapes the same red color.","To make the output, you have to...color the two similar shapes different blue color and then change the third shape to the red color."
180,b2862040.json,"['obj_color', 'obj_color', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['obj_color(self.temp_state, object3, 8)', 'obj_color(self.temp_state, object5, 8)', 'horizontal_line(self.temp_state, [(13, 3), (13, 8)], 9)', 'horizontal_line(self.temp_state, [(14, 3), (14, 8)], 9)', 'vertical_line(self.temp_state, [(2, 5), (5, 5)], 9)', 'vertical_line(self.temp_state, [(5, 6), (2, 6)], 9)', 'complete(self.temp_state)']",7,TRUE,"[[1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 8, 8, 8, 8, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 9, 9, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 9, 9, 8, 9, 9, 9, 1, 9, 9, 9], [9, 9, 9, 9, 8, 8, 8, 8, 9, 9, 9, 1, 9, 9, 1], [9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 1, 1, 1, 1], [1, 1, 1, 1, 9, 9, 9, 8, 9, 9, 9, 1, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1], [1, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1], [1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [9, 9, 9, 8, 8, 8, 8, 8, 8, 9, 9, 9, 1, 1, 9], [9, 9, 9, 8, 9, 9, 9, 9, 8, 9, 9, 9, 9, 1, 9], [9, 9, 9, 8, 9, 9, 9, 9, 8, 9, 9, 9, 9, 1, 9], [9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 1, 9]]",b2862040,278,"To make the output, you have to...change closed patterns to light blue.","To make the output, you have to...change open patterns to light blue.","To make the output, you have to...change closed patterns to dark red.","To make the output, you have to...change closed patterns to green.","To make the output, you have to...change closed patterns to pink."
182,b548a754.json,"['horizontal_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(1, 2), (1, 8)], 6)', 'vertical_line(self.temp_state, [(1, 3), (9, 3)], 6)', 'vertical_line(self.temp_state, [(1, 7), (9, 7)], 6)', 'vertical_line(self.temp_state, [(10, 4), (1, 4)], 4)', 'vertical_line(self.temp_state, [(1, 5), (10, 5)], 4)', 'vertical_line(self.temp_state, [(1, 6), (10, 6)], 4)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 4, 4, 4, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0]]",b548a754,280,"To make the output, you have to...stretch it until the outer color covers the dot and then fill in the shape with the inner color from where the outer square or rectangle is.This should stretch the shape in general towards the dot itself.","To make the output, you have to...shrink it until the outer color covers the dot and then fill in the shape with the inner color from where the outer square or rectangle is. This should stretch the shape in general towards the dot itself.","To make the output, you have to...stretch it until the outer color covers the dot and then unfilled the shape with the inner color from where the outer square or rectangle is. This should stretch the shape in general towards the dot itself.","To make the output, you have to...stretch it until the outer color covers the dot and then fill on the shape with the inner color from where the outer circle or hexagon is. This should stretch the shape in general towards the dot itself.","To make the output, you have to...compress it until the outer color covers the dot and then fill in the shape with the inner color from where the outer square or rectangle is. This should stretch the shape in general towards the dot itself."
185,b7249182.json,"['vertical_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'horizontal_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(10, 3), (16, 3)], 6)', 'horizontal_line(self.temp_state, [(10, 0), (10, 6)], 6)', 'pixel_color([(9, 1)], 6)', 'pixel_color([(9, 5)], 6)', 'horizontal_line(self.temp_state, [(7, 0), (7, 6)], 7)', 'vertical_line(self.temp_state, [(7, 3), (1, 3)], 7)', 'pixel_color([(8, 1)], 7)', 'pixel_color([(8, 5)], 7)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0], [0, 7, 7, 7, 7, 7, 0, 0, 0], [0, 7, 0, 0, 0, 7, 0, 0, 0], [0, 6, 0, 0, 0, 6, 0, 0, 0], [0, 6, 6, 6, 6, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]",b7249182,283,"To make the output, you have to...make each color in line go toward the center. Make a black empty space in the center by stop the lines 1 square each before they meet. This should give you 2 black squares in the center. Form a new line on each side with 2 cubes on either side for each color. Put one more colored cube at the end of these lines to make each color connect. This should make an empty space in the center with a size of 2x3.","To make the output, you have to...reflect each color in line and shift towards the corners. Exclude a red filled space in the center by continuing the lines 1 square further when they meet. This should remove 2 black squares in the center. Diminish a line on each side by removing 2 cubes on either side for each color. Add one more colored cube at the beginning of these lines to make each color disjoin. This should fill the space in the center with a size of 2x3.","To make the output, you have to...arrange each color in line to go away from the center. Build a gray empty space in the top corner by continuing the lines 1 square apart when they meet. This should give you 2 yellow squares in the corner. Form a new column on each side with 2 cubes on either side for each color. Put one more colored cube at the beginning of these columns to make each color separate. This should make an empty space in the corner with a size of 2x3.","To make the output, you have to...move each color in line to go toward the upper corner. Make a blue occupied space in the center by stopping the lines 2 squares each before they meet. This should give you 2 red squares at the bottom. Form a straight line on each side with 3 cubes on either side for each color. Put two more colored cubes at the end of these lines to separate each color. This should make a full space in the center with a size of 3x2.","To make the output, you have to...send each color in parallel lines to go towards the bottom. Create a green empty zone in the middle by stopping the lines 1 square after they meet. This should give you 3 black rectangles in the center. Form a diagonal line on each side with 2 cubes on either side for each color. Put one more colored cube at the middle of these lines to mix up each color. This should make an empty zone in the center with a size of 1x2."
189,b8cdaf2b.json,"['diagonal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(7, 3), (4, 0)], 2)', 'diagonal_line(self.temp_state, [(7, 5), (4, 8)], 2)', 'pixel_color([(4, 8)], 2)', 'pixel_color([(4, 0)], 2)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 2], [0, 2, 0, 0, 0, 0, 0, 2, 0], [0, 0, 2, 0, 0, 0, 2, 0, 0], [0, 0, 0, 8, 8, 8, 0, 0, 0], [8, 8, 8, 2, 2, 2, 8, 8, 8]]",b8cdaf2b,287,"To make the output, you have to...create a diagonal line from the top to the sides with the less majority color.","To make the output, you have to...create a diagonal line from the bottom to the sides with the less majority color.","To make the output, you have to...create a diagonal line from the top to the sides with the more majority color.","To make the output, you have to...create a diagonal line from the top to the sides with the purple color.","To make the output, you have to...create a vertical line from the top to the bottom with the less majority color."
191,ba97ae07.json,"['horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(2, 4), (2, 1)], 5)', 'horizontal_line(self.temp_state, [(3, 1), (3, 4)], 5)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0], [0, 0, 4, 4, 0, 0]]",ba97ae07,292,"To make the output, you have to...copy the input grid. In the output, change the color where the two lines meet so that the other color line is on top.","To make the output, you have to...copy the input grid. In the output, adjust the color where the two lines meet as if the other color line is underneath.","To make the output, you have to...change the input grid. In the output, modify the color where the two lines intersect and bring the other color line to the top.","To make the output, you have to...paste the input grid. In the output, flip the color where the four lines meet to bring the lighter color on top.","To make the output, you have to...copy the input grid. In the output, revert the color where the two lines meet to place the other color line behind."
192,bb43febb.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['horizontal_line(self.temp_state, [(1, 0), (1, 5)], 2)', 'horizontal_line(self.temp_state, [(5, 3), (5, 9)], 2)', 'horizontal_line(self.temp_state, [(6, 3), (6, 9)], 2)', 'horizontal_line(self.temp_state, [(7, 3), (7, 9)], 2)', 'horizontal_line(self.temp_state, [(8, 3), (8, 9)], 2)', 'complete(self.temp_state)']",6,TRUE,"[[5, 5, 5, 5, 5, 5, 0, 0, 0, 0], [5, 2, 2, 2, 2, 5, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 5, 5], [0, 0, 0, 5, 2, 2, 2, 2, 2, 5], [0, 0, 0, 5, 2, 2, 2, 2, 2, 5], [0, 0, 0, 5, 2, 2, 2, 2, 2, 5], [0, 0, 0, 5, 2, 2, 2, 2, 2, 5], [0, 0, 0, 5, 5, 5, 5, 5, 5, 5]]",bb43febb,293,"To make the output, you have to...fill the inside of both shapes with red leaving a border the same color as original.","To make the output, you have to...fill the inside of both shapes with green leaving a border the same color as original.","To make the output, you have to...fill the outside of both shapes with red leaving a border the same color as original.","To make the output, you have to...fill the inside of both shapes with red leaving a border a different color from original.","To make the output, you have to...fill the inside of both shapes with blue leaving a border the same color as original."
194,bda2d7a6.json,"['obj_color', 'obj_color', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 1)', 'horizontal_line(self.temp_state, [(1, 0), (1, 5)], 9)', 'horizontal_line(self.temp_state, [(4, 0), (4, 5)], 9)', 'vertical_line(self.temp_state, [(1, 1), (4, 1)], 9)', 'vertical_line(self.temp_state, [(1, 4), (4, 4)], 9)', 'complete(self.temp_state)']",7,TRUE,"[[1, 1, 1, 1, 1, 1], [1, 9, 9, 9, 9, 1], [1, 9, 0, 0, 9, 1], [1, 9, 0, 0, 9, 1], [1, 9, 9, 9, 9, 1], [1, 1, 1, 1, 1, 1]]",bda2d7a6,297,"To make the output, you have to...change the color of center black 2x2 grid to that of 4X4 grid color, 4X4 change to 6X6 color, and 6X6 change to old 2X2 color","To make the output, you have to...change the color of center black 2x2 grid to that of 4X4 grid color, 6X6 change to 4X4 color, and 4X4 change to old 2X2 color","To make the output, you have to...change the color of center black 2x2 grid to that of 6X6 grid color, 4X4 change to 2X2 color, and 6X6 change to old 4X4 color","To make the output, you have to...change the color of center black 6x6 grid to that of 2X2 grid color, 4X4 change to 6X6 color, and 2X2 change to old 4X4 color","To make the output, you have to...change the color of center black 4x4 grid to that of 2X2 grid color, 6X6 change to 4X4 color, and 2X2 change to old 6X6 color"
195,bdad9b1f.json,"['horizontal_line', 'pixel_color', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(4, 1), (4, 5)], 2)', 'pixel_color([(4, 5)], 2)', 'vertical_line(self.temp_state, [(1, 3), (5, 3)], 8)', 'pixel_color([(5, 3)], 8)', 'pixel_color([(4, 3)], 4)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 8, 0, 0], [0, 0, 0, 8, 0, 0], [0, 0, 0, 8, 0, 0], [0, 0, 0, 8, 0, 0], [2, 2, 2, 4, 2, 2], [0, 0, 0, 8, 0, 0]]",bdad9b1f,298,"To make the output, you have to...continue the pattern of red squares horizontal and continue the blue squares vertical to reach the edge of the grid. On the square that blue and red squares crosses, color that one yellow.","To make the output, you have to...continue the pattern of blue squares horizontal and continue the red squares vertical to reach the edge of the grid. On the square that blue and red squares crosses, color that one pink.","To make the output, you have to...continue the pattern of yellow squares horizontal and continue the light blue squares vertical to reach the edge of the grid. On the square that yellow and light blue squares crosses, color that one green.","To make the output, you have to...continue the pattern of red squares vertical and continue the green squares horizontal to reach the edge of the grid. On the square that red and green squares crosses, color that one gray.","To make the output, you have to...continue the pattern of pink squares horizontal and continue the brown squares vertical to reach the edge of the grid. On the square that pink and brown squares crosses, color that one light blue."
197,c0f76784.json,"['pixel_color', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'complete']","['pixel_color([(5, 9)], 6)', 'horizontal_line(self.temp_state, [(9, 4), (9, 7)], 7)', 'horizontal_line(self.temp_state, [(10, 4), (10, 7)], 7)', 'horizontal_line(self.temp_state, [(2, 1), (2, 5)], 8)', 'horizontal_line(self.temp_state, [(3, 1), (3, 5)], 8)', 'horizontal_line(self.temp_state, [(4, 1), (4, 5)], 8)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0], [0, 5, 8, 8, 8, 5, 0, 0, 0, 0, 0, 0], [0, 5, 8, 8, 8, 5, 0, 0, 0, 0, 0, 0], [0, 5, 8, 8, 8, 5, 0, 0, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 0, 0, 5, 6, 5, 0], [0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 5, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 5, 0, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0]]",c0f76784,301,"To make the output, you have to...fill the center of the smallest square with pink, the middle square with orange color and the biggest square with light blue.","To make the output, you have to...fill the center of the smallest rectangle with pink, the middle rectangle with orange color and the biggest rectangle with light blue.","To make the output, you have to...fill the center of the smallest square with brown, the middle square with gray color and the biggest square with green.","To make the output, you have to...fill the center of the biggest square with pink, the middle square with orange color and the smallest square with light blue.","To make the output, you have to...fill the center of the smallest square with green, the middle square with brown color and the biggest square with gray."
201,c8f0f002.json,"['horizontal_line', 'pixel_color', 'pixel_color', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['horizontal_line(self.temp_state, [(0, 0), (0, 3)], 5)', 'pixel_color([(0, 4)], 5)', 'pixel_color([(1, 4)], 5)', 'horizontal_line(self.temp_state, [(1, 4), (1, 1)], 5)', 'pixel_color([(2, 3)], 5)', 'pixel_color([(2, 1)], 5)', 'complete(self.temp_state)']",7,TRUE,"[[1, 5, 5, 1, 5], [8, 1, 5, 5, 5], [8, 5, 1, 5, 8]]",c8f0f002,308,"To make the output, you have to...change the orange pixels into grey one.","To make the output, you have to...change the black pixels into grey one.","To make the output, you have to...change the orange pixels into black one.","To make the output, you have to...change the grey pixels into orange one.","To make the output, you have to...change the red pixels into grey one."
204,cbded52d.json,"['pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(1, 4)], 8)', 'pixel_color([(4, 7)], 8)', 'pixel_color([(6, 3)], 6)', 'complete(self.temp_state)']",4,TRUE,"[[1, 1, 0, 1, 1, 0, 1, 1], [1, 8, 0, 1, 8, 0, 1, 8], [0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 8], [0, 0, 0, 0, 0, 0, 0, 0], [6, 1, 0, 6, 1, 0, 6, 1], [1, 1, 0, 1, 1, 0, 1, 8]]",cbded52d,313,"To make the output, you have to...make each across and down row identical, matching the middle block in each row to the end blocks.","To make the output, you have to...make each across and down row different, matching the middle block in each row to the end blocks.","To make the output, you have to...make each across and down row identical, matching the first block in each row to the end blocks.","To make the output, you have to...make each vertical and horizontal row identical, altering the middle block in each row to the end blocks.","To make the output, you have to...randomly distribute colors on the grid, irrespective of the middle block or end blocks in each row."
205,ce22a75a.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color']","['vertical_line(self.temp_state, [(8, 0), (2, 0)], 1)', 'vertical_line(self.temp_state, [(2, 1), (8, 1)], 1)', 'vertical_line(self.temp_state, [(2, 2), (8, 2)], 1)', 'vertical_line(self.temp_state, [(6, 6), (0, 6)], 1)', 'vertical_line(self.temp_state, [(6, 7), (0, 7)], 1)', 'vertical_line(self.temp_state, [(6, 8), (0, 8)], 1)', 'horizontal_line(self.temp_state, [(0, 5), (0, 8)], 1)', 'horizontal_line(self.temp_state, [(8, 3), (8, 0)], 1)', 'pixel_color([(0, 8)], 1)', 'pixel_color([(8, 0)], 1)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0]]",ce22a75a,316,"To make the output, you have to...change every gray square and the 9 squares around it into blue.","To make the output, you have to...change every brown square and the 9 squares around it into red.","To make the output, you have to...change every gray square and the 9 pixels around it into pink.","To make the output, you have to...change every pink square and the 9 squares around it into gray.","To make the output, you have to...change every blue square and the 9 squares around it into light blue."
206,ce9e57f2.json,"['vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(5, 1), (10, 1)], 8)', 'vertical_line(self.temp_state, [(6, 3), (10, 3)], 8)', 'pixel_color([(10, 5)], 8)', 'pixel_color([(9, 7)], 8)', 'pixel_color([(10, 7)], 8)', 'pixel_color([(10, 3)], 8)', 'pixel_color([(10, 1)], 8)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 2, 0, 2, 0, 0, 0, 0, 0], [0, 8, 0, 2, 0, 0, 0, 2, 0], [0, 8, 0, 8, 0, 0, 0, 2, 0], [0, 8, 0, 8, 0, 0, 0, 2, 0], [0, 8, 0, 8, 0, 2, 0, 8, 0], [0, 8, 0, 8, 0, 8, 0, 8, 0]]",ce9e57f2,319,"To make the output, you have to...change the lower half of the red bars to light blue and the upper half remain red. If there are an even number of squares in the bar, the red squares and light blue squares should be even. If there are an odd number of squares in a bar, there should be one more upper red squares than there are lower blue squares.","To make the output, you have to...change the upper half of the red bars to green and the lower half remain red. If there are an even number of squares in the bar, the red squares and green squares should be even. If there are an odd number of squares in a bar, there should be one more lower red squares than there are upper blue squares.","To make the output, you have to...change the lower half of the blue bars to pink and the upper half remain blue. If there are an even number of squares in the bar, the blue squares and pink squares should be even. If there are an odd number of squares in a bar, there should be one more upper blue squares than there are lower pink squares.","To make the output, you have to...change the lower half of the light blue bars to red and the upper half remain light blue. If there are an even number of squares in the bar, the light blue squares and red squares should be even. If there are an odd number of squares in a bar, there should be one more upper light blue squares than there are lower red squares.","To make the output, you have to...change the upper half of the green bars to yellow and the lower half remain green. If there are an even number of squares in the bar, the green squares and yellow squares should be even. If there are an odd number of squares in a bar, there should be one more lower green squares than there are upper yellow squares."
207,d037b0a7.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(1, 0)], 4)', 'pixel_color([(2, 0)], 4)', 'pixel_color([(1, 2)], 8)', 'pixel_color([(2, 2)], 8)', 'complete(self.temp_state)']",5,TRUE,"[[4, 0, 8], [4, 0, 8], [4, 7, 8]]",d037b0a7,321,"To make the output, you have to...wherever you see a color other than black make squares below that color the same color down to the border.","To make the output, you have to...wherever you see a color other than white make squares right to that color the same color until the border.","To make the output, you have to...wherever you see a color other than yellow make rectangles left to that color the same color across to the border.","To make the output, you have to...wherever you see a black color make squares above that color the same color up to the border.","To make the output, you have to...wherever you spot a color other than brown make circle to the right of that color the same color sideways to the border."
209,d07ae81c.json,"['x_line', 'x_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'diagonal_line', 'complete']","['X_line(self.temp_state, [(12, 14)], 4)', 'X_line(self.temp_state, [(0, 10)], 4)', 'diagonal_line(self.temp_state, [(0, 2), (7, 9)], 1)', 'diagonal_line(self.temp_state, [(1, 9), (8, 2)], 1)', 'diagonal_line(self.temp_state, [(15, 17), (10, 12)], 1)', 'diagonal_line(self.temp_state, [(10, 16), (15, 11)], 1)', 'diagonal_line(self.temp_state, [(7, 17), (3, 13)], 1)', 'complete(self.temp_state)']",8,TRUE,"[[8, 8, 4, 3, 3, 3, 3, 3, 3, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 1, 3, 3, 3, 3, 3, 4, 8, 4, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 3, 1, 3, 3, 3, 1, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8], [8, 8, 8, 3, 3, 1, 3, 1, 3, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8], [3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3], [3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3], [3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3], [8, 8, 8, 1, 3, 3, 3, 3, 3, 4, 8, 8, 8, 8, 8, 8, 8, 4, 8], [8, 8, 4, 3, 3, 3, 3, 3, 3, 8, 4, 8, 8, 8, 8, 8, 8, 8, 4], [8, 4, 8, 3, 3, 3, 3, 3, 3, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8], [4, 8, 8, 3, 3, 3, 3, 3, 3, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 1, 3, 3], [8, 8, 8, 3, 3, 3, 3, 3, 3, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8], [8, 8, 8, 3, 3, 3, 3, 3, 3, 8, 4, 8, 8, 8, 8, 8, 8, 8, 4]]",d07ae81c,323,"To make the output, you have to...draw from single square to diagonal out. For the new lines, make sure to keep the same color on background that is there before.","To make the output, you have to...draw from single rectangle to diagonal out. For the new lines, make sure to keep the same color on foreground that is there before.","To make the output, you have to...draw from double square to vertical out. For the old lines, make sure to change the color on background that is there before.","To make the output, you have to...erase from single square to diagonal out. For the new lines, make sure to change the color on background that is there before.","To make the output, you have to...draw from single square to horizontal in. For the new lines, make sure to keep the opposite color on background that is there before."
211,d23f8c26.json,"['obj_color', 'obj_color', 'x_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object3, 0)', 'obj_color(self.temp_state, object10, 0)', 'X_line(self.temp_state, [(4, 6)], 0)', 'pixel_color([(5, 0)], 0)', 'pixel_color([(3, 1)], 0)', 'pixel_color([(6, 5)], 0)', 'pixel_color([(2, 6)], 0)', 'pixel_color([(0, 6)], 0)', 'pixel_color([(1, 3)], 8)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0]]",d23f8c26,328,"To make the output, you have to...turn everything black, but keep the middle vertical line of colored squares.","To make the output, you have to...turn everything black, but keep the middle horizontal line of colored squares.","To make the output, you have to...turn everything white, but keep the middle vertical line of colored squares.","To make the output, you have to...turn everything black, but delete the middle vertical line of colored squares.","To make the output, you have to...turn everything black, but keep the outer vertical line of colored squares."
212,d2abd087.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object2, 2)', 'obj_color(self.temp_state, object3, 2)', 'obj_color(self.temp_state, object4, 1)', 'obj_color(self.temp_state, object5, 1)', 'obj_color(self.temp_state, object1, 1)', 'complete(self.temp_state)']",6,TRUE,"[[0, 1, 1, 0, 0, 0, 2, 2, 0, 0], [0, 1, 1, 0, 0, 0, 2, 2, 0, 0], [1, 1, 1, 1, 0, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 1, 0, 0], [0, 2, 2, 2, 2, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d2abd087,329,"To make the output, you have to...copy the input grid. Then count how many gray squares make up each of the individual shapes. If the shape uses (6) gray squares, change those gray squares to red. If the shape has any other number of gray squares, change the gray squares to blue.","To make the output, you have to...copy the input grid. Then count how many green squares make up each of the individual shapes. If the shape uses (6) green squares, change those green squares to red. If the shape has any other number of green squares, change the green squares to blue.","To make the output, you have to...copy the input grid. Then count how many gray squares make up each of the individual shapes. If the shape uses (4) gray squares, change those gray squares to red. If the shape has any other number of gray squares, change the gray squares to blue.","To make the output, you have to...copy the input grid. Then count how many gray rectangles make up each of the individual shapes. If the shape uses (6) gray rectangles, change those gray rectangles to red. If the shape has any other number of gray rectangles, change the gray rectangles to blue.","To make the output, you have to...copy the input grid. Then count how many gray squares make up each of the individual shapes. If the shape uses (6) gray squares, change those gray squares to yellow. If the shape has any other number of gray squares, change the gray squares to blue."
214,d406998b.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(2, 16)], 3)', 'pixel_color([(0, 14)], 3)', 'pixel_color([(0, 12)], 3)', 'pixel_color([(2, 10)], 3)', 'pixel_color([(1, 8)], 3)', 'pixel_color([(2, 6)], 3)', 'pixel_color([(2, 4)], 3)', 'pixel_color([(1, 2)], 3)', 'pixel_color([(1, 0)], 3)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 5, 0, 0, 0, 5, 0, 5, 0, 0, 3, 0, 3, 0, 0], [3, 0, 3, 0, 0, 5, 0, 0, 3, 0, 0, 5, 0, 0, 0, 5, 0], [0, 5, 0, 0, 3, 0, 3, 0, 0, 0, 3, 0, 0, 5, 0, 0, 3]]",d406998b,331,"To make the output, you have to...begin from the right-most column and change the grey pixels in the odd-numbered columns with green.","To make the output, you have to...start from the right-most column and substitute the green pixels in the even-numbered columns with grey.","To make the output, you have to...begin from the left-most column and replace the grey pixels in the odd-numbered columns with green. ","To make the output, you have to...initiate from the right-most column and substitute the brown pixels in the odd-numbered columns with green. ","To make the output, you have to...start from the topmost row and replace the grey pixels in the odd-numbered rows with green."
215,d43fd935.json,"['pixel_color', 'pixel_color', 'vertical_line', 'complete']","['pixel_color([(6, 1)], 6)', 'pixel_color([(8, 3)], 6)', 'vertical_line(self.temp_state, [(6, 3), (0, 3)], 2)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [2, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 2, 0, 0], [6, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 6, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [6, 6, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 2, 0, 0], [0, 0, 0, 6, 0, 6, 0, 0, 0, 0]]",d43fd935,332,"To make the output, you have to...fill the same color of any square that is vertical or horizontal to the corner of the green square.","To make the output, you have to...fill the same color of any rectangle that is diagonal to the corner of the green square.","To make the output, you have to...fill the different color of any square that is vertical or horizontal to the corner of the green hexagon.","To make the output, you have to...empty the same color of any square that is vertical or horizontal to the corner of the blue square.","To make the output, you have to...fill the same color of any square that is vertical or horizontal to the corner of the brown square."
216,d4a91cb9.json,"['vertical_line', 'horizontal_line', 'complete']","['vertical_line(self.temp_state, [(8, 3), (1, 3)], 4)', 'horizontal_line(self.temp_state, [(2, 11), (2, 3)], 4)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 2, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d4a91cb9,334,"To make the output, you have to...draw a down line with yellow to which the red grid's row meet. and continue the yellow grid to the side of the red grid.","To make the output, you have to...draw an up line with blue to which the green grid's row meet. and continue the green grid to the side of the yellow grid.","To make the output, you have to...draw a down line with pink to which the red grid's row meet. and continue the pink grid to the side of the green grid.","To make the output, you have to...draw an up line with brown to which the pink grid's row meet. and continue the brown grid to the side of the green grid.","To make the output, you have to...draw a down line with gray to which the black grid's row meet. and continue the gray grid to the side of the brown grid."
217,d4f3cd78.json,"['vertical_line', 'vertical_line', 'vertical_line', 'horizontal_line', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(2, 3), (7, 3)], 8)', 'vertical_line(self.temp_state, [(2, 4), (7, 4)], 8)', 'vertical_line(self.temp_state, [(2, 5), (7, 5)], 8)', 'horizontal_line(self.temp_state, [(5, 5), (5, 9)], 8)', 'pixel_color([(5, 9)], 8)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 0, 0, 0], [0, 0, 5, 8, 8, 8, 5, 0, 0, 0], [0, 0, 5, 8, 8, 8, 5, 0, 0, 0], [0, 0, 5, 8, 8, 8, 8, 8, 8, 8], [0, 0, 5, 8, 8, 8, 5, 0, 0, 0], [0, 0, 5, 5, 5, 5, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d4f3cd78,335,"To make the output, you have to...fill the gray with light blue then extend a line out the empty spot to the the end of the grid.","To make the output, you have to...fill the gray with brown then extend a line out the empty spot to the top end of the grid.","To make the output, you have to...fill the green with pink then extend a line out the empty spot to the side end of the grid.","To make the output, you have to...fill the gray with red then extend a line out the full area to the end of the grid.","To make the output, you have to...fill the gray with yellow then shorten a line into the filled spot to the the start of the grid."
218,d511f180.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['pixel_color([(3, 3)], 5)', 'pixel_color([(3, 2)], 5)', 'pixel_color([(1, 1)], 5)', 'pixel_color([(0, 1)], 5)', 'pixel_color([(0, 0)], 5)', 'pixel_color([(1, 3)], 8)', 'pixel_color([(0, 3)], 8)', 'complete(self.temp_state)']",8,TRUE,"[[5, 5, 4, 8], [3, 5, 7, 8], [3, 7, 1, 9], [6, 4, 5, 5]]",d511f180,336,"To make the output, you have to...change all gray squares to light blue and all light blue squares to gray. Everything else keep the same as input.","To make the output, you have to...change all green squares to light blue and all light blue squares to green. Everything else keep the same as input.","To make the output, you have to...change all gray squares to pink and all light blue squares to gray. Everything else keep the same as input.","To make the output, you have to...change all brown squares to light blue and all light blue squares to brown. Everything else keep the same as input.","To make the output, you have to...change all gray squares to yellow and all light blue squares to gray. Everything else keep the same as input."
219,d5d6de2d.json,"['pixel_color', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'obj_color', 'obj_color', 'complete']","['pixel_color([(1, 1)], 3)', 'horizontal_line(self.temp_state, [(5, 1), (5, 8)], 3)', 'horizontal_line(self.temp_state, [(6, 1), (6, 8)], 3)', 'horizontal_line(self.temp_state, [(7, 1), (7, 8)], 3)', 'horizontal_line(self.temp_state, [(8, 1), (8, 8)], 3)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d5d6de2d,337,"To make the output, you have to...fill in the holes of the boxes with green, then black out the outlines of the boxes.","To make the output, you have to...fill in the holes of the circles with green, then black out the outlines of the circles.","To make the output, you have to...outline the boxes with green, then fill in the boxes with black.","To make the output, you have to...fill in the holes of the boxes with pink, then black out the outlines of the boxes.","To make the output, you have to...fill in the holes of the boxes with green, then blue out the outlines of the boxes."
221,d6ad076f.json,"['vertical_line', 'vertical_line', 'vertical_line', 'complete']","['vertical_line(self.temp_state, [(1, 6), (6, 6)], 8)', 'vertical_line(self.temp_state, [(1, 5), (6, 5)], 8)', 'vertical_line(self.temp_state, [(1, 4), (6, 4)], 8)', 'complete(self.temp_state)']",4,TRUE,"[[1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 2, 2, 2], [1, 1, 1, 1, 8, 8, 8, 2, 2, 2], [1, 1, 1, 1, 8, 8, 8, 2, 2, 2], [1, 1, 1, 1, 8, 8, 8, 2, 2, 2], [1, 1, 1, 1, 8, 8, 8, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d6ad076f,340,"To make the output, you have to...copy the input grid and connect the two shapes with the blue grid.it must be smaller than the size of the small input shape.","To make the output, you have to...copy the input grid and connect the two shapes with the red grid. It must be larger than the size of the small input shape.","To make the output, you have to...replicate the input grid and disconnect the two shapes using the blue grid. It should be equal to the size of the small input shape.","To make the output, you have to...replace the input grid and connect the two shapes using the yellow grid. It needs to be bigger than the size of the small input shape.","To make the output, you have to...clone the input grid and detach the two shapes using the green grid. It has to be smaller than the size of the large input shape."
222,d89b689b.json,"['pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['pixel_color([(5, 4)], 6)', 'pixel_color([(5, 5)], 7)', 'pixel_color([(4, 5)], 4)', 'pixel_color([(4, 4)], 3)', 'obj_color(self.temp_state, object2, 0)', 'obj_color(self.temp_state, object1, 0)', 'obj_color(self.temp_state, object4, 0)', 'obj_color(self.temp_state, object5, 0)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 4, 0, 0, 0, 0], [0, 0, 0, 0, 6, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",d89b689b,341,"To make the output, you have to...replace 2x2 same grid color with all other four different colors that in input grid. each 2x2 grid color are different in output grid 2x2.","To make the output, you have to...replace 2x2 same grid color with all other three different colors that in input grid. each 2x2 grid color are different in output grid 2x2.","To make the output, you have to...replace 2x3 same grid color with all other four different colors that in input grid. each 2x3 grid color are different in output grid 2x3.","To make the output, you have to...keep 2x2 same grid color with all other four different colors that in input grid. each 2x2 grid color are different in output grid 2x2.","To make the output, you have to...replace 3x3 same grid color with all other four different colors that in input grid. each 3x3 grid color are same in output grid 3x3."
223,d8c310e9.json,"['vertical_line', 'pixel_color', 'horizontal_line', 'pixel_color', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(1, 10), (4, 10)], 2)', 'pixel_color([(4, 11)], 3)', 'horizontal_line(self.temp_state, [(4, 14), (4, 11)], 6)', 'pixel_color([(3, 12)], 6)', 'vertical_line(self.temp_state, [(4, 14), (1, 14)], 2)', 'pixel_color([(4, 10)], 2)', 'pixel_color([(4, 14)], 2)', 'pixel_color([(3, 13)], 2)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2], [6, 2, 2, 0, 6, 2, 2, 0, 6, 2, 2, 0, 6, 2, 2], [6, 6, 2, 3, 6, 6, 2, 3, 6, 6, 2, 3, 6, 6, 2]]",d8c310e9,342,"To make the output, you have to...connect the repeating pattern continuously to the right end.","To make the output, you have to...disconnect the repeating pattern continuously to the far end.","To make the output, you have to...connect the varying pattern momentarily to the left end.","To make the output, you have to...interrupt the repeating pattern consistently to the right end.","To make the output, you have to...break up the repeating pattern intermittently to the left end."
224,d90796e8.json,"['obj_color', 'pixel_color', 'obj_color', 'pixel_color', 'obj_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object9, 0)', 'pixel_color([(5, 7)], 8)', 'obj_color(self.temp_state, object4, 0)', 'pixel_color([(1, 6)], 8)', 'obj_color(self.temp_state, object3, 0)', 'pixel_color([(2, 1)], 8)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 2, 0, 0, 0, 5], [0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 0, 0, 0, 2], [5, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0], [5, 3, 0, 0, 0, 5, 0, 0, 0]]",d90796e8,343,"To make the output, you have to...copy the exact entire image. Where ever a green and red pixel touch on their sides (not diagonal/corners), replace the green pixel with light blue, and replace the red pixel with black. (remove it)","To make the output, you have to...draw a new image without touching the green and red pixels on their sides. Wherever a black and light blue pixel meet (not diagonally), keep the black pixel and replace the light blue one with green.","To make the output, you have to...just fill the empty areas with pixels. Wherever a yellow and pink pixel touch on their sides (not corners), keep the yellow pixel and replace the pink one with gray.","To make the output, you have to...copy invertly the entire image. Wherever a blue and gray pixel touch on their sides (not diagonally), replace the blue pixel with pink and leave the gray pixel unchanged.","To make the output, you have to...just replace the entire screen with green pixels. Wherever a green and green pixel touch on their sides, keep the green pixel and replace the other green one with red."
225,d9f24cd1.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(9, 1), (4, 1)], 2)', 'vertical_line(self.temp_state, [(6, 2), (0, 2)], 2)', 'vertical_line(self.temp_state, [(6, 4), (9, 4)], 2)', 'vertical_line(self.temp_state, [(8, 5), (0, 5)], 2)', 'vertical_line(self.temp_state, [(9, 8), (0, 8)], 2)', 'pixel_color([(0, 2)], 2)', 'pixel_color([(0, 5)], 2)', 'pixel_color([(0, 8)], 2)', 'complete(self.temp_state)']",9,TRUE,"[[0, 0, 2, 0, 0, 2, 0, 0, 2, 0], [0, 0, 2, 0, 0, 2, 0, 0, 2, 0], [0, 0, 2, 0, 0, 2, 0, 5, 2, 0], [0, 0, 2, 0, 0, 2, 0, 0, 2, 0], [0, 5, 2, 0, 0, 2, 0, 0, 2, 0], [0, 2, 2, 0, 0, 2, 0, 0, 2, 0], [0, 2, 0, 0, 5, 2, 0, 0, 2, 0], [0, 2, 0, 0, 2, 2, 0, 0, 2, 0], [0, 2, 0, 0, 2, 0, 0, 0, 2, 0], [0, 2, 0, 0, 2, 0, 0, 0, 2, 0]]",d9f24cd1,344,"To make the output, you have to...extend each red dot straight up so it forms a vertical line. The red pixel must change direction as it reaches the grey pixel to the right and continue straight up.","To make the output, you have to...extend each yellow dot straight up so it forms a vertical line. The yellow pixel must change direction as it reaches the brown pixel to the right and continue straight up.","To make the output, you have to...extend each blue dot straight up so it forms a vertical line. The blue pixel must change direction as it reaches the black pixel to the right and continue straight up.","To make the output, you have to...extend each green dot straight up so it forms a vertical line. The green pixel must change direction as it reaches the pink pixel to the right and continue straight up.","To make the output, you have to...extend each grey dot straight up so it forms a vertical line. The grey pixel must change direction as it reaches the red pixel to the right and continue straight up."
230,dc433765.json,"['move_down', 'complete']","['move_down(self.temp_state, object1)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",dc433765,352,"To make the output, you have to...move the green square one block closer to the yellow square, no matter if it is horizontal, diagonal, or vertical.","To make the output, you have to...move the yellow square two blocks closer to the green square, no matter if it is horizontal, diagonal, or vertical.","To make the output, you have to...move the pink square one block further from the light blue square, no matter if it is horizontal, diagonal, or vertical.","To make the output, you have to...move the brown square three blocks closer to the red square, no matter if it is horizontal, diagonal, or vertical.","To make the output, you have to...move the green rectangle one block closer to the yellow rectangle, no matter if it is horizontal, diagonal, or vertical."
231,ddf7fa4f.json,"['obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object4, 6)', 'obj_color(self.temp_state, object5, 9)', 'obj_color(self.temp_state, object6, 3)', 'complete(self.temp_state)']",4,TRUE,"[[3, 0, 0, 0, 6, 0, 0, 0, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 6, 6, 6, 6, 6, 0, 9, 9], [0, 0, 6, 6, 6, 6, 6, 0, 9, 9], [0, 0, 6, 6, 6, 6, 6, 0, 9, 9], [0, 0, 6, 6, 6, 6, 6, 0, 9, 9], [0, 0, 0, 0, 0, 0, 0, 0, 9, 9], [3, 3, 3, 3, 0, 0, 0, 0, 9, 9], [3, 3, 3, 3, 0, 0, 0, 0, 9, 9], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ddf7fa4f,353,"To make the output, you have to...fill the gray area with the colors corresponding with the colored block in the first row.","To make the output, you have to...fill the gray area with the colors corresponding with the numbered block in the first row.","To make the output, you have to...leave the gray area blank and only fill in colored squares in the first row.","To make the output, you have to...fill the gray area with the colors corresponding with the colored block in the last row.","To make the output, you have to...fill the black area with the colors corresponding with the colored block in the first row."
232,ded97339.json,"['horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(8, 4), (8, 7)], 8)', 'vertical_line(self.temp_state, [(8, 7), (3, 7)], 8)', 'vertical_line(self.temp_state, [(1, 1), (5, 1)], 8)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 0, 8, 0, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 8, 0, 0], [0, 8, 0, 0, 0, 0, 0, 8, 0, 0], [0, 8, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 8, 8, 8, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ded97339,355,"To make the output, you have to...connect the magenta boxes that are directly vertical and horizontal to each other.","To make the output, you have to...connect the black boxes that are directly vertical and horizontal to each other.","To make the output, you have to...connect the magenta boxes that are diagonally to each other.","To make the output, you have to...connect the blue boxes that are directly vertical and horizontal to each other.","To make the output, you have to...disconnect the magenta boxes that are directly vertical and horizontal to each other."
236,e40b9e2f.json,"['vertical_line', 'vertical_line', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(8, 3), (0, 3)], 3)', 'vertical_line(self.temp_state, [(8, 5), (0, 5)], 3)', 'horizontal_line(self.temp_state, [(3, 5), (3, 8)], 3)', 'horizontal_line(self.temp_state, [(5, 5), (5, 8)], 3)', 'horizontal_line(self.temp_state, [(4, 1), (4, 7)], 2)', 'pixel_color([(6, 4)], 2)', 'pixel_color([(4, 4)], 3)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 3, 0, 0, 0, 0], [0, 0, 0, 3, 2, 3, 0, 0, 0, 0], [0, 3, 3, 3, 2, 3, 3, 3, 0, 0], [0, 0, 2, 2, 3, 2, 2, 0, 0, 0], [0, 3, 3, 3, 2, 3, 3, 3, 0, 0], [0, 0, 0, 3, 2, 3, 0, 0, 0, 0], [0, 0, 0, 3, 0, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",e40b9e2f,360,"To make the output, you have to...copy the outside color to the opposite corners of each side of the inside shape to make a square pattern. Then for the inside shape you have to visualize the pattern clockwise 90 degree, 180 degree, 270 degree, and fill in the grid with all of these overlay on top of each other.","To make the output, you have to...move the outside colors to the opposite sides, and make a square patterns with it. Rotate the inside shape counterclockwise 90 degree, 180 degree, 270 degree, and fill in all of these at once on the grid. ","To make the output, you have to...copy the outside color to the same corners on each side of the inside shape, making a rectangle pattern. Then the pattern inside should be rotated 45 degrees, 120 degrees, 200 degrees, and fill in the grid with each of these overlays.","To make the output, you have to...place the exterior color on the opposite edges, then make a pie-shaped pattern. For the interior shape, you have to consider the pattern at 60 degree, 180 degree, 270 degree, and fill in the grid with all these overlays on top of each other.","To make the output, you have to...transfer the outside color to the surrounding areas, making circle patterns. Then, rotate the inside pattern 30 degrees, 120 degrees, 240 degrees, and fill in every space on the grid."
237,e48d4e1a.json,"['move_left', 'move_left', 'move_down', 'move_down', 'obj_color', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['move_left(self.temp_state, object1)', 'move_left(self.temp_state, object1)', 'move_down(self.temp_state, object1)', 'move_down(self.temp_state, object1)', 'obj_color(self.temp_state, object2, 0)', 'pixel_color([(5, 8)], 8)', 'pixel_color([(5, 9)], 8)', 'pixel_color([(1, 3)], 8)', 'pixel_color([(0, 3)], 8)', 'complete(self.temp_state)']",10,TRUE,"[[0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 0, 0]]",e48d4e1a,361,"To make the output, you have to...count the grey grid and place the meeting point of the colored grid-down through with the same count.","To make the output, you have to...count the pink grid and place the meeting point of the colored grid-down through with the same count.","To make the output, you have to...count the grey grid and then place the meeting point of the colored grid-up through with the same count.","To make the output, you have to...count the grey grid and place the intersection point of the colored grid-right with the same count.","To make the output, you have to...calculate the red grid and place the meeting point of the colored grid-down through with the same count."
238,e5062a87.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(5, 0), (1, 0)], 2)', 'vertical_line(self.temp_state, [(5, 1), (1, 1)], 2)', 'vertical_line(self.temp_state, [(6, 8), (9, 8)], 2)', 'vertical_line(self.temp_state, [(6, 9), (9, 9)], 2)', 'pixel_color([(9, 8)], 2)', 'pixel_color([(9, 9)], 2)', 'complete(self.temp_state)']",7,TRUE,"[[0, 5, 5, 5, 0, 5, 5, 5, 5, 0], [5, 5, 5, 0, 5, 5, 5, 5, 0, 5], [2, 2, 5, 5, 5, 5, 0, 5, 0, 0], [2, 2, 5, 5, 5, 5, 0, 5, 5, 5], [2, 2, 5, 5, 5, 2, 2, 0, 0, 5], [5, 5, 0, 0, 0, 2, 2, 5, 5, 5], [0, 0, 5, 5, 0, 2, 2, 5, 5, 5], [0, 5, 5, 5, 5, 5, 5, 0, 2, 2], [5, 5, 0, 0, 5, 5, 5, 0, 2, 2], [5, 0, 5, 0, 5, 0, 0, 5, 2, 2]]",e5062a87,362,"To make the output, you have to...find any black squares that are in the same pattern as the red squares, then change the black squares in each pattern to red.","To make the output, you have to...find any blue squares that are in the same pattern as the red squares, then change the blue squares in each pattern to green.","To make the output, you have to...spot all the yellow squares that match the pattern of the blue squares, then alter the yellow squares in each pattern to pink.","To make the output, you have to...seek out any green squares that are in the same pattern as the yellow squares, then modify the green squares in each pattern to brown.","To make the output, you have to...locate all the pink squares that coincide with the pattern of the gray squares, then switch the pink squares in every pattern to light blue."
239,e509e548.json,"['obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object3, 2)', 'obj_color(self.temp_state, object2, 2)', 'obj_color(self.temp_state, object6, 1)', 'obj_color(self.temp_state, object5, 1)', 'obj_color(self.temp_state, object1, 6)', 'obj_color(self.temp_state, object4, 6)', 'complete(self.temp_state)']",7,TRUE,"[[0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0], [0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 6, 6, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",e509e548,363,"To make the output, you have to...change pattern color to blue if the pattern only has one 90 degree edge, pink if it has two and red if it has three. also if it shape is a 1 it is red, a c it is pink and an L it is blue.","To make the output, you have to...change pattern color to blue if the pattern only has one 20 degree edge, pink if it has two and red if it has five. also if it shape is a 2 it is orange, a b it is yellow and an I it is green.","To make the output, you have to...change pattern color to green if the pattern only has one 90 degree edge, yellow if it has two and orange if it has three. also if it shape is a 200 it is blue, a d it is light blue and an N it is red.","To make the output, you have to...change pattern color to brown if the pattern only has one 30 degree edge, gray if it has two and black if it has three. also if it shape is a 3 it is gray, a e it is brown and an M it is pink.","To make the output, you have to...change pattern color to red if the pattern only has four 90 degree edge, pink if it has five and green if it has six. also if its shape is a 10 it is yellow, a f it is brown and a O it is black."
240,e73095fd.json,"['pixel_color', 'pixel_color', 'pixel_color', 'horizontal_line', 'horizontal_line', 'vertical_line', 'vertical_line', 'complete']","['pixel_color([(14, 1)], 4)', 'pixel_color([(3, 0)], 4)', 'pixel_color([(3, 1)], 4)', 'horizontal_line(self.temp_state, [(9, 5), (9, 9)], 4)', 'horizontal_line(self.temp_state, [(10, 5), (10, 9)], 4)', 'vertical_line(self.temp_state, [(11, 14), (7, 14)], 4)', 'vertical_line(self.temp_state, [(11, 15), (7, 15)], 4)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0], [0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 5, 4, 4, 5, 0], [5, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 5, 5], [0, 5, 0, 0, 0, 5, 4, 4, 4, 5, 0, 0, 0, 5, 4, 4, 5, 0], [0, 5, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0], [0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 4, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",e73095fd,366,"To make the output, you have to...fill the nodes with yellow.","To make the output, you have to...empty the nodes with yellow.","To make the output, you have to...fill the nodes with black.","To make the output, you have to...fill the edges with yellow.","To make the output, you have to...leave the nodes with yellow."
243,e8dc4411.json,"['diagonal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(6, 0), (2, 4)], 6)', 'diagonal_line(self.temp_state, [(6, 4), (2, 0)], 6)', 'pixel_color([(2, 0)], 6)', 'pixel_color([(0, 0)], 6)', 'complete(self.temp_state)']",5,TRUE,"[[6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 6, 3, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 6, 3, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]",e8dc4411,369,"To make the output, you have to...without any change in the colors of any patterns, shapes, size and the background, copy the pattern on the black colored grids, to the other grid which is not patterned thus replicating it with the pattern and size of the black grid, continue to add the same pattern diagonally towards the only edge of the grid.","To make the output, you have to...alter the colors of the patterns, shapes, size and the background, copy the pattern on the black colored grids, to the other grid which is not patterned thus replicating it with the pattern and size of the black grid, continue to add the same pattern diagonally towards the only edge of the grid.","To make the output, you have to...without any change in the colors of any patterns, shapes, size and the background, copy the pattern on the green colored grids, to the other grid which is not patterned thus maintaining the same pattern and size of the blue grid, keep on adding different patterns vertically towards the opposite edge of the grid.","To make the output, you have to...without exchanging the colors of any patterns, shapes, size and the background, copy the pattern on the brown and gray colored grids, to the other grid which is not patterned hence making a distinct pattern and size from the blue grid, continue to add various patterns diagonally towards the only edge of the grid.","To make the output, you have to...keep the colors of the patterns, shapes, size and the background as they are, copy the pattern on the yellow and pink colored grids, to the other grid which is not patterned hence retaining the pattern and size of the green grid, keep on adding new patterns vertically towards the only edge of the grid."
244,e9614598.json,"['horizontal_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(3, 8), (3, 4)], 3)', 'vertical_line(self.temp_state, [(5, 6), (1, 6)], 3)', 'complete(self.temp_state)']",3,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 3, 3, 3, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",e9614598,370,"To make the output, you have to...add a 3x3 green cross between the two squares perfect.","To make the output, you have to...add a 2x2 green cross between the two squares perfect.","To make the output, you have to...add a 3x3 red cross between the two squares perfect.","To make the output, you have to...add a 3x3 green square between the two squares perfect.","To make the output, you have to...add a 3x3 green cross between the three squares perfect."
245,e9afcf9a.json,"['x_line', 'x_line', 'x_line', 'x_line', 'complete']","['X_line(self.temp_state, [(1, 0)], 2)', 'X_line(self.temp_state, [(1, 4)], 2)', 'X_line(self.temp_state, [(0, 2)], 6)', 'X_line(self.temp_state, [(0, 4)], 6)', 'complete(self.temp_state)']",5,TRUE,"[[6, 2, 6, 2, 6, 2], [2, 6, 2, 6, 2, 6]]",e9afcf9a,372,"To make the output, you have to...start with the color that is on the top. Fill in that line with that color every other square, begin with first square. Fill in the rest in that line with the second color. For the next line, start with the color that is already there (the second color) and fill in in the same every other square pattern. It should look like a game board. The first color in every line is the color of the input grid","To make the output, you have to...start with the color that is on the bottom. Fill in that line with that color every other square, begin with the first square. Fill in the rest in that line with the third color. For the next line, start with the color that is already there (the third color) and fill in in the same every other square pattern. It should look like an abstract painting. The first color in every line is the color of the input grid.","To make the output, you have to... start with the color that is on the right. Fill in that column with that color every other square, begin with the first square. Fill in the rest in that column with the fourth color. For the next column, start with the color that was previously filled (the fourth color) and fill in in the same every other square pattern. It should look like a quilt pattern. The first color in every column is the color of the input grid.","To make the output, you have to... start with the color that is on the bottom right corner. Fill in the diagonals with that color every other square, begin with the first square. Fill in the rest of the diagonals with the fifth color. For the next diagonal, start with the color that is already there (the fifth color) and fill in the same every other square pattern. The output should resemble a diagonal checkerboard pattern. The first color in every diagonal is the color of the input grid.","To make the output, you have to... start with the color that is on the left. Fill in that line with that color every other square, beginning with the first square. Fill in the rest in that line with the sixth color. For the next line, start with the color that is already there (the sixth color) and fill in in the same every other square pattern. It should look like a game board. The first color in every line is the color of the input grid."
246,ea32f347.json,"['obj_color', 'obj_color', 'obj_color', 'complete']","['obj_color(self.temp_state, object2, 1)', 'obj_color(self.temp_state, object3, 4)', 'obj_color(self.temp_state, object1, 2)', 'complete(self.temp_state)']",4,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ea32f347,373,"To make the output, you have to...change the color of the lines. The longest line needs to be colored blue. The middle length line needs to be colored yellow. The shortest line needs to be colored red.","To make the output, you have to...change the color of the squares. The biggest square needs to be colored blue. The middle size square needs to be colored yellow. The smallest square needs to be colored red.","To make the output, you have to...change the color of the lines. The shortest line needs to be colored blue. The middle length line needs to be colored yellow. The longest line needs to be colored red.","To make the output, you have to...maintain the color of the lines. The longest line needs to be colored red. The middle length line needs to be colored yellow. The shortest line needs to be colored blue.","To make the output, you have to...change the color of the lines. The longest line needs to be colored brown. The middle length line needs to be colored pink. The shortest line needs to be colored gray."
247,ea786f4a.json,"['x_line', 'complete']","['X_line(self.temp_state, [(5, 5)], 0)', 'complete(self.temp_state)']",2,TRUE,"[[0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0], [6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 6], [6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6], [6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6], [6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6], [6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6], [6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6], [6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6], [6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6], [6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 6], [0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0]]",ea786f4a,374,"To make the output, you have to...create an X by filling in the diagonal tiles until the edge of each corner is reached.","To make the output, you have to...create an X by filling in the vertical tiles until the middle of each corner is reached.","To make the output, you have to...create a triangle by filling in the diagonal tiles until the edge of each corner is reached. ","To make the output, you have to...create a Z by filling in the diagonal tiles until the edge of each corner is reached.","To make the output, you have to...create an X by filling in the horizontal tiles until the edge of each corner is reached."
248,ec883f72.json,"['diagonal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['diagonal_line(self.temp_state, [(4, 4), (8, 0)], 4)', 'pixel_color([(6, 11)], 4)', 'pixel_color([(5, 10)], 4)', 'pixel_color([(8, 0)], 4)', 'complete(self.temp_state)']",5,TRUE,"[[0, 0, 0, 0, 3, 0, 4, 4, 0, 3, 0, 0], [0, 0, 0, 0, 3, 0, 4, 4, 0, 3, 0, 0], [0, 0, 0, 0, 3, 0, 4, 4, 0, 3, 0, 0], [0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0], [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ec883f72,377,"To make the output, you have to...add diagonal lines extending from each corner of the outer squares to the edge of the output grid.","To make the output, you have to...add diagonal lines extending from each corner of the outer circles to the edge of the output grid.","To make the output, you have to...remove vertical lines from each corner of the outer squares towards the center of the output grid.","To make the output, you have to...shift horizontal lines from each corner of the outer squares towards the edge of the output grid.","To make the output, you have to...add diagonal lines extending from each corner of the inner squares towards the edge of the output grid."
250,ed36ccf7.json,"['rotate_left_obj', 'complete']","['rotate_left_obj(self.temp_state, object1)', 'complete(self.temp_state)']",2,TRUE,"[[0, 0, 5], [0, 0, 5], [0, 5, 0]]",ed36ccf7,379,"To make the output, you have to...turn the pattern in the input grid counter-clockwise.","To make the output, you have to...turn the pattern in the input grid clockwise.","To make the output, you have to...flip the pattern in the input grid horizontally.","To make the output, you have to...flip the pattern in the input grid vertically.","To make the output, you have to...rotate the pattern in the input grid 180 degrees."
251,ef135b50.json,"['horizontal_line', 'horizontal_line', 'vertical_line', 'complete']","['horizontal_line(self.temp_state, [(1, 2), (1, 6)], 9)', 'horizontal_line(self.temp_state, [(3, 3), (3, 6)], 9)', 'vertical_line(self.temp_state, [(4, 4), (7, 4)], 9)', 'complete(self.temp_state)']",4,TRUE,"[[2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 9, 9, 9, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 2, 2, 2, 2], [0, 2, 2, 2, 9, 9, 2, 2, 2, 2], [0, 2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 2, 2, 2, 9, 2, 2, 2, 2, 0], [0, 2, 2, 2, 9, 2, 2, 2, 2, 0], [0, 2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",ef135b50,380,"To make the output, you have to...put brown squares in between the space that the red squares across from each other only left to right squares.","To make the output, you have to...put green squares in between the space that the red squares across from each other only left to right squares.","To make the output, you have to...put brown circles in between the space that the red squares across from each other only left to right squares.","To make the output, you have to...put brown squares above the space that the red squares across from each other only left to right squares.","To make the output, you have to...pull brown squares in between the space that the red squares across from each other only left to right squares."
254,f25ffba3.json,"['vertical_line', 'vertical_line', 'pixel_color', 'vertical_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['vertical_line(self.temp_state, [(5, 1), (0, 1)], 1)', 'vertical_line(self.temp_state, [(0, 2), (3, 2)], 3)', 'pixel_color([(1, 3)], 3)', 'vertical_line(self.temp_state, [(0, 0), (4, 0)], 7)', 'pixel_color([(0, 0)], 7)', 'pixel_color([(0, 1)], 1)', 'pixel_color([(0, 2)], 4)', 'pixel_color([(0, 3)], 4)', 'complete(self.temp_state)']",9,TRUE,"[[7, 1, 4, 4], [7, 1, 3, 3], [7, 1, 3, 0], [7, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [7, 1, 0, 0], [7, 1, 3, 0], [7, 1, 3, 3], [7, 1, 4, 4]]",f25ffba3,384,"To make the output, you have to...reflect the pattern upside down like it was up against a mirror.","To make the output, you have to...reflect the pattern left to right like it was looking into a mirror.","To make the output, you have to...rotate the pattern clockwise like it was up against a fan.","To make the output, you have to...rotate the pattern counter-clockwise like it was up against a windmill.","To make the output, you have to...shift the pattern downwards like it was falling off a cliff."
256,f76d97a5.json,"['obj_color', 'horizontal_line', 'diagonal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'complete']","['obj_color(self.temp_state, object1, 0)', 'horizontal_line(self.temp_state, [(4, 3), (4, 0)], 3)', 'diagonal_line(self.temp_state, [(4, 4), (0, 0)], 3)', 'pixel_color([(2, 4)], 3)', 'pixel_color([(0, 3)], 3)', 'pixel_color([(2, 1)], 3)', 'pixel_color([(4, 0)], 3)', 'complete(self.temp_state)']",8,TRUE,"[[0, 0, 0, 3, 0], [0, 3, 0, 0, 0], [0, 3, 3, 0, 3], [0, 0, 0, 3, 0], [3, 3, 3, 0, 0]]",f76d97a5,388,"To make the output, you have to...replace the grey boxes with the color and replace the color boxes with black.","To make the output, you have to...replace the grey boxes with black and replace the color boxes with grey.","To make the output, you have to...replace the color boxes with the grey and replace the black boxes with color.","To make the output, you have to...replace the black boxes with the grey and replace the color boxes with grey.","To make the output, you have to...replace the grey boxes with the color and replace the black boxes with color."
257,f8a8fe49.json,"['horizontal_line', 'horizontal_line', 'horizontal_line', 'obj_color', 'obj_color', 'complete']","['horizontal_line(self.temp_state, [(2, 5), (2, 10)], 5)', 'horizontal_line(self.temp_state, [(1, 8), (1, 4)], 5)', 'horizontal_line(self.temp_state, [(13, 5), (13, 9)], 5)', 'obj_color(self.temp_state, object3, 0)', 'obj_color(self.temp_state, object2, 0)', 'complete(self.temp_state)']",6,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",f8a8fe49,389,"To make the output, you have to...flip the grey pattern over the red one like an mirror image. The resulting output should now have the grey pattern outside of the orange one.","To make the output, you have to...flip the orange pattern over the red one like an mirror image. The resulting output should now have the grey pattern outside of the orange one.","To make the output, you have to...flip the grey pattern over the green one like a mirror image. The resulting output should now have the green pattern outside of the orange one.","To make the output, you have to...flip the blue pattern over the red one like a mirror image. The resulting output should now have the grey pattern outside of the orange one.","To make the output, you have to...flip the grey pattern over the yellow one like a mirror image. The resulting output should now have the grey pattern outside of the yellow one."
259,fcc82909.json,"['vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'vertical_line', 'complete']","['vertical_line(self.temp_state, [(2, 0), (5, 0)], 3)', 'vertical_line(self.temp_state, [(5, 1), (2, 1)], 3)', 'vertical_line(self.temp_state, [(4, 3), (8, 3)], 3)', 'vertical_line(self.temp_state, [(8, 4), (4, 4)], 3)', 'vertical_line(self.temp_state, [(2, 6), (7, 6)], 3)', 'vertical_line(self.temp_state, [(7, 7), (2, 7)], 3)', 'complete(self.temp_state)']",7,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 2, 9, 0, 0], [2, 1, 0, 0, 0, 0, 1, 6, 0, 0], [3, 3, 0, 4, 7, 0, 3, 3, 0, 0], [3, 3, 0, 8, 4, 0, 3, 3, 0, 0], [0, 0, 0, 3, 3, 0, 3, 3, 0, 0], [0, 0, 0, 3, 3, 0, 3, 3, 0, 0], [0, 0, 0, 3, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",fcc82909,396,"To make the output, you have to...copy the input grid directly into the output grid. Then, for each 2x2 square, check the number of unique colors present. Append 1x2 green pixels below that 2x2 square, equal to the number of distinct colors contained within it.","To make the output, you have to...transcribe the input grid directly onto the output grid. Then, for each 3x3 square, check the number of unique colors present. Append 1x2 green pixels beneath that 3x3 square, equivalent to the number of distinct colors encapsulated within it.","To make the output, you have to...duplicatel the input grid exactly into the output grid. Then, for each 1x1 square, observe the count of unique colors present. Append 2x2 pink pixels below that 1x1 square, proportionate to the number of distinct colors contained within it.","To make the output, you have to...mirror the input grid precisely into the output grid. Then, for each 2x2 square, calculate the number of unique colors present. Append 1x3 blue pixels below that 2x2 square, corresponding to the number of individual colors enclosed within it.","To make the output, you have to...reproduce the input grid directly into the output grid. Then, for each 2x2 square, tally the number of unique colors present. Append 1x1 orange pixels below that 2x2 square, identical to the amount of exclusive colors held within it."
141,8f2ea7aa.json,"['x_line', 'pixel_color', 'diagonal_line', 'pixel_color', 'pixel_color', 'pixel_color', 'pixel_color', 'diagonal_line', 'horizontal_line', 'pixel_color']","['X_line(self.temp_state, [(8, 8)], 2)', 'pixel_color([(8, 8)], 2)', 'diagonal_line(self.temp_state, [(1, 0), (8, 7)], 2)', 'pixel_color([(1, 0)], 2)', 'pixel_color([(3, 2)], 0)', 'pixel_color([(6, 5)], 0)', 'pixel_color([(8, 7)], 2)', 'diagonal_line(self.temp_state, [(8, 5), (5, 2)], 2)', 'horizontal_line(self.temp_state, [(8, 3), (8, 6)], 2)', 'pixel_color([(7, 3)], 2)']",10,TRUE,"[[2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 0, 0], [2, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 0, 2, 2, 0, 0, 0, 0], [0, 2, 2, 0, 2, 2, 0, 0, 0], [0, 0, 0, 2, 0, 0, 2, 0, 0], [0, 0, 0, 2, 2, 0, 2, 2, 0], [0, 0, 0, 0, 2, 2, 0, 2, 2]]",8f2ea7aa,216,"To make the output, you have to...imagine the original pattern is a 3x3 grid. What you need to do is copy the pattern in the 3x3 to the 9x9 grid. So you have 9 3x3 grid inside of the bigger grid(Top left, top middle, top right, middle left, middle, middle right, bottom left, bottom middle, bottom right). For example if the input pattern is a l shape you would only copy this to the top middle, middle and bottom middle grid.","To make the output, you have to...imagine the original pattern is a 9x9 grid. What you need to do is copy the pattern in the 9x9 to the 3x3 grid. So you have 3 3x3 grid inside of the bigger grid(Top left, top middle, top right, middle left, middle, middle right, bottom left, bottom middle, bottom right). For example if the input pattern is a l shape you would only copy this to the top left, left and bottom left grid.","To make the output, you have to...consider the original pattern is a 3x3 grid. What you need to do is mirror the pattern in the 3x3 to the 9x9 grid. Instead, you have 9 3x3 grid outside of the bigger grid(Top left, top middle, top right, middle left, middle, middle right, bottom left, bottom middle, bottom right). For instance if the input pattern is a l shape you would only mirror this to the top right, right and bottom right grid.","To make the output, you have to...visualize the original pattern is a 3x3 grid. What you need to do is rotate the pattern In the 3x3 to the 9x9 grid. Therefore, you have 9 3x3 grid underneath of the bigger grid(Top left, top middle, top right, middle left, middle, middle right, bottom left, bottom middle, bottom right). For example if the input pattern is a l shape you would only rotate this to the top middle, center and bottom middle grid.","To make the output, you have to...understand the original pattern is a 3x3 grid. What you need to do is translate the pattern in the 3x3 to the 9x9 grid. As a result, you have 9 3x3 grid around the bigger grid(Top left, top middle, top right, middle left, middle, middle right, bottom left, bottom middle, bottom right). For instance if the input pattern is a square shape you would only translate this to the top middle, central and bottom middle grid."
86,5521c0d9.json,"['flip_vertical', 'move_down', 'move_down', 'move_down', 'move_down', 'obj_color', 'horizontal_line', 'horizontal_line', 'horizontal_line', 'vertical_line']","['vertical_flip(temp_state)', 'move_down(self.temp_state, object1)', 'move_down(self.temp_state, object2)', 'move_down(self.temp_state, object2)', 'move_down(self.temp_state, object2)', 'obj_color(self.temp_state, object3, 0)', 'horizontal_line(self.temp_state, [(11, 14), (11, 9)], 1)', 'horizontal_line(self.temp_state, [(10, 9), (10, 14)], 1)', 'horizontal_line(self.temp_state, [(9, 9), (9, 14)], 1)', 'vertical_line(self.temp_state, [(8, 14), (12, 14)], 1)']",10,TRUE,"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",5521c0d9,127,"To make the output, you have to...count how many rows each object contains and move it up that same amount of rows.","To make the output, you have to...count how many columns each object contains and move it down that same amount of rows.","To make the output, you have to...randomly count how many rows each object contains and move it up that same amount of columns.","To make the output, you have to...estimate how many rows each object contains and move it up that same amount of rows.","To make the output, you have to...count how many rows each object contains and move it left that same amount of rows."
